{
  "mcp_servers": [
    {
      "url": "https://github.com/screenshotone/mcp/\\",
      "source": "https://github.com/modelcontextprotocol/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "github.com",
        "owner": "modelcontextprotocol",
        "repo": "servers",
        "full_url": "https://github.com/modelcontextprotocol/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers\\",
      "source": "https://github.com/modelcontextprotocol/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "github.com",
        "owner": "modelcontextprotocol",
        "repo": "servers",
        "full_url": "https://github.com/modelcontextprotocol/servers"
      }
    },
    {
      "url": "https://github.com/screenshotone/mcp/",
      "source": "https://github.com/modelcontextprotocol/servers",
      "confidence": "high",
      "needs_review": false,
      "source_repo": {
        "platform": "github.com",
        "owner": "modelcontextprotocol",
        "repo": "servers",
        "full_url": "https://github.com/modelcontextprotocol/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers",
      "source": "https://github.com/modelcontextprotocol/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "github.com",
        "owner": "modelcontextprotocol",
        "repo": "servers",
        "full_url": "https://github.com/modelcontextprotocol/servers"
      }
    },
    {
      "url": "https://github.com/modelcontextprotocol/typescript-sdk",
      "source": "https://github.com/modelcontextprotocol/servers",
      "confidence": "medium",
      "needs_review": true,
      "context": "The servers in this repository showcase the versatility and extensibility of MCP, demonstrating how ",
      "source_repo": {
        "platform": "github.com",
        "owner": "modelcontextprotocol",
        "repo": "servers",
        "full_url": "https://github.com/modelcontextprotocol/servers"
      }
    },
    {
      "url": "https://github.com/modelcontextprotocol/python-sdk",
      "source": "https://github.com/modelcontextprotocol/servers",
      "confidence": "medium",
      "needs_review": true,
      "context": "The servers in this repository showcase the versatility and extensibility of MCP, demonstrating how ",
      "source_repo": {
        "platform": "github.com",
        "owner": "modelcontextprotocol",
        "repo": "servers",
        "full_url": "https://github.com/modelcontextprotocol/servers"
      }
    },
    {
      "url": "https://modelcontextprotocol.io/introduction",
      "source": "https://github.com/modelcontextprotocol/servers",
      "confidence": "medium",
      "needs_review": true,
      "context": "Interested in creating your own MCP server? Visit the official documentation at modelcontextprotocol",
      "source_repo": {
        "platform": "github.com",
        "owner": "modelcontextprotocol",
        "repo": "servers",
        "full_url": "https://github.com/modelcontextprotocol/servers"
      }
    },
    {
      "url": "https://github.com/modelcontextprotocol/servers#-contributing",
      "source": "https://github.com/modelcontextprotocol/servers",
      "confidence": "medium",
      "needs_review": true,
      "context": "Interested in creating your own MCP server? Visit the official documentation at modelcontextprotocol",
      "source_repo": {
        "platform": "github.com",
        "owner": "modelcontextprotocol",
        "repo": "servers",
        "full_url": "https://github.com/modelcontextprotocol/servers"
      }
    },
    {
      "url": "https://insiders.vscode.dev/redirect/mcp/install?name=%4021st-dev%2Fmagic\\u0026amp;config=%7B%22command%22%3A%22npx%22%2C%22args%22%3A%5B%22-y%22%2C%22%4021st-dev%2Fmagic%40latest%22%5D%2C%22env%22%3A%7B%22API_KEY%22%3A%22%24%7Binput%3AapiKey%7D%22%7D%7D\\u0026amp;inputs=%5B%7B%22type%22%3A%22promptString%22%2C%22id%22%3A%22apiKey%22%2C%22description%22%3A%2221st.dev+Magic+API+Key%22%2C%22password%22%3Atrue%7D%5D\\",
      "source": "https://github.com/21st-dev/magic-mcp",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "github.com",
        "owner": "21st-dev",
        "repo": "magic-mcp",
        "full_url": "https://github.com/21st-dev/magic-mcp"
      }
    },
    {
      "url": "https://insiders.vscode.dev/redirect/mcp/install?name=%4021st-dev%2Fmagic\\u0026amp;config=%7B%22command%22%3A%22npx%22%2C%22args%22%3A%5B%22-y%22%2C%22%4021st-dev%2Fmagic%40latest%22%5D%2C%22env%22%3A%7B%22API_KEY%22%3A%22%24%7Binput%3AapiKey%7D%22%7D%7D\\u0026amp;inputs=%5B%7B%22type%22%3A%22promptString%22%2C%22id%22%3A%22apiKey%22%2C%22description%22%3A%2221st.dev+Magic+API+Key%22%2C%22password%22%3Atrue%7D%5D\\u0026amp;quality=insiders\\",
      "source": "https://github.com/21st-dev/magic-mcp",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "github.com",
        "owner": "21st-dev",
        "repo": "magic-mcp",
        "full_url": "https://github.com/21st-dev/magic-mcp"
      }
    },
    {
      "url": "https://insiders.vscode.dev/redirect/mcp/install?name=%4021st-dev%2Fmagic&amp;config=%7B%22command%22%3A%22npx%22%2C%22args%22%3A%5B%22-y%22%2C%22%4021st-dev%2Fmagic%40latest%22%5D%2C%22env%22%3A%7B%22API_KEY%22%3A%22%24%7Binput%3AapiKey%7D%22%7D%7D&amp;inputs=%5B%7B%22type%22%3A%22promptString%22%2C%22id%22%3A%22apiKey%22%2C%22description%22%3A%2221st.dev+Magic+API+Key%22%2C%22password%22%3Atrue%7D%5D",
      "source": "https://github.com/21st-dev/magic-mcp",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "github.com",
        "owner": "21st-dev",
        "repo": "magic-mcp",
        "full_url": "https://github.com/21st-dev/magic-mcp"
      }
    },
    {
      "url": "https://insiders.vscode.dev/redirect/mcp/install?name=%4021st-dev%2Fmagic&amp;config=%7B%22command%22%3A%22npx%22%2C%22args%22%3A%5B%22-y%22%2C%22%4021st-dev%2Fmagic%40latest%22%5D%2C%22env%22%3A%7B%22API_KEY%22%3A%22%24%7Binput%3AapiKey%7D%22%7D%7D&amp;inputs=%5B%7B%22type%22%3A%22promptString%22%2C%22id%22%3A%22apiKey%22%2C%22description%22%3A%2221st.dev+Magic+API+Key%22%2C%22password%22%3Atrue%7D%5D&amp;quality=insiders",
      "source": "https://github.com/21st-dev/magic-mcp",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "github.com",
        "owner": "21st-dev",
        "repo": "magic-mcp",
        "full_url": "https://github.com/21st-dev/magic-mcp"
      }
    },
    {
      "url": "https://21st.dev/magic",
      "source": "https://github.com/21st-dev/magic-mcp",
      "confidence": "medium",
      "needs_review": true,
      "context": "\n        It's like v0 but in your Cursor/WindSurf/Cline. 21st dev Magic MCP server for working with ",
      "source_repo": {
        "platform": "github.com",
        "owner": "21st-dev",
        "repo": "magic-mcp",
        "full_url": "https://github.com/21st-dev/magic-mcp"
      }
    },
    {
      "url": "https://github.com/21st-dev/magic-mcp/stargazers",
      "source": "https://github.com/21st-dev/magic-mcp",
      "confidence": "medium",
      "needs_review": true,
      "context": "\n        It's like v0 but in your Cursor/WindSurf/Cline. 21st dev Magic MCP server for working with ",
      "source_repo": {
        "platform": "github.com",
        "owner": "21st-dev",
        "repo": "magic-mcp",
        "full_url": "https://github.com/21st-dev/magic-mcp"
      }
    },
    {
      "url": "https://github.com/21st-dev/magic-mcp#readme-ov-file",
      "source": "https://github.com/21st-dev/magic-mcp",
      "confidence": "medium",
      "needs_review": true,
      "context": "\n        It's like v0 but in your Cursor/WindSurf/Cline. 21st dev Magic MCP server for working with ",
      "source_repo": {
        "platform": "github.com",
        "owner": "21st-dev",
        "repo": "magic-mcp",
        "full_url": "https://github.com/21st-dev/magic-mcp"
      }
    },
    {
      "url": "https://github.com/Adfin-Engineering/mcp-server-adfin/stargazers",
      "source": "https://github.com/Adfin-Engineering/mcp-server-adfin",
      "confidence": "medium",
      "needs_review": true,
      "context": "\n        A Model Context Protocol Server for connecting with Adfin APIs \n      ",
      "source_repo": {
        "platform": "github.com",
        "owner": "Adfin-Engineering",
        "repo": "mcp-server-adfin",
        "full_url": "https://github.com/Adfin-Engineering/mcp-server-adfin"
      }
    },
    {
      "url": "https://github.com/Adfin-Engineering/mcp-server-adfin/forks",
      "source": "https://github.com/Adfin-Engineering/mcp-server-adfin",
      "confidence": "medium",
      "needs_review": true,
      "context": "\n        A Model Context Protocol Server for connecting with Adfin APIs \n      ",
      "source_repo": {
        "platform": "github.com",
        "owner": "Adfin-Engineering",
        "repo": "mcp-server-adfin",
        "full_url": "https://github.com/Adfin-Engineering/mcp-server-adfin"
      }
    },
    {
      "url": "https://github.com/Adfin-Engineering/mcp-server-adfin#readme-ov-file",
      "source": "https://github.com/Adfin-Engineering/mcp-server-adfin",
      "confidence": "medium",
      "needs_review": true,
      "context": "\n        A Model Context Protocol Server for connecting with Adfin APIs \n      ",
      "source_repo": {
        "platform": "github.com",
        "owner": "Adfin-Engineering",
        "repo": "mcp-server-adfin",
        "full_url": "https://github.com/Adfin-Engineering/mcp-server-adfin"
      }
    },
    {
      "url": "https://github.com/Adfin-Engineering/mcp-server-adfin/activity",
      "source": "https://github.com/Adfin-Engineering/mcp-server-adfin",
      "confidence": "medium",
      "needs_review": true,
      "context": "\n        A Model Context Protocol Server for connecting with Adfin APIs \n      ",
      "source_repo": {
        "platform": "github.com",
        "owner": "Adfin-Engineering",
        "repo": "mcp-server-adfin",
        "full_url": "https://github.com/Adfin-Engineering/mcp-server-adfin"
      }
    },
    {
      "url": "https://docs.agentql.com/integrations/mcp",
      "source": "https://github.com/tinyfish-io/agentql-mcp",
      "confidence": "medium",
      "needs_review": true,
      "context": "\n        Model Context Protocol server that integrates AgentQL's data extraction capabilities.\n     ",
      "source_repo": {
        "platform": "github.com",
        "owner": "tinyfish-io",
        "repo": "agentql-mcp",
        "full_url": "https://github.com/tinyfish-io/agentql-mcp"
      }
    },
    {
      "url": "https://github.com/tinyfish-io/agentql-mcp/blob/main/LICENSE",
      "source": "https://github.com/tinyfish-io/agentql-mcp",
      "confidence": "medium",
      "needs_review": true,
      "context": "\n        Model Context Protocol server that integrates AgentQL's data extraction capabilities.\n     ",
      "source_repo": {
        "platform": "github.com",
        "owner": "tinyfish-io",
        "repo": "agentql-mcp",
        "full_url": "https://github.com/tinyfish-io/agentql-mcp"
      }
    },
    {
      "url": "https://dev.agentql.com",
      "source": "https://github.com/tinyfish-io/agentql-mcp",
      "confidence": "medium",
      "needs_review": true,
      "context": "To use AgentQL MCP Server to extract data from web pages, you need to install it via npm, get an API",
      "source_repo": {
        "platform": "github.com",
        "owner": "tinyfish-io",
        "repo": "agentql-mcp",
        "full_url": "https://github.com/tinyfish-io/agentql-mcp"
      }
    },
    {
      "url": "https://github.com/tinyfish-io/agentql-mcp#install-the-package",
      "source": "https://github.com/tinyfish-io/agentql-mcp",
      "confidence": "medium",
      "needs_review": true,
      "context": "To use AgentQL MCP Server to extract data from web pages, you need to install it via npm, get an API",
      "source_repo": {
        "platform": "github.com",
        "owner": "tinyfish-io",
        "repo": "agentql-mcp",
        "full_url": "https://github.com/tinyfish-io/agentql-mcp"
      }
    },
    {
      "url": "https://github.com/tinyfish-io/agentql-mcp#debugging",
      "source": "https://github.com/tinyfish-io/agentql-mcp",
      "confidence": "medium",
      "needs_review": true,
      "context": "Don't forget to remove the default AgentQL MCP server config to not confuse Claude with two similar ",
      "source_repo": {
        "platform": "github.com",
        "owner": "tinyfish-io",
        "repo": "agentql-mcp",
        "full_url": "https://github.com/tinyfish-io/agentql-mcp"
      }
    },
    {
      "url": "https://github.com/modelcontextprotocol/inspector",
      "source": "https://github.com/tinyfish-io/agentql-mcp",
      "confidence": "medium",
      "needs_review": true,
      "context": "Don't forget to remove the default AgentQL MCP server config to not confuse Claude with two similar ",
      "source_repo": {
        "platform": "github.com",
        "owner": "tinyfish-io",
        "repo": "agentql-mcp",
        "full_url": "https://github.com/tinyfish-io/agentql-mcp"
      }
    },
    {
      "url": "https://github.com/topics/agent",
      "source": "https://github.com/tinyfish-io/agentql-mcp",
      "confidence": "medium",
      "needs_review": true,
      "context": "\n        Model Context Protocol server that integrates AgentQL's data extraction capabilities.\n     ",
      "source_repo": {
        "platform": "github.com",
        "owner": "tinyfish-io",
        "repo": "agentql-mcp",
        "full_url": "https://github.com/tinyfish-io/agentql-mcp"
      }
    },
    {
      "url": "https://github.com/Aiven-Open/mcp-aiven/blob/main/LICENSE",
      "source": "https://github.com/Aiven-Open/mcp-aiven",
      "confidence": "medium",
      "needs_review": true,
      "context": "\n        Model Context Protocol server for Aiven\n      ",
      "source_repo": {
        "platform": "github.com",
        "owner": "Aiven-Open",
        "repo": "mcp-aiven",
        "full_url": "https://github.com/Aiven-Open/mcp-aiven"
      }
    },
    {
      "url": "https://github.com/Aiven-Open/mcp-aiven/stargazers",
      "source": "https://github.com/Aiven-Open/mcp-aiven",
      "confidence": "medium",
      "needs_review": true,
      "context": "\n        Model Context Protocol server for Aiven\n      ",
      "source_repo": {
        "platform": "github.com",
        "owner": "Aiven-Open",
        "repo": "mcp-aiven",
        "full_url": "https://github.com/Aiven-Open/mcp-aiven"
      }
    },
    {
      "url": "https://github.com/Aiven-Open/mcp-aiven#environment-variables",
      "source": "https://github.com/Aiven-Open/mcp-aiven",
      "confidence": "medium",
      "needs_review": true,
      "context": "For easy testing, you can run mcp dev mcp_aiven/mcp_server.py to start the MCP server.",
      "source_repo": {
        "platform": "github.com",
        "owner": "Aiven-Open",
        "repo": "mcp-aiven",
        "full_url": "https://github.com/Aiven-Open/mcp-aiven"
      }
    },
    {
      "url": "https://github.com/Aiven-Open/mcp-aiven#required-variables",
      "source": "https://github.com/Aiven-Open/mcp-aiven",
      "confidence": "medium",
      "needs_review": true,
      "context": "For easy testing, you can run mcp dev mcp_aiven/mcp_server.py to start the MCP server.",
      "source_repo": {
        "platform": "github.com",
        "owner": "Aiven-Open",
        "repo": "mcp-aiven",
        "full_url": "https://github.com/Aiven-Open/mcp-aiven"
      }
    },
    {
      "url": "https://github.com/Aiven-Open/mcp-aiven#readme-ov-file",
      "source": "https://github.com/Aiven-Open/mcp-aiven",
      "confidence": "medium",
      "needs_review": true,
      "context": "\n        Model Context Protocol server for Aiven\n      ",
      "source_repo": {
        "platform": "github.com",
        "owner": "Aiven-Open",
        "repo": "mcp-aiven",
        "full_url": "https://github.com/Aiven-Open/mcp-aiven"
      }
    },
    {
      "url": "https://github.com/Aiven-Open/mcp-aiven#Apache-2.0-1-ov-file",
      "source": "https://github.com/Aiven-Open/mcp-aiven",
      "confidence": "medium",
      "needs_review": true,
      "context": "\n        Model Context Protocol server for Aiven\n      ",
      "source_repo": {
        "platform": "github.com",
        "owner": "Aiven-Open",
        "repo": "mcp-aiven",
        "full_url": "https://github.com/Aiven-Open/mcp-aiven"
      }
    },
    {
      "url": "https://iotdb.apache.org/",
      "source": "https://github.com/apache/iotdb-mcp-server",
      "confidence": "medium",
      "needs_review": true,
      "context": "\n        Apache IoTDB MCP Server\n      ",
      "source_repo": {
        "platform": "github.com",
        "owner": "apache",
        "repo": "iotdb-mcp-server",
        "full_url": "https://github.com/apache/iotdb-mcp-server"
      }
    },
    {
      "url": "https://github.com/apache/iotdb-mcp-server/blob/main/LICENSE",
      "source": "https://github.com/apache/iotdb-mcp-server",
      "confidence": "medium",
      "needs_review": true,
      "context": "\n        Apache IoTDB MCP Server\n      ",
      "source_repo": {
        "platform": "github.com",
        "owner": "apache",
        "repo": "iotdb-mcp-server",
        "full_url": "https://github.com/apache/iotdb-mcp-server"
      }
    },
    {
      "url": "https://github.com/apache/iotdb-mcp-server#macos",
      "source": "https://github.com/apache/iotdb-mcp-server",
      "confidence": "medium",
      "needs_review": true,
      "context": "Configure the MCP server in Claude Desktop's configuration file:",
      "source_repo": {
        "platform": "github.com",
        "owner": "apache",
        "repo": "iotdb-mcp-server",
        "full_url": "https://github.com/apache/iotdb-mcp-server"
      }
    },
    {
      "url": "https://github.com/apache/iotdb-mcp-server#windows",
      "source": "https://github.com/apache/iotdb-mcp-server",
      "confidence": "medium",
      "needs_review": true,
      "context": "Configure the MCP server in Claude Desktop's configuration file:",
      "source_repo": {
        "platform": "github.com",
        "owner": "apache",
        "repo": "iotdb-mcp-server",
        "full_url": "https://github.com/apache/iotdb-mcp-server"
      }
    },
    {
      "url": "https://github.com/topics/python",
      "source": "https://github.com/apache/iotdb-mcp-server",
      "confidence": "medium",
      "needs_review": true,
      "context": "\n        Apache IoTDB MCP Server\n      ",
      "source_repo": {
        "platform": "github.com",
        "owner": "apache",
        "repo": "iotdb-mcp-server",
        "full_url": "https://github.com/apache/iotdb-mcp-server"
      }
    },
    {
      "url": "https://insiders.vscode.dev/redirect/mcp/install?name=actors-mcp-server\\u0026amp;config=%7B%22command%22%3A%22npx%22%2C%22args%22%3A%5B%22-y%22%2C%22%40apify%2Factors-mcp-server%22%5D%2C%22env%22%3A%7B%22APIFY_TOKEN%22%3A%22%24%7Binput%3Aapify_token%7D%22%7D%7D\\u0026amp;inputs=%5B%7B%22type%22%3A%22promptString%22%2C%22id%22%3A%22apify_token%22%2C%22description%22%3A%22Apify+API+Token%22%2C%22password%22%3Atrue%7D%5D\\",
      "source": "https://github.com/apify/actors-mcp-server",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "github.com",
        "owner": "apify",
        "repo": "actors-mcp-server",
        "full_url": "https://github.com/apify/actors-mcp-server"
      }
    },
    {
      "url": "https://insiders.vscode.dev/redirect/mcp/install?name=actors-mcp-server\\u0026amp;config=%7B%22command%22%3A%22npx%22%2C%22args%22%3A%5B%22-y%22%2C%22%40apify%2Factors-mcp-server%22%5D%2C%22env%22%3A%7B%22APIFY_TOKEN%22%3A%22%24%7Binput%3Aapify_token%7D%22%7D%7D\\u0026amp;inputs=%5B%7B%22type%22%3A%22promptString%22%2C%22id%22%3A%22apify_token%22%2C%22description%22%3A%22Apify+API+Token%22%2C%22password%22%3Atrue%7D%5D\\u0026amp;quality=insiders\\",
      "source": "https://github.com/apify/actors-mcp-server",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "github.com",
        "owner": "apify",
        "repo": "actors-mcp-server",
        "full_url": "https://github.com/apify/actors-mcp-server"
      }
    },
    {
      "url": "https://insiders.vscode.dev/redirect/mcp/install?name=actors-mcp-server&amp;config=%7B%22command%22%3A%22npx%22%2C%22args%22%3A%5B%22-y%22%2C%22%40apify%2Factors-mcp-server%22%5D%2C%22env%22%3A%7B%22APIFY_TOKEN%22%3A%22%24%7Binput%3Aapify_token%7D%22%7D%7D&amp;inputs=%5B%7B%22type%22%3A%22promptString%22%2C%22id%22%3A%22apify_token%22%2C%22description%22%3A%22Apify+API+Token%22%2C%22password%22%3Atrue%7D%5D",
      "source": "https://github.com/apify/actors-mcp-server",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "github.com",
        "owner": "apify",
        "repo": "actors-mcp-server",
        "full_url": "https://github.com/apify/actors-mcp-server"
      }
    },
    {
      "url": "https://insiders.vscode.dev/redirect/mcp/install?name=actors-mcp-server&amp;config=%7B%22command%22%3A%22npx%22%2C%22args%22%3A%5B%22-y%22%2C%22%40apify%2Factors-mcp-server%22%5D%2C%22env%22%3A%7B%22APIFY_TOKEN%22%3A%22%24%7Binput%3Aapify_token%7D%22%7D%7D&amp;inputs=%5B%7B%22type%22%3A%22promptString%22%2C%22id%22%3A%22apify_token%22%2C%22description%22%3A%22Apify+API+Token%22%2C%22password%22%3Atrue%7D%5D&amp;quality=insiders",
      "source": "https://github.com/apify/actors-mcp-server",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "github.com",
        "owner": "apify",
        "repo": "actors-mcp-server",
        "full_url": "https://github.com/apify/actors-mcp-server"
      }
    },
    {
      "url": "https://apify.com/store",
      "source": "https://github.com/apify/actors-mcp-server",
      "confidence": "medium",
      "needs_review": true,
      "context": "Implementation of an MCP server for all Apify Actors.\nThis server enables interaction with one or mo",
      "source_repo": {
        "platform": "github.com",
        "owner": "apify",
        "repo": "actors-mcp-server",
        "full_url": "https://github.com/apify/actors-mcp-server"
      }
    },
    {
      "url": "https://apify.com/apify/actors-mcp-server",
      "source": "https://github.com/apify/actors-mcp-server",
      "confidence": "medium",
      "needs_review": true,
      "context": "Implementation of an MCP server for all Apify Actors.\nThis server enables interaction with one or mo",
      "source_repo": {
        "platform": "github.com",
        "owner": "apify",
        "repo": "actors-mcp-server",
        "full_url": "https://github.com/apify/actors-mcp-server"
      }
    },
    {
      "url": "https://apify.com/apify/facebook-posts-scraper",
      "source": "https://github.com/apify/actors-mcp-server",
      "confidence": "medium",
      "needs_review": true,
      "context": "The MCP Server Actor allows an AI assistant to use any Apify Actor as a tool to perform a specific t",
      "source_repo": {
        "platform": "github.com",
        "owner": "apify",
        "repo": "actors-mcp-server",
        "full_url": "https://github.com/apify/actors-mcp-server"
      }
    },
    {
      "url": "https://claude.ai/download",
      "source": "https://github.com/apify/actors-mcp-server",
      "confidence": "medium",
      "needs_review": true,
      "context": "To interact with the Apify MCP server, you can use MCP clients such as:",
      "source_repo": {
        "platform": "github.com",
        "owner": "apify",
        "repo": "actors-mcp-server",
        "full_url": "https://github.com/apify/actors-mcp-server"
      }
    },
    {
      "url": "https://code.visualstudio.com/",
      "source": "https://github.com/apify/actors-mcp-server",
      "confidence": "medium",
      "needs_review": true,
      "context": "To interact with the Apify MCP server, you can use MCP clients such as:",
      "source_repo": {
        "platform": "github.com",
        "owner": "apify",
        "repo": "actors-mcp-server",
        "full_url": "https://github.com/apify/actors-mcp-server"
      }
    },
    {
      "url": "https://raw.githubusercontent.com/apify/actors-mcp-server/refs/heads/master/docs/actors-mcp-server.png",
      "source": "https://github.com/apify/actors-mcp-server",
      "confidence": "medium",
      "needs_review": true,
      "context": "When you have Actors integrated with the MCP server, you can ask:",
      "source_repo": {
        "platform": "github.com",
        "owner": "apify",
        "repo": "actors-mcp-server",
        "full_url": "https://github.com/apify/actors-mcp-server"
      }
    },
    {
      "url": "https://github.com/apify/actors-mcp-server#-roadmap-march-2025",
      "source": "https://github.com/apify/actors-mcp-server",
      "confidence": "medium",
      "needs_review": true,
      "context": "When you have Actors integrated with the MCP server, you can ask:",
      "source_repo": {
        "platform": "github.com",
        "owner": "apify",
        "repo": "actors-mcp-server",
        "full_url": "https://github.com/apify/actors-mcp-server"
      }
    },
    {
      "url": "https://blog.apify.com/what-are-ai-agents/",
      "source": "https://github.com/apify/actors-mcp-server",
      "confidence": "medium",
      "needs_review": true,
      "context": "The Apify MCP Server exposes Apify's Actors through the MCP protocol, allowing AI Agents or framewor",
      "source_repo": {
        "platform": "github.com",
        "owner": "apify",
        "repo": "actors-mcp-server",
        "full_url": "https://github.com/apify/actors-mcp-server"
      }
    },
    {
      "url": "https://apify.com/apify/rag-web-browser/input-schema",
      "source": "https://github.com/apify/actors-mcp-server",
      "confidence": "medium",
      "needs_review": true,
      "context": "The MCP server loads the Actor input schema and creates MCP tools corresponding to the Actors.\nSee t",
      "source_repo": {
        "platform": "github.com",
        "owner": "apify",
        "repo": "actors-mcp-server",
        "full_url": "https://github.com/apify/actors-mcp-server"
      }
    },
    {
      "url": "https://github.com/apify/actors-mcp-server#helper-tools",
      "source": "https://github.com/apify/actors-mcp-server",
      "confidence": "medium",
      "needs_review": true,
      "context": "The MCP server loads the Actor input schema and creates MCP tools corresponding to the Actors.\nSee t",
      "source_repo": {
        "platform": "github.com",
        "owner": "apify",
        "repo": "actors-mcp-server",
        "full_url": "https://github.com/apify/actors-mcp-server"
      }
    },
    {
      "url": "https://github.com/apify/actors-mcp-server#-mcp-server-actor",
      "source": "https://github.com/apify/actors-mcp-server",
      "confidence": "medium",
      "needs_review": true,
      "context": "The Apify MCP Server can be used in two ways: as an Apify Actor running on the Apify platform\nor as ",
      "source_repo": {
        "platform": "github.com",
        "owner": "apify",
        "repo": "actors-mcp-server",
        "full_url": "https://github.com/apify/actors-mcp-server"
      }
    },
    {
      "url": "https://github.com/apify/actors-mcp-server#standby-web-server",
      "source": "https://github.com/apify/actors-mcp-server",
      "confidence": "medium",
      "needs_review": true,
      "context": "The Apify MCP Server can be used in two ways: as an Apify Actor running on the Apify platform\nor as ",
      "source_repo": {
        "platform": "github.com",
        "owner": "apify",
        "repo": "actors-mcp-server",
        "full_url": "https://github.com/apify/actors-mcp-server"
      }
    },
    {
      "url": "https://docs.apify.com/platform/actors/running/tasks",
      "source": "https://github.com/apify/actors-mcp-server",
      "confidence": "medium",
      "needs_review": true,
      "context": "It is also possible to start the MCP server with a different set of Actors.\nTo do this, create a tas",
      "source_repo": {
        "platform": "github.com",
        "owner": "apify",
        "repo": "actors-mcp-server",
        "full_url": "https://github.com/apify/actors-mcp-server"
      }
    },
    {
      "url": "https://github.com/apify/actors-mcp-server#-mcp-server-at-a-local-host",
      "source": "https://github.com/apify/actors-mcp-server",
      "confidence": "medium",
      "needs_review": true,
      "context": "Claude Desktop currently lacks SSE support, but you can use it with Stdio transport; see MCP Server ",
      "source_repo": {
        "platform": "github.com",
        "owner": "apify",
        "repo": "actors-mcp-server",
        "full_url": "https://github.com/apify/actors-mcp-server"
      }
    },
    {
      "url": "https://modelcontextprotocol.io/quickstart/user",
      "source": "https://github.com/apify/actors-mcp-server",
      "confidence": "medium",
      "needs_review": true,
      "context": "To configure Claude Desktop to work with the MCP server, follow these steps. For a detailed guide, r",
      "source_repo": {
        "platform": "github.com",
        "owner": "apify",
        "repo": "actors-mcp-server",
        "full_url": "https://github.com/apify/actors-mcp-server"
      }
    },
    {
      "url": "https://github.com/aaddrick/claude-desktop-debian",
      "source": "https://github.com/apify/actors-mcp-server",
      "confidence": "medium",
      "needs_review": true,
      "context": "To configure Claude Desktop to work with the MCP server, follow these steps. For a detailed guide, r",
      "source_repo": {
        "platform": "github.com",
        "owner": "apify",
        "repo": "actors-mcp-server",
        "full_url": "https://github.com/apify/actors-mcp-server"
      }
    },
    {
      "url": "https://github.com/apify/actors-mcp-server#vs-code-1",
      "source": "https://github.com/apify/actors-mcp-server",
      "confidence": "medium",
      "needs_review": true,
      "context": "You can manually install the Apify MCP Server in VS Code. First, click one of the install buttons at",
      "source_repo": {
        "platform": "github.com",
        "owner": "apify",
        "repo": "actors-mcp-server",
        "full_url": "https://github.com/apify/actors-mcp-server"
      }
    },
    {
      "url": "https://insiders.vscode.dev/redirect/mcp/install?name=actors-mcp-server&config=%7B%22command%22%3A%22npx%22%2C%22args%22%3A%5B%22-y%22%2C%22%40apify%2Factors-mcp-server%22%5D%2C%22env%22%3A%7B%22APIFY_TOKEN%22%3A%22%24%7Binput%3Aapify_token%7D%22%7D%7D&inputs=%5B%7B%22type%22%3A%22promptString%22%2C%22id%22%3A%22apify_token%22%2C%22description%22%3A%22Apify+API+Token%22%2C%22password%22%3Atrue%7D%5D",
      "source": "https://github.com/apify/actors-mcp-server",
      "confidence": "medium",
      "needs_review": true,
      "context": "You can manually install the Apify MCP Server in VS Code. First, click one of the install buttons at",
      "source_repo": {
        "platform": "github.com",
        "owner": "apify",
        "repo": "actors-mcp-server",
        "full_url": "https://github.com/apify/actors-mcp-server"
      }
    },
    {
      "url": "https://github.com/apify/actors-mcp-server#debugging-npm-package-apifyactors-mcp-server-with-modelcontextprotocolinspector",
      "source": "https://github.com/apify/actors-mcp-server",
      "confidence": "medium",
      "needs_review": true,
      "context": "You can manually install the Apify MCP Server in VS Code. First, click one of the install buttons at",
      "source_repo": {
        "platform": "github.com",
        "owner": "apify",
        "repo": "actors-mcp-server",
        "full_url": "https://github.com/apify/actors-mcp-server"
      }
    },
    {
      "url": "https://smithery.ai/server/@apify/actors-mcp-server",
      "source": "https://github.com/apify/actors-mcp-server",
      "confidence": "medium",
      "needs_review": true,
      "context": "To install Apify Actors MCP Server for Claude Desktop automatically via Smithery:",
      "source_repo": {
        "platform": "github.com",
        "owner": "apify",
        "repo": "actors-mcp-server",
        "full_url": "https://github.com/apify/actors-mcp-server"
      }
    },
    {
      "url": "https://github.com/apimatic/apimatic-validator-mcp/stargazers",
      "source": "https://github.com/apimatic/apimatic-validator-mcp",
      "confidence": "medium",
      "needs_review": true,
      "context": "\n        APIMatic Validator MCP Server for validating OpenAPI specs via APIMatic's API with MCP\n    ",
      "source_repo": {
        "platform": "github.com",
        "owner": "apimatic",
        "repo": "apimatic-validator-mcp",
        "full_url": "https://github.com/apimatic/apimatic-validator-mcp"
      }
    },
    {
      "url": "https://github.com/apimatic/apimatic-validator-mcp/forks",
      "source": "https://github.com/apimatic/apimatic-validator-mcp",
      "confidence": "medium",
      "needs_review": true,
      "context": "\n        APIMatic Validator MCP Server for validating OpenAPI specs via APIMatic's API with MCP\n    ",
      "source_repo": {
        "platform": "github.com",
        "owner": "apimatic",
        "repo": "apimatic-validator-mcp",
        "full_url": "https://github.com/apimatic/apimatic-validator-mcp"
      }
    },
    {
      "url": "https://github.com/apimatic/apimatic-validator-mcp#windows",
      "source": "https://github.com/apimatic/apimatic-validator-mcp",
      "confidence": "medium",
      "needs_review": true,
      "context": "Modify the claude_desktop_config.json file to integrate the MCP server. If the file does not exist, ",
      "source_repo": {
        "platform": "github.com",
        "owner": "apimatic",
        "repo": "apimatic-validator-mcp",
        "full_url": "https://github.com/apimatic/apimatic-validator-mcp"
      }
    },
    {
      "url": "https://github.com/apimatic/apimatic-validator-mcp#macoslinux",
      "source": "https://github.com/apimatic/apimatic-validator-mcp",
      "confidence": "medium",
      "needs_review": true,
      "context": "Modify the claude_desktop_config.json file to integrate the MCP server. If the file does not exist, ",
      "source_repo": {
        "platform": "github.com",
        "owner": "apimatic",
        "repo": "apimatic-validator-mcp",
        "full_url": "https://github.com/apimatic/apimatic-validator-mcp"
      }
    },
    {
      "url": "https://github.com/apimatic/apimatic-validator-mcp#add-the-mcp-server-to-the-configuration",
      "source": "https://github.com/apimatic/apimatic-validator-mcp",
      "confidence": "medium",
      "needs_review": true,
      "context": "Add the MCP Server to the Configuration",
      "source_repo": {
        "platform": "github.com",
        "owner": "apimatic",
        "repo": "apimatic-validator-mcp",
        "full_url": "https://github.com/apimatic/apimatic-validator-mcp"
      }
    },
    {
      "url": "https://github.com/apimatic/apimatic-validator-mcp#usage",
      "source": "https://github.com/apimatic/apimatic-validator-mcp",
      "confidence": "medium",
      "needs_review": true,
      "context": "Add the MCP Server to the Configuration",
      "source_repo": {
        "platform": "github.com",
        "owner": "apimatic",
        "repo": "apimatic-validator-mcp",
        "full_url": "https://github.com/apimatic/apimatic-validator-mcp"
      }
    },
    {
      "url": "https://github.com/apimatic/apimatic-validator-mcp#readme-ov-file",
      "source": "https://github.com/apimatic/apimatic-validator-mcp",
      "confidence": "medium",
      "needs_review": true,
      "context": "\n        APIMatic Validator MCP Server for validating OpenAPI specs via APIMatic's API with MCP\n    ",
      "source_repo": {
        "platform": "github.com",
        "owner": "apimatic",
        "repo": "apimatic-validator-mcp",
        "full_url": "https://github.com/apimatic/apimatic-validator-mcp"
      }
    },
    {
      "url": "https://github.com/apimatic/apimatic-validator-mcp/activity",
      "source": "https://github.com/apimatic/apimatic-validator-mcp",
      "confidence": "medium",
      "needs_review": true,
      "context": "\n        APIMatic Validator MCP Server for validating OpenAPI specs via APIMatic's API with MCP\n    ",
      "source_repo": {
        "platform": "github.com",
        "owner": "apimatic",
        "repo": "apimatic-validator-mcp",
        "full_url": "https://github.com/apimatic/apimatic-validator-mcp"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/tigix0yf4b\\",
      "source": "https://github.com/datastax/astra-db-mcp",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "github.com",
        "owner": "datastax",
        "repo": "astra-db-mcp",
        "full_url": "https://github.com/datastax/astra-db-mcp"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/tigix0yf4b/badge\\",
      "source": "https://github.com/datastax/astra-db-mcp",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "github.com",
        "owner": "datastax",
        "repo": "astra-db-mcp",
        "full_url": "https://github.com/datastax/astra-db-mcp"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/tigix0yf4b",
      "source": "https://github.com/datastax/astra-db-mcp",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "github.com",
        "owner": "datastax",
        "repo": "astra-db-mcp",
        "full_url": "https://github.com/datastax/astra-db-mcp"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/tigix0yf4b/badge",
      "source": "https://github.com/datastax/astra-db-mcp",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "github.com",
        "owner": "datastax",
        "repo": "astra-db-mcp",
        "full_url": "https://github.com/datastax/astra-db-mcp"
      }
    },
    {
      "url": "https://github.com/datastax/astra-db-mcp/blob/main/LICENSE.md",
      "source": "https://github.com/datastax/astra-db-mcp",
      "confidence": "medium",
      "needs_review": true,
      "context": "\n        An MCP server for Astra DB workloads\n      ",
      "source_repo": {
        "platform": "github.com",
        "owner": "datastax",
        "repo": "astra-db-mcp",
        "full_url": "https://github.com/datastax/astra-db-mcp"
      }
    },
    {
      "url": "https://github.com/datastax/astra-db-mcp/stargazers",
      "source": "https://github.com/datastax/astra-db-mcp",
      "confidence": "medium",
      "needs_review": true,
      "context": "\n        An MCP server for Astra DB workloads\n      ",
      "source_repo": {
        "platform": "github.com",
        "owner": "datastax",
        "repo": "astra-db-mcp",
        "full_url": "https://github.com/datastax/astra-db-mcp"
      }
    },
    {
      "url": "https://github.com/datastax/astra-db-mcp#available-tools",
      "source": "https://github.com/datastax/astra-db-mcp",
      "confidence": "medium",
      "needs_review": true,
      "context": "From there, you can add the server by clicking the \"+ Add New MCP Server\" button, where you should b",
      "source_repo": {
        "platform": "github.com",
        "owner": "datastax",
        "repo": "astra-db-mcp",
        "full_url": "https://github.com/datastax/astra-db-mcp"
      }
    },
    {
      "url": "https://github.com/datastax/astra-db-mcp#changelog",
      "source": "https://github.com/datastax/astra-db-mcp",
      "confidence": "medium",
      "needs_review": true,
      "context": "From there, you can add the server by clicking the \"+ Add New MCP Server\" button, where you should b",
      "source_repo": {
        "platform": "github.com",
        "owner": "datastax",
        "repo": "astra-db-mcp",
        "full_url": "https://github.com/datastax/astra-db-mcp"
      }
    },
    {
      "url": "https://github.com/datastax/astra-db-mcp#readme-ov-file",
      "source": "https://github.com/datastax/astra-db-mcp",
      "confidence": "medium",
      "needs_review": true,
      "context": "\n        An MCP server for Astra DB workloads\n      ",
      "source_repo": {
        "platform": "github.com",
        "owner": "datastax",
        "repo": "astra-db-mcp",
        "full_url": "https://github.com/datastax/astra-db-mcp"
      }
    },
    {
      "url": "https://github.com/datastax/astra-db-mcp#Apache-2.0-1-ov-file",
      "source": "https://github.com/datastax/astra-db-mcp",
      "confidence": "medium",
      "needs_review": true,
      "context": "\n        An MCP server for Astra DB workloads\n      ",
      "source_repo": {
        "platform": "github.com",
        "owner": "datastax",
        "repo": "astra-db-mcp",
        "full_url": "https://github.com/datastax/astra-db-mcp"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/xz11vmv38c\\",
      "source": "https://github.com/AudienseCo/mcp-audiense-insights",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "github.com",
        "owner": "AudienseCo",
        "repo": "mcp-audiense-insights",
        "full_url": "https://github.com/AudienseCo/mcp-audiense-insights"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/xz11vmv38c/badge\\",
      "source": "https://github.com/AudienseCo/mcp-audiense-insights",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "github.com",
        "owner": "AudienseCo",
        "repo": "mcp-audiense-insights",
        "full_url": "https://github.com/AudienseCo/mcp-audiense-insights"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/xz11vmv38c",
      "source": "https://github.com/AudienseCo/mcp-audiense-insights",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "github.com",
        "owner": "AudienseCo",
        "repo": "mcp-audiense-insights",
        "full_url": "https://github.com/AudienseCo/mcp-audiense-insights"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/xz11vmv38c/badge",
      "source": "https://github.com/AudienseCo/mcp-audiense-insights",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "github.com",
        "owner": "AudienseCo",
        "repo": "mcp-audiense-insights",
        "full_url": "https://github.com/AudienseCo/mcp-audiense-insights"
      }
    },
    {
      "url": "https://audiense.com",
      "source": "https://github.com/AudienseCo/mcp-audiense-insights",
      "confidence": "medium",
      "needs_review": true,
      "context": "\n        Audiense Insights MCP Server is a server based on the Model Context Protocol (MCP) that all",
      "source_repo": {
        "platform": "github.com",
        "owner": "AudienseCo",
        "repo": "mcp-audiense-insights",
        "full_url": "https://github.com/AudienseCo/mcp-audiense-insights"
      }
    },
    {
      "url": "https://github.com/AudienseCo/mcp-audiense-insights/blob/main/LICENSE.md",
      "source": "https://github.com/AudienseCo/mcp-audiense-insights",
      "confidence": "medium",
      "needs_review": true,
      "context": "\n        Audiense Insights MCP Server is a server based on the Model Context Protocol (MCP) that all",
      "source_repo": {
        "platform": "github.com",
        "owner": "AudienseCo",
        "repo": "mcp-audiense-insights",
        "full_url": "https://github.com/AudienseCo/mcp-audiense-insights"
      }
    },
    {
      "url": "https://github.com/topics/mcp",
      "source": "https://github.com/AudienseCo/mcp-audiense-insights",
      "confidence": "medium",
      "needs_review": true,
      "context": "\n        Audiense Insights MCP Server is a server based on the Model Context Protocol (MCP) that all",
      "source_repo": {
        "platform": "github.com",
        "owner": "AudienseCo",
        "repo": "mcp-audiense-insights",
        "full_url": "https://github.com/AudienseCo/mcp-audiense-insights"
      }
    },
    {
      "url": "https://github.com/topics/web-crawler",
      "source": "https://github.com/topics/model-context-protocol",
      "confidence": "medium",
      "needs_review": true,
      "context": "Official Firecrawl MCP Server - Adds powerful web scraping to Cursor, Claude and any other LLM clien",
      "source_repo": {
        "platform": "github.com",
        "owner": "topics",
        "repo": "model-context-protocol",
        "full_url": "https://github.com/topics/model-context-protocol"
      }
    },
    {
      "url": "https://github.com/topics/web-scraping",
      "source": "https://github.com/topics/model-context-protocol",
      "confidence": "medium",
      "needs_review": true,
      "context": "Official Firecrawl MCP Server - Adds powerful web scraping to Cursor, Claude and any other LLM clien",
      "source_repo": {
        "platform": "github.com",
        "owner": "topics",
        "repo": "model-context-protocol",
        "full_url": "https://github.com/topics/model-context-protocol"
      }
    },
    {
      "url": "https://github.com/topics/markdown",
      "source": "https://github.com/topics/model-context-protocol",
      "confidence": "medium",
      "needs_review": true,
      "context": "A Model Context Protocol server for converting almost anything to Markdown",
      "source_repo": {
        "platform": "github.com",
        "owner": "topics",
        "repo": "model-context-protocol",
        "full_url": "https://github.com/topics/model-context-protocol"
      }
    },
    {
      "url": "https://github.com/topics/ocr",
      "source": "https://github.com/topics/model-context-protocol",
      "confidence": "medium",
      "needs_review": true,
      "context": "A Model Context Protocol server for converting almost anything to Markdown",
      "source_repo": {
        "platform": "github.com",
        "owner": "topics",
        "repo": "model-context-protocol",
        "full_url": "https://github.com/topics/model-context-protocol"
      }
    },
    {
      "url": "https://github.com/topics/mongo",
      "source": "https://github.com/topics/model-context-protocol?l=typescript",
      "confidence": "medium",
      "needs_review": true,
      "context": "A Model Context Protocol Server for MongoDB",
      "source_repo": {
        "platform": "github.com",
        "owner": "topics",
        "repo": "model-context-protocol",
        "full_url": "https://github.com/topics/model-context-protocol?l=typescript"
      }
    },
    {
      "url": "https://github.com/topics/mongodb",
      "source": "https://github.com/topics/model-context-protocol?l=typescript",
      "confidence": "medium",
      "needs_review": true,
      "context": "A Model Context Protocol Server for MongoDB",
      "source_repo": {
        "platform": "github.com",
        "owner": "topics",
        "repo": "model-context-protocol",
        "full_url": "https://github.com/topics/model-context-protocol?l=typescript"
      }
    },
    {
      "url": "https://github.com/topics/airtable",
      "source": "https://github.com/topics/model-context-protocol?l=typescript",
      "confidence": "medium",
      "needs_review": true,
      "context": "\ud83d\uddc2\ufe0f\ud83e\udd16 Airtable Model Context Protocol Server, for allowing AI systems to interact with your Airtable b",
      "source_repo": {
        "platform": "github.com",
        "owner": "topics",
        "repo": "model-context-protocol",
        "full_url": "https://github.com/topics/model-context-protocol?l=typescript"
      }
    },
    {
      "url": "https://github.com/topics/model-context-protocol",
      "source": "https://github.com/topics/model-context-protocol?l=typescript",
      "confidence": "medium",
      "needs_review": true,
      "context": "\ud83d\uddc2\ufe0f\ud83e\udd16 Airtable Model Context Protocol Server, for allowing AI systems to interact with your Airtable b",
      "source_repo": {
        "platform": "github.com",
        "owner": "topics",
        "repo": "model-context-protocol",
        "full_url": "https://github.com/topics/model-context-protocol?l=typescript"
      }
    },
    {
      "url": "https://github.com/topics/claude",
      "source": "https://github.com/topics/model-context-protocol?l=python",
      "confidence": "medium",
      "needs_review": true,
      "context": "Model Context Protocol server to allow for reading and writing from Pinecone. Rudimentary RAG",
      "source_repo": {
        "platform": "github.com",
        "owner": "topics",
        "repo": "model-context-protocol",
        "full_url": "https://github.com/topics/model-context-protocol?l=python"
      }
    },
    {
      "url": "https://github.com/topics/pinecone",
      "source": "https://github.com/topics/model-context-protocol?l=python",
      "confidence": "medium",
      "needs_review": true,
      "context": "Model Context Protocol server to allow for reading and writing from Pinecone. Rudimentary RAG",
      "source_repo": {
        "platform": "github.com",
        "owner": "topics",
        "repo": "model-context-protocol",
        "full_url": "https://github.com/topics/model-context-protocol?l=python"
      }
    },
    {
      "url": "https://github.com/topics/sse",
      "source": "https://github.com/topics/model-context-protocol?l=python",
      "confidence": "medium",
      "needs_review": true,
      "context": "MCP server for understanding AWS spend",
      "source_repo": {
        "platform": "github.com",
        "owner": "topics",
        "repo": "model-context-protocol",
        "full_url": "https://github.com/topics/model-context-protocol?l=python"
      }
    },
    {
      "url": "https://github.com/topics/bedrock",
      "source": "https://github.com/topics/model-context-protocol?l=python",
      "confidence": "medium",
      "needs_review": true,
      "context": "MCP server for understanding AWS spend",
      "source_repo": {
        "platform": "github.com",
        "owner": "topics",
        "repo": "model-context-protocol",
        "full_url": "https://github.com/topics/model-context-protocol?l=python"
      }
    },
    {
      "url": "https://github.com/topics/nix",
      "source": "https://github.com/topics/model-context-protocol?l=python",
      "confidence": "medium",
      "needs_review": true,
      "context": "MCP-NixOS - Model Context Protocol Server for NixOS resources",
      "source_repo": {
        "platform": "github.com",
        "owner": "topics",
        "repo": "model-context-protocol",
        "full_url": "https://github.com/topics/model-context-protocol?l=python"
      }
    },
    {
      "url": "https://github.com/topics/icalendar",
      "source": "https://github.com/topics/model-context-protocol?l=python",
      "confidence": "medium",
      "needs_review": true,
      "context": "A Model Context Protocol Server that allows you to interact with your MacOS Calendar through natural",
      "source_repo": {
        "platform": "github.com",
        "owner": "topics",
        "repo": "model-context-protocol",
        "full_url": "https://github.com/topics/model-context-protocol?l=python"
      }
    },
    {
      "url": "https://github.com/topics/r1",
      "source": "https://github.com/topics/model-context-protocol?l=javascript",
      "confidence": "medium",
      "needs_review": true,
      "context": "Model Context Protocol server for DeepSeek's advanced language models",
      "source_repo": {
        "platform": "github.com",
        "owner": "topics",
        "repo": "model-context-protocol",
        "full_url": "https://github.com/topics/model-context-protocol?l=javascript"
      }
    },
    {
      "url": "https://github.com/topics/database",
      "source": "https://github.com/topics/model-context-protocol?l=javascript",
      "confidence": "medium",
      "needs_review": true,
      "context": "\ud83c\udf43\ud83d\udd0e MongoDB Lens: Full Featured MCP Server for MongoDB Databases",
      "source_repo": {
        "platform": "github.com",
        "owner": "topics",
        "repo": "model-context-protocol",
        "full_url": "https://github.com/topics/model-context-protocol?l=javascript"
      }
    },
    {
      "url": "https://github.com/topics/ai",
      "source": "https://github.com/topics/model-context-protocol?l=javascript",
      "confidence": "medium",
      "needs_review": true,
      "context": "\ud83c\udf43\ud83d\udd0e MongoDB Lens: Full Featured MCP Server for MongoDB Databases",
      "source_repo": {
        "platform": "github.com",
        "owner": "topics",
        "repo": "model-context-protocol",
        "full_url": "https://github.com/topics/model-context-protocol?l=javascript"
      }
    },
    {
      "url": "https://github.com/topics/web",
      "source": "https://github.com/topics/model-context-protocol?l=javascript",
      "confidence": "medium",
      "needs_review": true,
      "context": "Model Context Protocol server that integrates AgentQL's data extraction capabilities.",
      "source_repo": {
        "platform": "github.com",
        "owner": "topics",
        "repo": "model-context-protocol",
        "full_url": "https://github.com/topics/model-context-protocol?l=javascript"
      }
    },
    {
      "url": "https://github.com/topics/fhir",
      "source": "https://github.com/topics/model-context-protocol?l=javascript",
      "confidence": "medium",
      "needs_review": true,
      "context": "A Model Context Protocol implementation for FHIR",
      "source_repo": {
        "platform": "github.com",
        "owner": "topics",
        "repo": "model-context-protocol",
        "full_url": "https://github.com/topics/model-context-protocol?l=javascript"
      }
    },
    {
      "url": "https://github.com/topics/mpc",
      "source": "https://github.com/topics/model-context-protocol?l=javascript",
      "confidence": "medium",
      "needs_review": true,
      "context": "A Model Context Protocol implementation for FHIR",
      "source_repo": {
        "platform": "github.com",
        "owner": "topics",
        "repo": "model-context-protocol",
        "full_url": "https://github.com/topics/model-context-protocol?l=javascript"
      }
    },
    {
      "url": "https://github.com/topics/nodejs",
      "source": "https://github.com/topics/model-context-protocol?l=javascript",
      "confidence": "medium",
      "needs_review": true,
      "context": "MCP Server for Adobe After Effects. Enables remote control (compositions, text, shapes, solids, prop",
      "source_repo": {
        "platform": "github.com",
        "owner": "topics",
        "repo": "model-context-protocol",
        "full_url": "https://github.com/topics/model-context-protocol?l=javascript"
      }
    },
    {
      "url": "https://github.com/topics/javascript",
      "source": "https://github.com/topics/model-context-protocol?l=javascript",
      "confidence": "medium",
      "needs_review": true,
      "context": "MCP Server for Adobe After Effects. Enables remote control (compositions, text, shapes, solids, prop",
      "source_repo": {
        "platform": "github.com",
        "owner": "topics",
        "repo": "model-context-protocol",
        "full_url": "https://github.com/topics/model-context-protocol?l=javascript"
      }
    },
    {
      "url": "https://github.com/topics/golang",
      "source": "https://github.com/topics/model-context-protocol?l=go",
      "confidence": "medium",
      "needs_review": true,
      "context": "MCP server for the Tradovate platform",
      "source_repo": {
        "platform": "github.com",
        "owner": "topics",
        "repo": "model-context-protocol",
        "full_url": "https://github.com/topics/model-context-protocol?l=go"
      }
    },
    {
      "url": "https://github.com/topics/trading",
      "source": "https://github.com/topics/model-context-protocol?l=go",
      "confidence": "medium",
      "needs_review": true,
      "context": "MCP server for the Tradovate platform",
      "source_repo": {
        "platform": "github.com",
        "owner": "topics",
        "repo": "model-context-protocol",
        "full_url": "https://github.com/topics/model-context-protocol?l=go"
      }
    },
    {
      "url": "https://github.com/topics/rust",
      "source": "https://github.com/topics/model-context-protocol?l=rust",
      "confidence": "medium",
      "needs_review": true,
      "context": "MCP server implementation in Rust",
      "source_repo": {
        "platform": "github.com",
        "owner": "topics",
        "repo": "model-context-protocol",
        "full_url": "https://github.com/topics/model-context-protocol?l=rust"
      }
    },
    {
      "url": "https://github.com/topics/example",
      "source": "https://github.com/topics/model-context-protocol?l=java",
      "confidence": "medium",
      "needs_review": true,
      "context": "MCP Server Examples: Built using pure MCP Java SDK \u2013 No Spring Framework Required",
      "source_repo": {
        "platform": "github.com",
        "owner": "topics",
        "repo": "model-context-protocol",
        "full_url": "https://github.com/topics/model-context-protocol?l=java"
      }
    },
    {
      "url": "https://github.com/topics/tools",
      "source": "https://github.com/topics/model-context-protocol?l=java",
      "confidence": "medium",
      "needs_review": true,
      "context": "MCP server for find agoda hotel reviews",
      "source_repo": {
        "platform": "github.com",
        "owner": "topics",
        "repo": "model-context-protocol",
        "full_url": "https://github.com/topics/model-context-protocol?l=java"
      }
    },
    {
      "url": "https://github.com/topics/spring-ai",
      "source": "https://github.com/topics/model-context-protocol?l=java",
      "confidence": "medium",
      "needs_review": true,
      "context": "A Spring Boot AI-powered Model Context Protocol Server for interacting with Confluence Cloud",
      "source_repo": {
        "platform": "github.com",
        "owner": "topics",
        "repo": "model-context-protocol",
        "full_url": "https://github.com/topics/model-context-protocol?l=java"
      }
    },
    {
      "url": "https://github.com/topics/system-prompts",
      "source": "https://github.com/topics/model-context-protocol?l=html",
      "confidence": "medium",
      "needs_review": true,
      "context": "URL MCP is a proof of concept stateless MCP server builder that allows users to build MCP servers wi",
      "source_repo": {
        "platform": "github.com",
        "owner": "topics",
        "repo": "model-context-protocol",
        "full_url": "https://github.com/topics/model-context-protocol?l=html"
      }
    },
    {
      "url": "https://github.com/topics/typescript",
      "source": "https://github.com/topics/model-context-protocol?l=c%23",
      "confidence": "medium",
      "needs_review": true,
      "context": "Unity Editor integration with Model Context Protocol (MCP) enabling AI assistants like Claude to int",
      "source_repo": {
        "platform": "github.com",
        "owner": "topics",
        "repo": "model-context-protocol",
        "full_url": "https://github.com/topics/model-context-protocol?l=c%23"
      }
    },
    {
      "url": "https://github.com/topics/csharp",
      "source": "https://github.com/topics/model-context-protocol?l=c%23",
      "confidence": "medium",
      "needs_review": true,
      "context": "Unity Editor integration with Model Context Protocol (MCP) enabling AI assistants like Claude to int",
      "source_repo": {
        "platform": "github.com",
        "owner": "topics",
        "repo": "model-context-protocol",
        "full_url": "https://github.com/topics/model-context-protocol?l=c%23"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/feeds/recent-servers.xml",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/feeds/recent-searches.xml",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/feeds/deep-searches.xml",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/MiniMax-AI/MiniMax-MCP",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/Aiven-Open/mcp-aiven",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/needle-ai/needle-mcp",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/integromat/make-mcp-server",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/MiniMax-AI/MiniMax-MCP-JS",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/elastic/mcp-server-elasticsearch",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/EyevinnOSC/mcp-server",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/chargebee/agentkit",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/PostHog/posthog-mcp",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/iaptic/mcp-server-iaptic",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/hackle-io/hackle-mcp",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/hanzoai/mcp",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/semgrep/mcp",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/hyperbrowserai/mcp",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/qdrant/mcp-server-qdrant",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/sanity-io/sanity-mcp-server",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/VapiAI/mcp-server",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/databutton/databutton-mcp",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/playcanvas/editor-mcp-server",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/microsoft/playwright-mcp",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/302ai/302_sandbox_mcp",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/aliyun/alibabacloud-dataworks-mcp-server",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/OpenLinkSoftware/mcp-sqlalchemy-server",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/vectorize-io/vectorize-mcp-server",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/aliyun/alibabacloud-ecs-mcp-server",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/api7/apisix-mcp",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/glifxyz/glif-mcp-server",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/Fibery-inc/fibery-mcp-server",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/supavec/mcp-server",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/exa-labs/exa-mcp-server",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/ahnlabio/bicscan-mcp",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/upstash/mcp-server",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/screenshotone/mcp",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/TencentEdgeOne/edgeone-pages-mcp",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/metatool-ai/mcp-server-metamcp",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/Kong/mcp-konnect",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/ragieai/ragie-mcp-server",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/nacos-group/nacos-mcp-server",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/makenotion/notion-mcp-server",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/atla-ai/atla-mcp-server",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/XeroAPI/xero-mcp-server",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/CodeLogicIncEngineering/codelogic-mcp-server",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/translated/lara-mcp",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/jsonresume/mcp",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/powerdrillai/powerdrill-mcp",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/graphlit/graphlit-mcp-server",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/e2b-dev/mcp-server",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/tavily-ai/tavily-mcp",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/firebase/genkit",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/tembo-io/mcp-server-tembo",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/usegranthq/mcp-server",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/kagisearch/kagimcp",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/Infisical/infisical-mcp-server",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/binalyze/air-mcp",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/AudienseCo/mcp-audiense-insights",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/oxylabs/oxylabs-mcp",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/OctagonAI/octagon-mcp-server",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/nefino/mcp-nefino",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/magicuidesign/mcp",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/apify/mcp-server-rag-web-browser",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/steel-dev/steel-mcp-server",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/tinybirdco/mcp-tinybird",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/DappierAI/dappier-mcp",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/block/square-mcp",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/karakeep-app/karakeep",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/comet-ml/opik-mcp",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/LinkupPlatform/python-mcp-server",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/redis/mcp-redis",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/run-llama/mcp-server-llamacloud",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/ClickHouse/mcp-clickhouse",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/heroku/heroku-mcp-server",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/inkdropapp/mcp-server",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/webflow/mcp-server",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/Funmula-Corp/BigGo-MCP-Server",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/appwrite/mcp",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/datastax/astra-db-mcp",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/PaddleHQ/paddle-mcp-server",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/cloudflare/playwright-mcp",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/AdsPower/local-api-mcp-typescript",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/CircleCI-Public/mcp-server-circleci",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/kalivaraprasad-gonapa/azure-mcp",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/ScrapeGraphAI/scrapegraph-mcp",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/dojoengine/sensei-mcp",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/elevenlabs/elevenlabs-mcp",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/aliyun/alibabacloud-hologres-mcp-server",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/redis/mcp-redis-cloud",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/OctoMind-dev/octomind-mcp",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/satstream/ss-mcp",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/Scrapezy/mcp",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/gotohuman/gotohuman-mcp-server",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/meilisearch/meilisearch-mcp",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/luminati-io/brightdata-mcp",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/geekbot-com/geekbot-mcp",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/lsemenenko/openhue-mcp-server",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/DMontgomery40/meta-mcp-server",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/RyanCardin15/AzureDevOps-MCP",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/hanweg/mcp-pdf-tools",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/mingdedi/InternetSearch-mcp-server",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/zbkm/mmnt-mcp-server",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/thadius83/mcp-server-openai",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/arben-adm/mcp-sequential-thinking",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/MiniMax-AI/MiniMax-MCP\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/Aiven-Open/mcp-aiven\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/needle-ai/needle-mcp\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/integromat/make-mcp-server\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/MiniMax-AI/MiniMax-MCP-JS\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/elastic/mcp-server-elasticsearch\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/EyevinnOSC/mcp-server\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/chargebee/agentkit\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/PostHog/posthog-mcp\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/iaptic/mcp-server-iaptic\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/hackle-io/hackle-mcp\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/hanzoai/mcp\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/semgrep/mcp\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/hyperbrowserai/mcp\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/qdrant/mcp-server-qdrant\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/sanity-io/sanity-mcp-server\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/VapiAI/mcp-server\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/databutton/databutton-mcp\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/playcanvas/editor-mcp-server\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/microsoft/playwright-mcp\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/302ai/302_sandbox_mcp\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/aliyun/alibabacloud-dataworks-mcp-server\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/OpenLinkSoftware/mcp-sqlalchemy-server\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/vectorize-io/vectorize-mcp-server\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/aliyun/alibabacloud-ecs-mcp-server\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/api7/apisix-mcp\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/glifxyz/glif-mcp-server\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/Fibery-inc/fibery-mcp-server\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/supavec/mcp-server\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/exa-labs/exa-mcp-server\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/ahnlabio/bicscan-mcp\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/upstash/mcp-server\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/screenshotone/mcp\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/TencentEdgeOne/edgeone-pages-mcp\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/metatool-ai/mcp-server-metamcp\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/Kong/mcp-konnect\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/ragieai/ragie-mcp-server\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/nacos-group/nacos-mcp-server\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/makenotion/notion-mcp-server\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/atla-ai/atla-mcp-server\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/XeroAPI/xero-mcp-server\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/CodeLogicIncEngineering/codelogic-mcp-server\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/translated/lara-mcp\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/jsonresume/mcp\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/powerdrillai/powerdrill-mcp\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/graphlit/graphlit-mcp-server\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/e2b-dev/mcp-server\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/tavily-ai/tavily-mcp\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/firebase/genkit\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/tembo-io/mcp-server-tembo\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/usegranthq/mcp-server\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/kagisearch/kagimcp\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/Infisical/infisical-mcp-server\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/binalyze/air-mcp\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/AudienseCo/mcp-audiense-insights\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/oxylabs/oxylabs-mcp\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/OctagonAI/octagon-mcp-server\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/nefino/mcp-nefino\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/magicuidesign/mcp\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/apify/mcp-server-rag-web-browser\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/steel-dev/steel-mcp-server\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/tinybirdco/mcp-tinybird\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/DappierAI/dappier-mcp\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/block/square-mcp\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/karakeep-app/karakeep\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/comet-ml/opik-mcp\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/LinkupPlatform/python-mcp-server\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/redis/mcp-redis\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/run-llama/mcp-server-llamacloud\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/ClickHouse/mcp-clickhouse\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/heroku/heroku-mcp-server\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/inkdropapp/mcp-server\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/webflow/mcp-server\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/Funmula-Corp/BigGo-MCP-Server\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/appwrite/mcp\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/datastax/astra-db-mcp\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/PaddleHQ/paddle-mcp-server\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/cloudflare/playwright-mcp\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/AdsPower/local-api-mcp-typescript\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/CircleCI-Public/mcp-server-circleci\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/kalivaraprasad-gonapa/azure-mcp\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/ScrapeGraphAI/scrapegraph-mcp\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/dojoengine/sensei-mcp\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/elevenlabs/elevenlabs-mcp\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/aliyun/alibabacloud-hologres-mcp-server\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/redis/mcp-redis-cloud\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/OctoMind-dev/octomind-mcp\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/satstream/ss-mcp\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/Scrapezy/mcp\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/gotohuman/gotohuman-mcp-server\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/meilisearch/meilisearch-mcp\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/luminati-io/brightdata-mcp\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/geekbot-com/geekbot-mcp\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/lsemenenko/openhue-mcp-server\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/DMontgomery40/meta-mcp-server\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/RyanCardin15/AzureDevOps-MCP\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/hanweg/mcp-pdf-tools\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/mingdedi/InternetSearch-mcp-server\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/zbkm/mmnt-mcp-server\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/thadius83/mcp-server-openai\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/arben-adm/mcp-sequential-thinking\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/feeds/recent-servers.xml\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/feeds/recent-searches.xml\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/feeds/deep-searches.xml\\",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/@Unstructured-IO/UNS-MCP/tools/update_workflow",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "context": "Unstructured API MCP Server",
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://glama.ai/mcp/servers/@bartekke8it56w2/new-mcp/tools/geminithinking",
      "source": "https://glama.ai/mcp/servers",
      "confidence": "medium",
      "needs_review": true,
      "context": "Unstructured API MCP Server",
      "source_repo": {
        "platform": "glama.ai",
        "owner": "mcp",
        "repo": "servers",
        "full_url": "https://glama.ai/mcp/servers"
      }
    },
    {
      "url": "https://docs.mindsdb.com/mcp/overview\\",
      "source": "https://github.com/punkpeye/awesome-mcp-servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "github.com",
        "owner": "punkpeye",
        "repo": "awesome-mcp-servers",
        "full_url": "https://github.com/punkpeye/awesome-mcp-servers"
      }
    },
    {
      "url": "https://docs.mindsdb.com/mcp/overview",
      "source": "https://github.com/punkpeye/awesome-mcp-servers",
      "confidence": "medium",
      "needs_review": true,
      "source_repo": {
        "platform": "github.com",
        "owner": "punkpeye",
        "repo": "awesome-mcp-servers",
        "full_url": "https://github.com/punkpeye/awesome-mcp-servers"
      }
    },
    {
      "url": "https://github.com/julien040/anyquery",
      "source": "https://github.com/punkpeye/awesome-mcp-servers",
      "confidence": "medium",
      "needs_review": true,
      "context": "Servers for accessing many apps and tools through a single MCP server.",
      "source_repo": {
        "platform": "github.com",
        "owner": "punkpeye",
        "repo": "awesome-mcp-servers",
        "full_url": "https://github.com/punkpeye/awesome-mcp-servers"
      }
    },
    {
      "url": "https://github.com/metatool-ai/metatool-app",
      "source": "https://github.com/punkpeye/awesome-mcp-servers",
      "confidence": "medium",
      "needs_review": true,
      "context": "Servers for accessing many apps and tools through a single MCP server.",
      "source_repo": {
        "platform": "github.com",
        "owner": "punkpeye",
        "repo": "awesome-mcp-servers",
        "full_url": "https://github.com/punkpeye/awesome-mcp-servers"
      }
    }
  ],
  "total_found": 331,
  "timestamp": "2025-04-21 20:48:12",
  "readme_contents": {
    "github.com/modelcontextprotocol/servers": {
      "introduction": "Model Context Protocol servers\nThis repository is a collection of\nreference implementations\nfor the\nModel Context Protocol\n(MCP), as well as references\nto community built servers and additional resources.\nThe servers in this repository showcase the versatility and extensibility of MCP, demonstrating how it can be used to give Large Language Models (LLMs) secure, controlled access to tools and data sources.\nEach MCP server is implemented with either the\nTypescript MCP SDK\nor\nPython MCP SDK\n.\nNote: Lists in this README are maintained in alphabetical order to minimize merge conflicts when adding new items.\n\ud83c\udf1f Reference Servers\nThese servers aim to demonstrate MCP features and the TypeScript and Python SDKs.\nAWS KB Retrieval\n- Retrieval from AWS Knowledge Base using Bedrock Agent Runtime\nBrave Search\n- Web and local search using Brave's Search API\nEverArt\n- AI image generation using various models\nEverything\n- Reference / test server with prompts, resources, and tools\nFetch\n- Web content fetching and conversion for efficient LLM usage\nFilesystem\n- Secure file operations with configurable access controls\nGit\n- Tools to read, search, and manipulate Git repositories\nGitHub\n- Repository management, file operations, and GitHub API integration\nGitLab\n- GitLab API, enabling project management\nGoogle Drive\n- File access and search capabilities for Google Drive\nGoogle Maps\n- Location services, directions, and place details\nMemory\n- Knowledge graph-based persistent memory system\nPostgreSQL\n",
      "mcp_relevant_sections": [
        "Model Context Protocol servers\nThis repository is a collection of\nreference implementations\nfor the\nModel Context Protocol\n(MCP), as well as references\nto community built servers and additional resources.\nThe servers in this repository showcase the versatility and extensibility of MCP, demonstrating how it can be used to give Large Language Models (LLMs) secure, controlled access to tools and data sources.\nEach MCP server is implemented with either the\nTypescript MCP SDK\nor\nPython MCP SDK\n.\nNote: Lists in this README are maintained in alphabetical order to minimize merge conflicts when adding new items.\n\ud83c\udf1f Reference Servers\nThese servers aim to demonstrate MCP features and the TypeScript and Python SDKs.\nAWS KB Retrieval\n- Retrieval from AWS Knowledge Base using Bedrock Agent Runtime\nBrave Search\n- Web and local search using Brave's Search API\nEverArt\n- AI image generation using various models\nEverything\n- Reference / test server with prompts, resources, and tools\nFetch\n- Web content fetching and conversion for efficient LLM usage\nFilesystem\n- Secure file operations with configurable access controls\nGit\n- Tools to read, search, and manipulate Git repositories\nGitHub\n- Repository management, file operations, and GitHub API integration\nGitLab\n- GitLab API, enabling project management\nGoogle Drive\n- File access and search capabilities for Google Drive\nGoogle Maps\n- Location services, directions, and place details\nMemory\n- Knowledge graph-based persistent memory system\nPostgreSQL\n- Read-only database access with schema inspection\nPuppeteer\n- Browser automation and web scraping\nRedis\n- Interact with Redis key-value stores\nSentry\n- Retrieving and analyzing issues from Sentry.io\nSequential Thinking\n- Dynamic and reflective problem-solving through thought sequences\nSlack\n- Channel management and messaging capabilities\nSqlite\n- Database interaction and business intelligence capabilities\nTime\n- Time and timezone conversion capabilities\n\ud83e\udd1d Third-Party Servers\n\ud83c\udf96\ufe0f Official Integrations\nOfficial integrations are maintained by companies building production ready MCP servers for their platforms.\n21st.dev Magic\n- Create crafted UI components inspired by the best 21st.dev design engineers.\nAdfin\n- The only platform you need to get paid - all payments in one place, invoicing and accounting reconciliations with\nAdfin\n.\nAgentQL\n- Enable AI agents to get structured data from unstructured web with\nAgentQL\n.\nAgentRPC\n- Connect to any function, any language, across network boundaries using\nAgentRPC\n.\nAiven\n- Navigate your\nAiven projects\nand interact with the PostgreSQL\u00ae, Apache Kafka\u00ae, ClickHouse\u00ae and OpenSearch\u00ae services\nApache IoTDB\n- MCP Server for\nApache IoTDB\ndatabase and its tools\nApify\n-\nActors MCP Server\n: Use 3,000+ pre-built cloud tools to extract data from websites, e-commerce, social media, search engines, maps, and more\nAPIMatic MCP\n- APIMatic MCP Server is used to validate OpenAPI specifications using\nAPIMatic\n. The server processes OpenAPI files and returns validation summaries by leveraging APIMatic\u2019s API.\nAstra DB\n- Comprehensive tools for managing collections and documents in a\nDataStax Astra DB\nNoSQL database with a full range of operations such as create, update, delete, find, and associated bulk actions.\nAtlan\n- The Atlan Model Context Protocol server allows you to interact with the\nAtlan\nservices through multiple tools.\nAudiense Insights\n- Marketing insights and audience analysis from\nAudiense\nreports, covering demographic, cultural, influencer, and content engagement analysis.\nAWS\n-  Specialized MCP servers that bring AWS best practices directly to your development workflow.\nAxiom\n- Query and analyze your Axiom logs, traces, and all other event data in natural language\nBankless Onchain\n- Query Onchain data, like ERC20 tokens, transaction history, smart contract state.\nBICScan\n- Risk score / asset holdings of EVM blockchain address (EOA, CA, ENS) and even domain names.\nBitrise\n- Chat with your builds, CI, and\nmore\n.\nBox\n- Interact with the Intelligent Content Management platform through Box AI.\nBrowserbase\n- Automate browser interactions in the cloud (e.g. web navigation, data extraction, form filling, and more)\nChargebee\n- MCP Server that connects AI agents to\nChargebee platform\n.\nChroma\n- Embeddings, vector search, document storage, and full-text search with the open-source AI application database\nChronulus AI\n- Predict anything with Chronulus AI forecasting and prediction agents.\nCircleCI\n- Enable AI Agents to fix build failures from CircleCI.\nClickHouse\n- Query your\nClickHouse\ndatabase server.\nCloudflare\n- Deploy, configure & interrogate your resources on the Cloudflare developer platform (e.g. Workers/KV/R2/D1)\nCodacy\n- Interact with\nCodacy\nAPI to query code quality issues, vulnerabilities, and coverage insights about your code.\nCodeLogic\n- Interact with\nCodeLogic\n, a Software Intelligence platform that graphs complex code and data architecture dependencies, to boost AI accuracy and insight.\nComet Opik\n- Query and analyze your\nOpik\nlogs, traces, prompts and all other telemtry data from your LLMs in natural language.\nConvex\n- Introspect and query your apps deployed to Convex.\nDart\n- Interact with task, doc, and project data in\nDart\n, an AI-native project management tool\nDevHub\n- Manage and utilize website content within the\nDevHub\nCMS platform\nE2B\n- Run code in secure sandboxes hosted by\nE2B\nEduBase\n- Interact with\nEduBase\n, a comprehensive e-learning platform with advanced quizzing, exam management, and content organization capabilities\nElasticsearch\n- Query your data in\nElasticsearch\neSignatures\n- Contract and template management for drafting, reviewing, and sending binding contracts.\nExa\n- Search Engine made for AIs by\nExa\nFewsats\n- Enable AI Agents to purchase anything in a secure way using\nFewsats\nFibery\n- Perform queries and entity operations in your\nFibery\nworkspace.\nFinancial Datasets\n- Stock market API made for AI agents\nFirecrawl\n- Extract web data with\nFirecrawl\nFireproof\n- Immutable ledger database with live synchronization\nGitee\n- Gitee API integration, repository, issue, and pull request management, and more.\ngotoHuman\n- Human-in-the-loop platform - Allow AI agents and automations to send requests for approval to your\ngotoHuman\ninbox.\nGrafana\n- Search dashboards, investigate incidents and query datasources in your Grafana instance\nGraphlit\n- Ingest anything from Slack to Gmail to podcast feeds, in addition to web crawling, into a searchable\nGraphlit\nproject.\nGreptimeDB\n- Provides AI assistants with a secure and structured way to explore and analyze data in\nGreptimeDB\n.\nHeroku\n- Interact with the Heroku Platform through LLM-driven tools for managing apps, add-ons, dynos, databases, and more.\nHologres\n- Connect to a\nHologres\ninstance, get table metadata, query and analyze data.\nHyperbrowser\n-\nHyperbrowser\nis the next-generation platform empowering AI agents and enabling effortless, scalable browser automation.\nIBM wxflows\n- Tool platform by IBM to build, test and deploy tools for any data source\nForeverVM\n- Run Python in a code sandbox.\nInbox Zero\n- AI personal assistant for email\nInbox Zero\nInkeep\n- RAG Search over your content powered by\nInkeep\nIntegration App\n- Interact with any other SaaS applications on behalf of your customers.\nJetBrains\n\u2013 Work on your code with JetBrains IDEs\nKagi Search\n- Search the web using Kagi's search API\nKeboola\n- Build robust data workflows, integrations, and analytics on a single intuitive platform.\nKlavis ReportGen\n- Create professional reports from a simple user query.\nLara Translate\n- MCP Server for Lara Translate API, enabling powerful translation capabilities with support for language detection and context-aware translations.\nLogfire\n- Provides access to OpenTelemetry traces and metrics through Logfire.\nLangfuse Prompt Management\n- Open-source tool for collaborative editing, versioning, evaluating, and releasing prompts.\nLingo.dev\n- Make your AI agent speak every language on the planet, using\nLingo.dev\nLocalization Engine.\nMailgun\n- Interact with Mailgun API.\nMake\n- Turn your\nMake\nscenarios into callable tools for AI assistants.\nMeilisearch\n- Interact & query with Meilisearch (Full-text & semantic search API)\nMetoro\n- Query and interact with kubernetes environments monitored by Metoro\nMilvus\n- Search, Query and interact with data in your Milvus Vector Database.\nMomento\n- Momento Cache lets you quickly improve your performance, reduce costs, and handle load at any scale.\nMotherDuck\n- Query and analyze data with MotherDuck and local DuckDB\nNeedle\n- Production-ready RAG out of the box to search and retrieve data from your own documents.\nNeo4j\n- Neo4j graph database server (schema + read/write-cypher) and separate graph database backed memory\nNeon\n- Interact with the Neon serverless Postgres platform\nNotion\n- This project implements an MCP server for the Notion API.\nOceanBase\n- MCP Server for OceanBase database and its tools\nOctagon\n- Deliver real-time investment research with extensive private and public market data.\nOlaMaps\n- Official Ola Maps MCP Server for services like geocode, directions, place details and many more.\nOxylabs\n- Scrape websites with Oxylabs Web API, supporting dynamic rendering and parsing for structured data extraction.\nPaddle\n- Interact with the Paddle API. Manage product catalog, billing and subscriptions, and reports.\nPayPal\n- PayPal's official MCP server.\nPerplexity\n- An MCP server that connects to Perplexity's Sonar API, enabling real-time web-wide research in conversational AI.\nRedis\n- The Redis official MCP Server offers an interface to manage and search data in Redis.\nRedis Cloud API\n- The Redis Cloud API MCP Server allows you to manage your Redis Cloud resources using natural language.\nQdrant\n- Implement semantic memory layer on top of the Qdrant vector search engine\nRamp\n- Interact with\nRamp\n's Developer API to run analysis on your spend and gain insights leveraging LLMs\nRaygun\n- Interact with your crash reporting and real using monitoring data on your Raygun account\nRember\n- Create spaced repetition flashcards in\nRember\nto remember anything you learn in your chats\nRiza\n- Arbitrary code execution and tool-use platform for LLMs by\nRiza\nSearch1API\n- One API for Search, Crawling, and Sitemaps\nScreenshotOne\n- Render website screenshots with\nScreenshotOne\nSemgrep\n- Enable AI agents to secure code with\nSemgrep\n.\nSingleStore\n- Interact with the SingleStore database platform\nStarRocks\n- Interact with\nStarRocks\nStripe\n- Interact with Stripe API\nTavily\n- Search engine for AI agents (search + extract) powered by\nTavily\nThirdweb\n- Read/write to over 2k blockchains, enabling data querying, contract analysis/deployment, and transaction execution, powered by\nThirdweb\nTinybird\n- Interact with Tinybird serverless ClickHouse platform\nUnifAI\n- Dynamically search and call tools using\nUnifAI Network\nUnstructured\n- Set up and interact with your unstructured data processing workflows in\nUnstructured Platform\nVectorize\n-\nVectorize\nMCP server for advanced retrieval, Private Deep Research, Anything-to-Markdown file extraction and text chunking.\nVerodat\n- Interact with Verodat AI Ready Data platform\nVeyraX\n- Single tool to control all 100+ API integrations, and UI components\nXero\n- Interact with the accounting data in your business using our official MCP server\nZapier\n- Connect your AI Agents to 8,000 apps instantly.\nZenML\n- Interact with your MLOps and LLMOps pipelines through your\nZenML\nMCP server\n\ud83c\udf0e Community Servers\nA growing set of community-developed and maintained servers demonstrates various applications of MCP across different domains.\nNote:\nCommunity servers are\nuntested\nand should be used at\nyour own risk\n. They are not affiliated with or endorsed by Anthropic.\nAbleton Live\n- an MCP server to control Ableton Live.\nAirbnb\n- Provides tools to search Airbnb and get listing details.\nAI Agent Marketplace Index\n- MCP server to search more than 5000+ AI agents and tools of various categories from\nAI Agent Marketplace Index\nand monitor traffic of AI Agents.\nAlgorand\n- A comprehensive MCP server for tooling interactions (40+) and resource accessibility (60+) plus many useful prompts for interacting with the Algorand blockchain.\nAirflow\n- A MCP Server that connects to\nApache Airflow\nusing official python client.\nAirtable\n- Read and write access to\nAirtable\ndatabases, with schema inspection.\nAirtable\n- Airtable Model Context Protocol Server.\nAlphaVantage\n- MCP server for stock market data API\nAlphaVantage\nAmadeus\n(by donghyun-chae) - An MCP server to access, explore, and interact with Amadeus Flight Offers Search API for retrieving detailed flight options, including airline, times, duration, and pricing data.\nAnki\n- An MCP server for interacting with your\nAnki\ndecks and cards.\nAny Chat Completions\n- Interact with any OpenAI SDK Compatible Chat Completions API like OpenAI, Perplexity, Groq, xAI and many more.\nApple Calendar\n- An MCP server that allows you to interact with your MacOS Calendar through natural language, including features such as event creation, modification, schedule listing, finding free time slots etc.\nArangoDB\n- MCP Server that provides database interaction capabilities through\nArangoDB\n.\nArduino\n- MCP Server that enables AI-powered robotics using Claude AI and Arduino (ESP32) for real-world automation and interaction with robots.\nAtlassian\n- Interact with Atlassian Cloud products (Confluence and Jira) including searching/reading Confluence spaces/pages, accessing Jira issues, and project metadata.\nAttestable MCP\n- An MCP server running inside a trusted execution environment (TEE) via Gramine, showcasing remote attestation using\nRA-TLS\n. This allows an MCP client to verify the server before conencting.\nAWS\n- Perform operations on your AWS resources using an LLM.\nAWS Athena\n- A MCP server for AWS Athena to run SQL queries on Glue Catalog.\nAWS Cost Explorer\n- Optimize your AWS spend (including Amazon Bedrock spend) with this MCP server by examining spend across regions, services, instance types and foundation models (\ndemo video\n).\nAWS Resources Operations\n- Run generated python code to securely query or modify any AWS resources supported by boto3.\nAWS S3\n- A sample MCP server for AWS S3 that flexibly fetches objects from S3 such as PDF documents.\nAzure ADX\n- Query and analyze Azure Data Explorer databases.\nAzure DevOps\n- An MCP server that provides a bridge to Azure DevOps services, enabling AI assistants to query and manage work items.\nBaidu AI Search\n- Web search with Baidu Cloud's AI Search\nBase Free USDC Transfer\n- Send USDC on\nBase\nfor free using Claude AI! Built with\nCoinbase CDP\n.\nBasic Memory\n- Local-first knowledge management system that builds a semantic graph from Markdown files, enabling persistent memory across conversations with LLMs.\nBigQuery\n(by LucasHild) - This server enables LLMs to inspect database schemas and execute queries on BigQuery.\nBigQuery\n(by ergut) - Server implementation for Google BigQuery integration that enables direct BigQuery database access and querying capabilities\nBing Web Search API\n(by hanchunglee) - Server implementation for Microsoft Bing Web Search API.\nBitable MCP\n(by lloydzhou) - MCP server provides access to Lark Bitable through the Model Context Protocol. It allows users to interact with Bitable tables using predefined tools.\nBlender\n(by ahujasid) - Blender integration allowing prompt enabled 3D scene creation, modeling and manipulation.\nbrowser-use\n(by co-browser) - browser-use MCP server with dockerized playwright + chromium + vnc. supports stdio & resumable http.\nBsc-mcp\nThe first MCP server that serves as the bridge between AI and BNB Chain, enabling AI agents to execute complex on-chain operations through seamless integration with the BNB Chain, including transfer, swap, launch, security check on any token and even more.\nCalculator\n- This server enables LLMs to use calculator for precise numerical calculations.\nCFBD API\n- An MCP server for the\nCollege Football Data API\n.\nChatMCP\n\u2013 An Open Source Cross-platform GUI Desktop application compatible with Linux, macOS, and Windows, enabling seamless interaction with MCP servers across dynamically selectable LLMs, by\nAIQL\nChatSum\n- Query and Summarize chat messages with LLM. by\nmcpso\nChess.com\n- Access Chess.com player data, game records, and other public information through standardized MCP interfaces, allowing AI assistants to search and analyze chess information.\nChroma\n- Vector database server for semantic document search and metadata filtering, built on Chroma\nClaudePost\n- ClaudePost enables seamless email management for Gmail, offering secure features like email search, reading, and sending.\nCloudinary\n- Cloudinary Model Context Protocol Server to upload media to Cloudinary and get back the media link and details.\ncode-assistant\n- A coding assistant MCP server that allows to explore a code-base and make changes to code. Should be used with trusted repos only (insufficient protection against prompt injections).\ncode-executor\n- An MCP server that allows LLMs to execute Python code within a specified Conda environment.\ncode-sandbox-mcp\n- An MCP server to create secure code sandbox environment for executing code within Docker containers.\ncognee-mcp\n- GraphRAG memory server with customizable ingestion, data processing and search\ncoin_api_mcp\n- Provides access to\ncoinmarketcap\ncryptocurrency data.\nContentful-mcp\n- Read, update, delete, publish content in your\nContentful\nspace(s) from this MCP Server.\ncrypto-feargreed-mcp\n-  Providing real-time and historical Crypto Fear & Greed Index data.\ncryptopanic-mcp-server\n- Providing latest cryptocurrency news to AI agents, powered by CryptoPanic.\nDappier\n- Connect LLMs to real-time, rights-cleared, proprietary data from trusted sources. Access specialized models for Real-Time Web Search, News, Sports, Financial Data, Crypto, and premium publisher content. Explore data models at\nmarketplace.dappier.com\n.\nDatabricks\n- Allows LLMs to run SQL queries, list and get details of jobs executions in a Databricks account.\nDatadog\n- Datadog MCP Server for application tracing, monitoring, dashboard, incidents queries built on official datadog api.\nData Exploration\n- MCP server for autonomous data exploration on .csv-based datasets, providing intelligent insights with minimal effort. NOTE: Will execute arbitrary Python code on your machine, please use with caution!\nDataset Viewer\n- Browse and analyze Hugging Face datasets with features like search, filtering, statistics, and data export\nDBHub\n- Universal database MCP server connecting to MySQL, PostgreSQL, SQLite, DuckDB and etc.\nDeepSeek MCP Server\n- Model Context Protocol server integrating DeepSeek's advanced language models, in addition to\nother useful API endpoints\nDeepseek_R1\n- A Model Context Protocol (MCP) server implementation connecting Claude Desktop with DeepSeek's language models (R1/V3)\ndeepseek-thinker-mcp\n- A MCP (Model Context Protocol) provider Deepseek reasoning content to MCP-enabled AI Clients, like Claude Desktop. Supports access to Deepseek's thought processes from the Deepseek API service or from a local Ollama server.\nDescope\n- An MCP server to integrate with\nDescope\nto search audit logs, manage users, and more.\nDevRev\n- An MCP server to integrate with DevRev APIs to search through your DevRev Knowledge Graph where objects can be imported from diff. sources listed\nhere\n.\nDicom\n- An MCP server to query and retrieve medical images and for parsing and reading dicom-encapsulated documents (pdf etc.).\nDify\n- A simple implementation of an MCP server for dify workflows.\nDiscord\n- A MCP server to connect to Discord guilds through a bot and read and write messages in channels\nDiscord\n- A MCP server, which connects to Discord through a bot, and provides comprehensive integration with Discord.\nDiscord\n- For Discord API integration by Klavis AI\nDiscourse\n- A MCP server to search Discourse posts on a Discourse forum.\nDocker\n- Integrate with Docker to manage containers, images, volumes, and networks.\nDrupal\n- Server for interacting with\nDrupal\nusing STDIO transport layer.\ndune-analytics-mcp\n-  A mcp server that bridges Dune Analytics data to AI agents.\nEdgeOne Pages MCP\n- An MCP service for deploying HTML content to EdgeOne Pages and obtaining a publicly accessible URL.\nElasticsearch\n- MCP server implementation that provides Elasticsearch interaction.\nElevenLabs\n- A server that integrates with ElevenLabs text-to-speech API capable of generating full voiceovers with multiple voices.\nErgo Blockchain MCP\n-An MCP server to integrate Ergo Blockchain Node and Explorer APIs for checking address balances, analyzing transactions, viewing transaction history, performing forensic analysis of addresses, searching for tokens, and monitoring network status.\nEunomia\n- Extension of the Eunomia framework that connects Eunomia instruments with MCP servers\nEVM MCP Server\n- Comprehensive blockchain services for 30+ EVM networks, supporting native tokens, ERC20, NFTs, smart contracts, transactions, and ENS resolution.\nEverything Search\n- Fast file searching capabilities across Windows (using\nEverything SDK\n), macOS (using mdfind command), and Linux (using locate/plocate command).\nExcel\n- Excel manipulation including data reading/writing, worksheet management, formatting, charts, and pivot table.\nFantasy PL\n- Give your coding agent direct access to up-to date Fantasy Premier League data\nfastn.ai \u2013 Unified API MCP Server\n- A remote, dynamic MCP server with a unified API that connects to 1,000+ tools, actions, and workflows, featuring built-in authentication and monitoring.\nFetch\n- A server that flexibly fetches HTML, JSON, Markdown, or plaintext.\nFingertip\n- MCP server for Fingertip.com to search and create new sites.\nFigma\n- Give your coding agent direct access to Figma file data, helping it one-shot design implementation.\nFirebase\n- Server to interact with Firebase services including Firebase Authentication, Firestore, and Firebase Storage.\nFireCrawl\n- Advanced web scraping with JavaScript rendering, PDF support, and smart rate limiting\nFlightRadar24\n- A Claude Desktop MCP server that helps you track flights in real-time using Flightradar24 data.\nGhost\n- A Model Context Protocol (MCP) server for interacting with Ghost CMS through LLM interfaces like Claude.\nGithub Actions\n- A Model Context Protocol (MCP) server for interacting with Github Actions.\nGlean\n- A server that uses Glean API to search and chat.\nGmail\n- A Model Context Protocol (MCP) server for Gmail integration in Claude Desktop with auto authentication support.\nGmail Headless\n- Remote hostable MCP server that can get and send Gmail messages without local credential or file system setup.\nGoal Story\n- a Goal Tracker and Visualization Tool for personal and professional development.\nGOAT\n- Run more than +200 onchain actions on any blockchain including Ethereum, Solana and Base.\nGodot\n- A MCP server providing comprehensive Godot engine integration for project editing, debugging, and scene management.\nGolang Filesystem Server\n- Secure file operations with configurable access controls built with Go!\nGoodnews\n- A simple MCP server that delivers curated positive and uplifting news stories.\nGoogle Calendar\n- Integration with Google Calendar to check schedules, find time, and add/delete events\nGoogle Calendar\n- Google Calendar MCP Server for managing Google calendar events. Also supports searching for events by attributes like title and location.\nGoogle Custom Search\n- Provides Google Search results via the Google Custom Search API\nGoogle Tasks\n- Google Tasks API Model Context Protocol Server.\nGraphQL Schema\n- Allow LLMs to explore large GraphQL schemas without bloating the context.\nHDW LinkedIn\n- Access to profile data and management of user account with\nHorizonDataWave.ai\n.\nHeurist Mesh Agent\n- Access specialized web3 AI agents for blockchain analysis, smart contract security, token metrics, and blockchain interactions through the\nHeurist Mesh network\n.\nHolaspirit\n- Interact with\nHolaspirit\n.\nHome Assistant\n- Interact with\nHome Assistant\nincluding viewing and controlling lights, switches, sensors, and all other Home Assistant entities.\nHome Assistant\n- Docker-ready MCP server for Home Assistant with entity management, domain summaries, automation support, and guided conversations. Includes pre-built container images for easy installation.\nHubSpot\n- HubSpot CRM integration for managing contacts and companies. Create and retrieve CRM data directly through Claude chat.\nHuggingFace Spaces\n- Server for using HuggingFace Spaces, supporting Open Source Image, Audio, Text Models and more. Claude Desktop mode for easy integration.\nHyperliquid\n- An MCP server implementation that integrates the Hyperliquid SDK for exchange data.\niFlytek Workflow\n- Connect to iFlytek Workflow via the MCP server and run your own Agent.\nImage Generation\n- This MCP server provides image generation capabilities using the Replicate Flux model.\nInfluxDB\n- Run queries against InfluxDB OSS API v2.\nInoyu\n- Interact with an Apache Unomi CDP customer data platform to retrieve and update customer profiles\nIntercom\n- An MCP-compliant server for retrieving customer support tickets from Intercom. This tool enables AI assistants like Claude Desktop and Cline to access and analyze your Intercom support tickets.\niOS Simulator\n- A Model Context Protocol (MCP) server that enables LLMs to interact with iOS simulators (iPhone, iPad, etc.) through natural language commands.\niTerm MCP\n- Integration with iTerm2 terminal emulator for macOS, enabling LLMs to execute and monitor terminal commands.\nJavaFX\n- Make drawings using a JavaFX canvas\nJDBC\n- Connect to any JDBC-compatible database and query, insert, update, delete, and more. Supports MySQL, PostgreSQL, Oracle, SQL Server, sqllite and\nmore\n.\nJSON\n- JSON handling and processing server with advanced query capabilities using JSONPath syntax and support for array, string, numeric, and date operations.\nKiCad MCP\n- MCP server for KiCad on Mac, Windows, and Linux.\nKeycloak MCP\n- This MCP server enables natural language interaction with Keycloak for user and realm management including creating, deleting, and listing users and realms.\nKibela\n(by kiwamizamurai) - Interact with Kibela API.\nkintone\n- Manage records and apps in\nkintone\nthrough LLM tools.\nKong Konnect\n- A Model Context Protocol (MCP) server for interacting with Kong Konnect APIs, allowing AI assistants to query and analyze Kong Gateway configurations, traffic, and analytics.\nKubernetes\n- Connect to Kubernetes cluster and manage pods, deployments, and services.\nKubernetes and OpenShift\n- A powerful Kubernetes MCP server with additional support for OpenShift. Besides providing CRUD operations for any Kubernetes resource, this server provides specialized tools to interact with your cluster.\nLangflow-DOC-QA-SERVER\n- A Model Context Protocol server for document Q&A powered by Langflow. It demonstrates core MCP concepts by providing a simple interface to query documents through a Langflow backend.\nLightdash\n- Interact with\nLightdash\n, a BI tool.\nLinear\n- Allows LLM to interact with Linear's API for project management, including searching, creating, and updating issues.\nLinear (Go)\n- Allows LLM to interact with Linear's API via a single static binary.\nLINE\n(by amornpan) - Implementation for LINE Bot integration that enables Language Models to read and analyze LINE conversations through a standardized interface. Features asynchronous operation, comprehensive logging, webhook event handling, and support for various message types.\nLlamaCloud\n(by marcusschiesser) - Integrate the data stored in a managed index on\nLlamaCloud\nllm-context\n- Provides a repo-packing MCP tool with configurable profiles that specify file inclusion/exclusion patterns and optional prompts.\nmac-messages-mcp\n- An MCP server that securely interfaces with your iMessage database via the Model Context Protocol (MCP), allowing LLMs to query and analyze iMessage conversations. It includes robust phone number validation, attachment processing, contact management, group chat handling, and full support for sending and receiving messages.\nMariaDB\n- MariaDB database integration with configurable access controls in Python.\nMarkdown2doc\n- Convert between various file formats using Pandoc\nMarkitdown\n- Convert files to Markdown\nMaton\n- Connect to your SaaS tools like HubSpot, Salesforce, and more.\nMCP Compass\n- Suggest the right MCP server for your needs\nMCP Create\n- A dynamic MCP server management service that creates, runs, and manages Model Context Protocol servers on-the-fly.\nMCP Installer\n- This server is a server that installs other MCP servers for you.\nmcp-k8s-go\n- Golang-based Kubernetes server for MCP to browse pods and their logs, events, namespaces and more. Built to be extensible.\nmcp-local-rag\n- \"primitive\" RAG-like web search model context protocol (MCP) server that runs locally using Google's MediaPipe Text Embedder and DuckDuckGo Search. \u2728 no APIs required \u2728.\nmcp-proxy\n- Connect to MCP servers that run on SSE transport, or expose stdio servers as an SSE server.\nmem0-mcp\n- A Model Context Protocol server for Mem0, which helps with managing coding preferences.\nMembase\n- Save and query your agent memory in distributed way by Membase.\nMSSQL\n- MSSQL database integration with configurable access controls and schema inspection\nMSSQL\n(by jexin) - MCP Server for MSSQL database in Python\nMSSQL-Python\n(by amornpan) - A read-only Python implementation for MSSQL database access with enhanced security features, configurable access controls, and schema inspection capabilities. Focuses on safe database interaction through Python ecosystem.\nMSSQL-MCP\n(by daobataotie) - MSSQL MCP that refer to the official website's SQLite MCP for modifications to adapt to MSSQL\nMarkdownify\n- MCP to convert almost anything to Markdown (PPTX, HTML, PDF, Youtube Transcripts and more)\nMicrosoft Teams\n- MCP server that integrates Microsoft Teams messaging (read, post, mention, list members and threads)\nMindmap\n(by YuChenSSR) - A server that generates mindmaps from input containing markdown code.\nMinima\n- MCP server for RAG on local files\nMobile MCP\n(by Mobile Next) - MCP server for Mobile(iOS/Android) automation, app scraping and development using physical devices or simulators/emulators.\nMongoDB\n- A Model Context Protocol Server for MongoDB.\nMongoDB Lens\n- Full Featured MCP Server for MongoDB Databases.\nMonday.com\n- MCP Server to interact with Monday.com boards and items.\nMulticluster-MCP-Sever\n- The gateway for GenAI systems to interact with multiple Kubernetes clusters.\nMySQL\n(by benborla) - MySQL database integration in NodeJS with configurable access controls and schema inspection\nMySQL\n(by DesignComputer) - MySQL database integration in Python with configurable access controls and schema inspection\nn8n\n- This MCP server provides tools and resources for AI assistants to manage n8n workflows and executions, including listing, creating, updating, and deleting workflows, as well as monitoring their execution status.\nNASA\n(by ProgramComputer) - Access to a unified gateway of NASA's data sources including but not limited to APOD, NEO, EPIC, GIBS.\nNasdaq Data Link\n(by stefanoamorelli) - An MCP server to access, explore, and interact with Nasdaq Data Link\u2019s extensive and valuable financial and economic datasets.\nNational Parks\n- The server provides latest information of park details, alerts, visitor centers, campgrounds, hiking trails, and events for U.S. National Parks.\nNAVER\n(by pfldy2850) - This MCP server provides tools to interact with various Naver services, such as searching blogs, news, books, and more.\nNS Travel Information\n- Access Dutch Railways (NS) real-time train travel information and disruptions through the official NS API.\nNeo4j\n- A community built server that interacts with Neo4j Graph Database.\nNeovim\n- An MCP Server for your Neovim session.\nNotion\n(by suekou) - Interact with Notion API.\nNotion\n(by v-3) - Notion MCP integration. Search, Read, Update, and Create pages through Claude chat.\nntfy-mcp\n(by teddyzxcv) - The MCP server that keeps you informed by sending the notification on phone using ntfy\noatpp-mcp\n- C++ MCP integration for Oat++. Use\nOat++\nto build MCP servers.\nObsidian Markdown Notes\n- Read and search through your Obsidian vault or any directory containing Markdown notes\nobsidian-mcp\n- (by Steven Stavrakis) An MCP server for Obsidian.md with tools for searching, reading, writing, and organizing notes.\nOceanBase\n- (by yuanoOo) A Model Context Protocol (MCP) server that enables secure interaction with OceanBase databases.\nOkta\n- Interact with Okta API.\nOneNote\n- (by Rajesh Vijay) An MCP server that connects to Microsoft OneNote using the Microsoft Graph API. Reading notebooks, sections, and pages from OneNote,Creating new notebooks, sections, and pages in OneNote.\nOpenAI WebSearch MCP\n- This is a Python-based MCP server that provides OpenAI\nweb_search\nbuild-in tool.\nOpenAPI\n- Interact with\nOpenAPI\nAPIs.\nOpenAPI AnyApi\n- Interact with large\nOpenAPI\ndocs using built-in semantic search for endpoints. Allows for customizing the MCP server prefix.\nOpenAPI Schema\n- Allow LLMs to explore large\nOpenAPI\nschemas without bloating the context.\nOpenCTI\n- Interact with OpenCTI platform to retrieve threat intelligence data including reports, indicators, malware and threat actors.\nOpenDota\n- Interact with OpenDota API to retrieve Dota 2 match data, player statistics, and more.\nOpenRPC\n- Interact with and discover JSON-RPC APIs via\nOpenRPC\n.\nOpen Strategy Partners Marketing Tools\n- Content editing codes, value map, and positioning tools for product marketing.\nPandoc\n- MCP server for seamless document format conversion using Pandoc, supporting Markdown, HTML, PDF, DOCX (.docx), csv and more.\nPIF\n- A Personal Intelligence Framework (PIF), providing tools for file operations, structured reasoning, and journal-based documentation to support continuity and evolving human-AI collaboration across sessions.\nPinecone\n- MCP server for searching and uploading records to Pinecone. Allows for simple RAG features, leveraging Pinecone's Inference API.\nPlacid.app\n- Generate image and video creatives using Placid.app templates\nPlaywright\n- This MCP Server will help you run browser automation and webscraping using Playwright\nPostman\n- MCP server for running Postman Collections locally via Newman. Allows for simple execution of Postman Server and returns the results of whether the collection passed all the tests.\nProductboard\n- Integrate the Productboard API into agentic workflows via MCP.\nPrometheus\n- Query and analyze Prometheus - open-source monitoring system.\nPulumi\n- MCP Server to Interact with Pulumi API, creates and lists Stacks\nPushover\n- Send instant notifications to your devices using\nPushover.net\nQGIS\n- connects QGIS to Claude AI through the MCP. This integration enables prompt-assisted project creation, layer loading, code execution, and more.\nQuickChart\n- A Model Context Protocol server for generating charts using QuickChart.io\nQwen_Max\n- A Model Context Protocol (MCP) server implementation for the Qwen models.\nRabbitMQ\n- The MCP server that interacts with RabbitMQ to publish and consume messages.\nRAG Web Browser\nAn MCP server for Apify's open-source RAG Web Browser\nActor\nto perform web searches, scrape URLs, and return content in Markdown.\nReaper\n- Interact with your\nReaper\n(Digital Audio Workstation) projects.\nRedis\n- Redis database operations and caching microservice server with support for key-value operations, expiration management, and pattern-based key listing.\nRedis\nMCP server to interact with Redis Server, AWS Memory DB, etc for caching or other use-cases where in-memory and key-value based storage is appropriate\nRememberizer AI\n- An MCP server designed for interacting with the Rememberizer data source, facilitating enhanced knowledge retrieval.\nReplicate\n- Search, run and manage machine learning models on Replicate through a simple tool-based interface. Browse models, create predictions, track their status, and handle generated images.\nResend\n- Send email using Resend services\nRquest\n- An MCP server providing realistic browser-like HTTP request capabilities with accurate TLS/JA3/JA4 fingerprints for bypassing anti-bot measures.\nRijksmuseum\n- Interface with the Rijksmuseum API to search artworks, retrieve artwork details, access image tiles, and explore user collections.\nRiot Games\n- MCP server for League of Legends \u2013 fetch player info, ranks, champion stats, and match history via Riot API.\nSalesforce MCP\n- Interact with Salesforce Data and Metadata\nScholarly\n- A MCP server to search for scholarly and academic articles.\nscrapling-fetch\n- Access text content from bot-protected websites. Fetches HTML/markdown from sites with anti-automation measures using Scrapling.\nSearXNG\n- A Model Context Protocol Server for\nSearXNG\nSEC EDGAR\n- (by Stefano Amorelli) A community Model Context Protocol Server to access financial filings and data through the U.S. Securities and Exchange Commission (\nSEC\n)\nElectronic Data Gathering, Analysis, and Retrieval\n(\nEDGAR\n) database\nServiceNow\n- A MCP server to interact with a ServiceNow instance\nShopify\n- MCP to interact with Shopify API including order, product, customers and so on.\nSiri Shortcuts\n- MCP to interact with Siri Shortcuts on macOS. Exposes all Shortcuts as MCP tools.\nSnowflake\n- This MCP server enables LLMs to interact with Snowflake databases, allowing for secure and controlled data operations.\nSoccerDataAPI\n- This MCP server provides real-time football match data based on the SoccerDataAPI.\nSolana Agent Kit\n- This MCP server enables LLMs to interact with the Solana blockchain with help of Solana Agent Kit by SendAI, allowing for 40+ protcool actions and growing\nSpotify\n- This MCP allows an LLM to play and use Spotify.\nStarwind UI\n- This MCP provides relevant commands, documentation, and other information to allow LLMs to take full advantage of Starwind UI's open source Astro components.\nStripe\n- This MCP allows integration with Stripe for handling payments, customers, and refunds.\nShaderToy\n- This MCP server lets LLMs to interact with the ShaderToy API, allowing LLMs to learn from compute shaders examples and enabling them to create complex GLSL shaders that they are previously not capable of.\nTMDB\n- This MCP server integrates with The Movie Database (TMDB) API to provide movie information, search capabilities, and recommendations.\nTavily search\n- An MCP server for Tavily's search & news API, with explicit site inclusions/exclusions\nTelegram\n- An MCP server that provides paginated chat reading, message retrieval, and message sending capabilities for Telegram through Telethon integration.\nTelegram-Client\n- A Telegram API bridge that manages user data, dialogs, messages, drafts, read status, and more for seamless interactions.\nTerminal-Control\n- A MCP server that enables secure terminal command execution, directory navigation, and file system operations through a standardized interface.\nTFT-Match-Analyzer\n- MCP server for teamfight tactics match history & match details fetching, providing user the detailed context for every match.\nTicketmaster\n- Search for events, venues, and attractions through the Ticketmaster Discovery API\nTickTick\n- A Model Context Protocol (MCP) server designed to integrate with the TickTick task management platform, enabling intelligent context-aware task operations and automation.\nTodoist\n- Interact with Todoist to manage your tasks.\nTypesense\n- A Model Context Protocol (MCP) server implementation that provides AI models with access to Typesense search capabilities. This server enables LLMs to discover, search, and analyze data stored in Typesense collections.\nTravel Planner\n- Travel planning and itinerary management server integrating with Google Maps API for location search, place details, and route calculations.\nUnity Catalog\n- An MCP server that enables LLMs to interact with Unity Catalog AI, supporting CRUD operations on Unity Catalog Functions and executing them as MCP tools.\nUnity3d Game Engine\n- An MCP server that enables LLMs to interact with Unity3d Game Engine, supporting access to a variety of the Unit's Editor engine tools (e.g. Console Logs, Test Runner logs, Editor functions, hierarchy state, etc) and executing them as MCP tools or gather them as resources.\nUnity Integration (Advanced)\n- Advanced Unity3d Game Engine MCP which supports ,Execution of Any Editor Related Code Directly Inside of Unity, Fetch Logs, Get Editor State and Allow File Access of the Project making it much more useful in Script Editing or asset creation.\nVega-Lite\n- Generate visualizations from fetched data using the VegaLite format and renderer.\nVideo Editor\n- A Model Context Protocol Server to add, edit, and search videos with\nVideo Jungle\n.\nVirtual location (Google Street View,etc.)\n- Integrates Google Map, Google Street View, PixAI, Stability.ai, ComfyUI API and Bluesky to provide a virtual location simulation in LLM (written in Effect.ts)\nVolcEngine TOS\n- A sample MCP server for VolcEngine TOS that flexibly get objects from TOS.\nWanaku MCP Router\n- The Wanaku MCP Router is a SSE-based MCP server that provides an extensible routing engine that allows integrating your enterprise systems with AI agents.\nWebflow\n- Interfact with the Webflow APIs\nwhale-tracker-mcp\n-  A mcp server for tracking cryptocurrency whale transactions.\nWhois MCP\n- MCP server that performs whois lookup against domain, IP, ASN and TLD.\nWikidata MCP\n- Wikidata MCP server that interact with Wikidata, by searching identifiers, extracting metadata, and executing sparql query.\nWildFly MCP\n- WildFly MCP server that enables LLM to interact with running WildFly servers (retrieve metrics, logs, invoke operations, ...).\nWindows CLI\n- MCP server for secure command-line interactions on Windows systems, enabling controlled access to PowerShell, CMD, and Git Bash shells.\nWorld Bank data API\n- A server that fetches data indicators available with the World Bank as part of their data API\nX (Twitter)\n(by EnesCinr) - Interact with twitter API. Post tweets and search for tweets by query.\nX (Twitter)\n(by vidhupv) - Create, manage and publish X/Twitter posts directly through Claude chat.\nxcodebuild\n- \ud83c\udf4e Build iOS Xcode workspace/project and feed back errors to llm.\nXero-mcp-server\n- Enabling clients to interact with Xero system for streamlined accounting, invoicing, and business operations.\nXiYan\n- \ud83d\uddc4\ufe0f An MCP server that supports fetching data from a database using natural language queries, powered by XiyanSQL as the text-to-SQL LLM.\nXMind\n- Read and search through your XMind directory containing XMind files.\nYouTube\n- Extract Youtube video information (with proxies support).\nYouTube\n- Comprehensive YouTube API integration for video management, Shorts creation, and analytics.\nmcp_weather\n- Get weather information from\nhttps://api.open-meteo.com\nAPI.\n\ud83d\udcda Frameworks\nThese are high-level frameworks that make it easier to build MCP servers or clients.\nFor servers\nEasyMCP\n(TypeScript)\nFastAPI to MCP auto generator\n\u2013\u00a0A zero-configuration tool for automatically exposing FastAPI endpoints as MCP tools by\nTadata\nFastMCP\n(TypeScript)\nFoxy Contexts\n\u2013 A library to build MCP servers in Golang by\nstrowk\nHigress MCP Server Hosting\n- A solution for hosting MCP Servers by extending the API Gateway (based on Envoy) with wasm plugins.\nMCP-Framework\nBuild MCP servers with elegance and speed in Typescript. Comes with a CLI to create your project with\nmcp create app\n. Get started with your first server in under 5 minutes by\nAlex Andru\nQuarkus MCP Server SDK\n(Java)\nTemplate MCP Server\n- A CLI tool to create a new Model Context Protocol server project with TypeScript support, dual transport options, and an extensible structure\nFor clients\ncodemirror-mcp\n- CodeMirror extension that implements the Model Context Protocol (MCP) for resource mentions and prompt commands\n\ud83d\udcda Resources\nAdditional resources on MCP.\nAiMCP\n- A collection of MCP clients&servers to find the right mcp tools by\nHekmon\nAwesome Crypto MCP Servers by badkk\n- A curated list of MCP servers by\nLuke Fan\nAwesome MCP Servers by appcypher\n- A curated list of MCP servers by\nStephen Akinyemi\nAwesome MCP Servers by punkpeye\n(\nwebsite\n) - A curated list of MCP servers by\nFrank Fiegel\nAwesome MCP Servers by wong2\n(\nwebsite\n) - A curated list of MCP servers by\nwong2\nDiscord Server\n\u2013\u00a0A community discord server dedicated to MCP by\nFrank Fiegel\nDiscord Server (ModelContextProtocol)\n\u2013 Connect with developers, share insights, and collaborate on projects in an active Discord community dedicated to the Model Context Protocol by\nAlex Andru\nKlavis AI\n- Open Source MCP Infra. Hosted MCP servers and MCP clients on Slack and Discord.\nMCP Router\n\u2013 Free Windows and macOS app that simplifies MCP management while providing seamless app authentication and powerful log visualization by\nMCP Router\nMCP Badges\n\u2013 Quickly highlight your MCP project with clear, eye-catching badges, by\nIronben\nMCP Servers Hub\n(\nwebsite\n) - A curated list of MCP servers by\napappascs\nMCP X Community\n\u2013\u00a0A X community for MCP by\nXiaoyi\nmcp-cli\n- A CLI inspector for the Model Context Protocol by\nwong2\nmcp-get\n- Command line tool for installing and managing MCP servers by\nMichael Latman\nmcp-guardian\n- GUI application + tools for proxying / managing control of MCP servers by\nEQTY Lab\nmcpm\n(\nwebsite\n) - MCP Manager (MCPM) is a Homebrew-like service for managing Model Context Protocol (MCP) servers across clients by\nPathintegral\nmcp-manager\n- Simple Web UI to install and manage MCP servers for Claude Desktop by\nZue\nMCPHub\n\u2013\u00a0An Open Source MacOS & Windows GUI Desktop app for discovering, installing and managing MCP servers by\nJeamee\nmcp.natoma.id\n- A Hosted MCP Platform to discover, install, manage and deploy MCP servers by\nNatoma Labs\nmcp.run\n- A hosted registry and control plane to install & run secure + portable MCP Servers.\nmcp-dockmaster\n- An Open-Sourced UI to install and manage MCP servers for Windows, Linux and MacOS.\nMCP Servers Rating and User Reviews\n- Website to rate MCP servers, write authentic user reviews, and\nsearch engine for agent & mcp\nMCPVerse\n- A portal for creating & hosting authenticated MCP servers and connecting to them securely.\nmkinf\n- An Open Source registry of hosted MCP Servers to accelerate AI agent workflows.\nOpen-Sourced MCP Servers Directory\n- A curated list of MCP servers by\nmcpso\nOpenTools\n- An open registry for finding, installing, and building with MCP servers by\nopentoolsteam\nPulseMCP\n(\nAPI\n) - Community hub & weekly newsletter for discovering MCP servers, clients, articles, and news by\nTadas Antanavicius\n,\nMike Coughlin\n, and\nRavina Patel\nr/mcp\n\u2013\u00a0A Reddit community dedicated to MCP by\nFrank Fiegel\nr/modelcontextprotocol\n\u2013\u00a0A Model Context Protocol community Reddit page - discuss ideas, get answers to your questions, network with like-minded people, and showcase your projects! by\nAlex Andru\nSmithery\n- A registry of MCP servers to find the right tools for your LLM agents by\nHenry Mao\nToolbase\n- Desktop application that manages tools and MCP servers with just a few clicks - no coding required by\ngching\n\ud83d\ude80 Getting Started\nUsing MCP Servers in this Repository\nTypescript-based servers in this repository can be used directly with\nnpx\n.\nFor example, this will start the\nMemory\nserver:\nnpx -y @modelcontextprotocol/server-memory\nPython-based servers in this repository can be used directly with\nuvx\nor\npip\n.\nuvx\nis recommended for ease of use and setup.\nFor example, this will start the\nGit\nserver:\n#\nWith uvx\nuvx mcp-server-git\n#\nWith pip\npip install mcp-server-git\npython -m mcp_server_git\nFollow\nthese\ninstructions to install\nuv\n/\nuvx\nand\nthese\nto install\npip\n.\nUsing an MCP Client\nHowever, running a server on its own isn't very useful, and should instead be configured into an MCP client. For example, here's the Claude Desktop configuration to use the above server:\n{\n\"mcpServers\"\n: {\n\"memory\"\n: {\n\"command\"\n:\n\"\nnpx\n\"\n,\n\"args\"\n: [\n\"\n-y\n\"\n,\n\"\n@modelcontextprotocol/server-memory\n\"\n]\n    }\n  }\n}\nAdditional examples of using the Claude Desktop as an MCP client might look like:\n{\n\"mcpServers\"\n: {\n\"filesystem\"\n: {\n\"command\"\n:\n\"\nnpx\n\"\n,\n\"args\"\n: [\n\"\n-y\n\"\n,\n\"\n@modelcontextprotocol/server-filesystem\n\"\n,\n\"\n/path/to/allowed/files\n\"\n]\n    },\n\"git\"\n: {\n\"command\"\n:\n\"\nuvx\n\"\n,\n\"args\"\n: [\n\"\nmcp-server-git\n\"\n,\n\"\n--repository\n\"\n,\n\"\npath/to/git/repo\n\"\n]\n    },\n\"github\"\n: {\n\"command\"\n:\n\"\nnpx\n\"\n,\n\"args\"\n: [\n\"\n-y\n\"\n,\n\"\n@modelcontextprotocol/server-github\n\"\n],\n\"env\"\n: {\n\"GITHUB_PERSONAL_ACCESS_TOKEN\"\n:\n\"\n<YOUR_TOKEN>\n\"\n}\n    },\n\"postgres\"\n: {\n\"command\"\n:\n\"\nnpx\n\"\n,\n\"args\"\n: [\n\"\n-y\n\"\n,\n\"\n@modelcontextprotocol/server-postgres\n\"\n,\n\"\npostgresql://localhost/mydb\n\"\n]\n    }\n  }\n}\n\ud83d\udee0\ufe0f Creating Your Own Server\nInterested in creating your own MCP server? Visit the official documentation at\nmodelcontextprotocol.io\nfor comprehensive guides, best practices, and technical details on implementing MCP servers.\n\ud83e\udd1d Contributing\nSee\nCONTRIBUTING.md\nfor information about contributing to this repository.\n\ud83d\udd12 Security\nSee\nSECURITY.md\nfor reporting security vulnerabilities.\n\ud83d\udcdc License\nThis project is licensed under the MIT License - see the\nLICENSE\nfile for details.\n\ud83d\udcac Community\nGitHub Discussions\n\u2b50 Support\nIf you find MCP servers useful, please consider starring the repository and contributing new servers or improvements!\nManaged by Anthropic, but built together with the community. The Model Context Protocol is open source and we encourage everyone to contribute their own servers and improvements!"
      ],
      "source_url": "https://github.com/modelcontextprotocol/servers#model-context-protocol-servers"
    },
    "github.com/21st-dev/magic-mcp": {
      "introduction": "21st.dev Magic AI Agent\nMagic Component Platform (MCP) is a powerful AI-driven tool that helps developers create beautiful, modern UI components instantly through natural language descriptions. It integrates seamlessly with popular IDEs and provides a streamlined workflow for UI development.\n\ud83c\udf1f Features\nAI-Powered UI Generation\n: Create UI components by describing them in natural language\nMulti-IDE Support\n:\nCursor\nIDE integration\nWindsurf\nsupport\nVSCode\nsupport\nVSCode + Cline\nintegration (Beta)\nModern Component Library\n: Access to a vast collection of pre-built, customizable components inspired by\n21st.dev\nReal-time Preview\n: Instantly see your components as you create them\nTypeScript Support\n: Full TypeScript support for type-safe development\nSVGL Integration\n: Access to a vast collection of professional brand assets and logos\nComponent Enhancement\n: Improve existing components with advanced features and animations (Coming Soon)\n\ud83c\udfaf How It Works\nTell Agent What You Need\nIn your AI Agent's chat, just type\n/ui\nand describe the component you're looking for\nExample:\n/ui create a modern navigation bar with responsive design\nLet Magic Create It\nYour IDE prompts you to use Magic\nMagic instantly builds a polished UI component\nComponents are inspired by 21st.dev's library\nSeamless Integration\nComponents are automatically added to your project\nStart using your new UI components right away\nAll components are fully customizable\n\ud83d\ude80 Getting Started\nPrerequisites\nNode.js (Latest LTS version r",
      "mcp_relevant_sections": [
        "21st.dev Magic AI Agent\nMagic Component Platform (MCP) is a powerful AI-driven tool that helps developers create beautiful, modern UI components instantly through natural language descriptions. It integrates seamlessly with popular IDEs and provides a streamlined workflow for UI development.\n\ud83c\udf1f Features\nAI-Powered UI Generation\n: Create UI components by describing them in natural language\nMulti-IDE Support\n:\nCursor\nIDE integration\nWindsurf\nsupport\nVSCode\nsupport\nVSCode + Cline\nintegration (Beta)\nModern Component Library\n: Access to a vast collection of pre-built, customizable components inspired by\n21st.dev\nReal-time Preview\n: Instantly see your components as you create them\nTypeScript Support\n: Full TypeScript support for type-safe development\nSVGL Integration\n: Access to a vast collection of professional brand assets and logos\nComponent Enhancement\n: Improve existing components with advanced features and animations (Coming Soon)\n\ud83c\udfaf How It Works\nTell Agent What You Need\nIn your AI Agent's chat, just type\n/ui\nand describe the component you're looking for\nExample:\n/ui create a modern navigation bar with responsive design\nLet Magic Create It\nYour IDE prompts you to use Magic\nMagic instantly builds a polished UI component\nComponents are inspired by 21st.dev's library\nSeamless Integration\nComponents are automatically added to your project\nStart using your new UI components right away\nAll components are fully customizable\n\ud83d\ude80 Getting Started\nPrerequisites\nNode.js (Latest LTS version recommended)\nOne of the supported IDEs:\nCursor\nWindsurf\nVSCode (with Cline extension)\nInstallation\nGenerate API Key\nVisit\n21st.dev Magic Console\nGenerate a new API key\nChoose Installation Method\nMethod 1: CLI Installation (Recommended)\nOne command to install and configure MCP for your IDE:\nnpx @21st-dev/cli@latest install\n<\nclient\n>\n--api-key\n<\nkey\n>\nSupported clients: cursor, windsurf, cline, claude\nMethod 2: Manual Configuration\nIf you prefer manual setup, add this to your IDE's MCP config file:\n{\n\"mcpServers\"\n: {\n\"@21st-dev/magic\"\n: {\n\"command\"\n:\n\"\nnpx\n\"\n,\n\"args\"\n: [\n\"\n-y\n\"\n,\n\"\n@21st-dev/magic@latest\n\"\n,\n\"\nAPI_KEY=\n\\\"\nyour-api-key\n\\\"\n\"\n]\n    }\n  }\n}\nConfig file locations:\nCursor:\n~/.cursor/mcp.json\nWindsurf:\n~/.codeium/windsurf/mcp_config.json\nCline:\n~/.cline/mcp_config.json\nClaude:\n~/.claude/mcp_config.json\nMethod 3: VS Code Installation\nFor one-click installation, click one of the install buttons below:\nManual VS Code Setup\nFirst, check the install buttons above for one-click installation. For manual setup:\nAdd the following JSON block to your User Settings (JSON) file in VS Code. You can do this by pressing\nCtrl + Shift + P\nand typing\nPreferences: Open User Settings (JSON)\n:\n{\n\"mcp\"\n: {\n\"inputs\"\n: [\n      {\n\"type\"\n:\n\"\npromptString\n\"\n,\n\"id\"\n:\n\"\napiKey\n\"\n,\n\"description\"\n:\n\"\n21st.dev Magic API Key\n\"\n,\n\"password\"\n:\ntrue\n}\n    ],\n\"servers\"\n: {\n\"@21st-dev/magic\"\n: {\n\"command\"\n:\n\"\nnpx\n\"\n,\n\"args\"\n: [\n\"\n-y\n\"\n,\n\"\n@21st-dev/magic@latest\n\"\n],\n\"env\"\n: {\n\"API_KEY\"\n:\n\"\n${input:apiKey}\n\"\n}\n      }\n    }\n  }\n}\nOptionally, you can add it to a file called\n.vscode/mcp.json\nin your workspace:\n{\n\"inputs\"\n: [\n    {\n\"type\"\n:\n\"\npromptString\n\"\n,\n\"id\"\n:\n\"\napiKey\n\"\n,\n\"description\"\n:\n\"\n21st.dev Magic API Key\n\"\n,\n\"password\"\n:\ntrue\n}\n  ],\n\"servers\"\n: {\n\"@21st-dev/magic\"\n: {\n\"command\"\n:\n\"\nnpx\n\"\n,\n\"args\"\n: [\n\"\n-y\n\"\n,\n\"\n@21st-dev/magic@latest\n\"\n],\n\"env\"\n: {\n\"API_KEY\"\n:\n\"\n${input:apiKey}\n\"\n}\n    }\n  }\n}\n\u2753 FAQ\nHow does Magic AI Agent handle my codebase?\nMagic AI Agent only writes or modifies files related to the components it generates. It follows your project's code style and structure, and integrates seamlessly with your existing codebase without affecting other parts of your application.\nCan I customize the generated components?\nYes! All generated components are fully editable and come with well-structured code. You can modify the styling, functionality, and behavior just like any other React component in your codebase.\nWhat happens if I run out of generations?\nIf you exceed your monthly generation limit, you'll be prompted to upgrade your plan. You can upgrade at any time to continue generating components. Your existing components will remain fully functional.\nHow soon do new components get added to 21st.dev's library?\nAuthors can publish components to 21st.dev at any time, and Magic Agent will have immediate access to them. This means you'll always have access to the latest components and design patterns from the community.\nIs there a limit to component complexity?\nMagic AI Agent can handle components of varying complexity, from simple buttons to complex interactive forms. However, for best results, we recommend breaking down very complex UIs into smaller, manageable components.\n\ud83d\udee0\ufe0f Development\nProject Structure\nmcp/\n\u251c\u2500\u2500 app/\n\u2502   \u2514\u2500\u2500 components/     # Core UI components\n\u251c\u2500\u2500 types/             # TypeScript type definitions\n\u251c\u2500\u2500 lib/              # Utility functions\n\u2514\u2500\u2500 public/           # Static assets\nKey Components\nIdeInstructions\n: Setup instructions for different IDEs\nApiKeySection\n: API key management interface\nWelcomeOnboarding\n: Onboarding flow for new users\n\ud83e\udd1d Contributing\nWe welcome contributions! Please join our\nDiscord community\nand provide feedback to help improve Magic Agent. The source code is available on\nGitHub\n.\n\ud83d\udc65 Community & Support\nDiscord Community\n- Join our active community\nTwitter\n- Follow us for updates\n\u26a0\ufe0f\nBeta Notice\nMagic Agent is currently in beta. All features are free during this period. We appreciate your feedback and patience as we continue to improve the platform.\n\ud83d\udcdd License\nMIT License\n\ud83d\ude4f Acknowledgments\nThanks to our beta testers and community members\nSpecial thanks to the Cursor, Windsurf, and Cline teams for their collaboration\nIntegration with\n21st.dev\nfor component inspiration\nSVGL\nfor logo and brand asset integration\nFor more information, join our\nDiscord community\nor visit\n21st.dev/magic\n."
      ],
      "source_url": "https://github.com/21st-dev/magic-mcp"
    },
    "github.com/Adfin-Engineering/mcp-server-adfin": {
      "introduction": "Requirements:\nPython 3.10 or higher\nStep 1. Install uv:\nMacOS/Linux: curl -LsSf\nhttps://astral.sh/uv/install.sh\n| sh\nWindows: powershell -ExecutionPolicy ByPass -c \"irm\nhttps://astral.sh/uv/install.ps1\n| iex\"\nStep 2. Configure Claude Desktop\nDownload\nClaude Desktop\n.\nLaunch Claude and go to Settings > Developer > Edit Config.\nModify\nclaude_desktop_config.json\nwith:\n{\n\"mcpServers\"\n: {\n\"Adfin\"\n: {\n\"command\"\n:\n\"\n<home_path>/.local/bin/uv\n\"\n,\n\"args\"\n: [\n\"\n--directory\n\"\n,\n\"\n<absolute_path_to_adfin_mcp_folder>\n\"\n,\n\"\nrun\n\"\n,\n\"\nmain_adfin_mcp.py\n\"\n],\n\"env\"\n: {\n\"ADFIN_EMAIL\"\n:\n\"\n<email>\n\"\n,\n\"ADFIN_PASSWORD\"\n:\n\"\n<password>\n\"\n}\n    },\n\"filesystem\"\n: {\n\"command\"\n:\n\"\n<home_path>/.local/bin/uv\n\"\n,\n\"args\"\n: [\n\"\n--directory\n\"\n,\n\"\n<absolute_path_to_adfin_mcp_folder>\n\"\n,\n\"\nrun\n\"\n,\n\"\nfilesystem.py\n\"\n]\n    }\n  }\n}\nRelaunch Claude Desktop.\nThe first time you open Claude Desktop with these setting it may take\n10-20 seconds before the Adfin tools appear in the interface due to\nthe installation of the required packages and the download of the most\nrecent Adfin API documentation.\nEverytime you launch Claude Desktop, the most recent Adfin API tools are made available\nto your AI assistant.\nStep 3. Launch Claude Desktop and let your assistant help you\nExamples\nRequest a credit control status\nGive me a credit control status check.\nCreate a new invoice\nCreate a new invoice for 60 GBP for Abc Def that is due in a week. His email is abc.def@example.com.\nAsk the assistant to upload multiple invoices from you",
      "mcp_relevant_sections": [],
      "source_url": "https://github.com/Adfin-Engineering/mcp-server-adfin"
    },
    "github.com/tinyfish-io/agentql-mcp": {
      "introduction": "AgentQL MCP Server\nThis is a Model Context Protocol (MCP) server that integrates\nAgentQL\n's data extraction capabilities.\nFeatures\nTools\nextract-web-data\n- extract structured data from a given 'url', using 'prompt' as a description of actual data and its fields to extract.\nInstallation\nTo use AgentQL MCP Server to extract data from web pages, you need to install it via npm, get an API key from our\nDev Portal\n, and configure it in your favorite app that supports MCP.\nInstall the package\nnpm install -g agentql-mcp\nConfigure Claude\nOpen Claude Desktop\nSettings\nvia\n\u2318\n+\n,\n(don't confuse with Claude Account Settings)\nGo to\nDeveloper\nsidebar section\nClick\nEdit Config\nand open\nclaude_desktop_config.json\nfile\nAdd\nagentql\nserver inside\nmcpServers\ndictionary in the config file\nRestart the app\n{\n\"mcpServers\"\n: {\n\"agentql\"\n: {\n\"command\"\n:\n\"\nnpx\n\"\n,\n\"args\"\n: [\n\"\n-y\n\"\n,\n\"\nagentql-mcp\n\"\n],\n\"env\"\n: {\n\"AGENTQL_API_KEY\"\n:\n\"\nYOUR_API_KEY\n\"\n}\n    }\n  }\n}\nRead more about MCP configuration in Claude\nhere\n.\nConfigure Cursor\nOpen\nCursor Settings\nGo to\nMCP > MCP Servers\nClick\n+ Add new MCP Server\nEnter the following:\nName: \"agentql\" (or your preferred name)\nType: \"command\"\nCommand:\nenv AGENTQL_API_KEY=YOUR_API_KEY npx -y agentql-mcp\nRead more about MCP configuration in Cursor\nhere\n.\nConfigure Windsurf\nOpen\nWindsurf: MCP Configuration Panel\nClick\nAdd custom server+\nAlternatively you can open\n~/.codeium/windsurf/mcp_config.json\ndirectly\nAdd\nagentql\nserver inside\nmcpServers\ndictionary in the config file\n",
      "mcp_relevant_sections": [
        "AgentQL MCP Server\nThis is a Model Context Protocol (MCP) server that integrates\nAgentQL\n's data extraction capabilities.\nFeatures\nTools\nextract-web-data\n- extract structured data from a given 'url', using 'prompt' as a description of actual data and its fields to extract.\nInstallation\nTo use AgentQL MCP Server to extract data from web pages, you need to install it via npm, get an API key from our\nDev Portal\n, and configure it in your favorite app that supports MCP.\nInstall the package\nnpm install -g agentql-mcp\nConfigure Claude\nOpen Claude Desktop\nSettings\nvia\n\u2318\n+\n,\n(don't confuse with Claude Account Settings)\nGo to\nDeveloper\nsidebar section\nClick\nEdit Config\nand open\nclaude_desktop_config.json\nfile\nAdd\nagentql\nserver inside\nmcpServers\ndictionary in the config file\nRestart the app\n{\n\"mcpServers\"\n: {\n\"agentql\"\n: {\n\"command\"\n:\n\"\nnpx\n\"\n,\n\"args\"\n: [\n\"\n-y\n\"\n,\n\"\nagentql-mcp\n\"\n],\n\"env\"\n: {\n\"AGENTQL_API_KEY\"\n:\n\"\nYOUR_API_KEY\n\"\n}\n    }\n  }\n}\nRead more about MCP configuration in Claude\nhere\n.\nConfigure Cursor\nOpen\nCursor Settings\nGo to\nMCP > MCP Servers\nClick\n+ Add new MCP Server\nEnter the following:\nName: \"agentql\" (or your preferred name)\nType: \"command\"\nCommand:\nenv AGENTQL_API_KEY=YOUR_API_KEY npx -y agentql-mcp\nRead more about MCP configuration in Cursor\nhere\n.\nConfigure Windsurf\nOpen\nWindsurf: MCP Configuration Panel\nClick\nAdd custom server+\nAlternatively you can open\n~/.codeium/windsurf/mcp_config.json\ndirectly\nAdd\nagentql\nserver inside\nmcpServers\ndictionary in the config file\n{\n\"mcpServers\"\n: {\n\"agentql\"\n: {\n\"command\"\n:\n\"\nnpx\n\"\n,\n\"args\"\n: [\n\"\n-y\n\"\n,\n\"\nagentql-mcp\n\"\n],\n\"env\"\n: {\n\"AGENTQL_API_KEY\"\n:\n\"\nYOUR_API_KEY\n\"\n}\n    }\n  }\n}\nRead more about MCP configuration in Windsurf\nhere\n.\nValidate MCP integration\nGive your agent a task that will require extracting data from the web. For example:\nExtract the list of videos from the page https://www.youtube.com/results?search_query=agentql, every video should have a title, an author name, a number of views and a url to the video. Make sure to exclude ads items. Format this as a markdown table.\nTip\nIn case your agent complains that it can't open urls or load content from the web instead of using AgentQL, try adding \"use tools\" or \"use agentql tool\" hint.\nDevelopment\nInstall dependencies:\nnpm install\nBuild the server:\nnpm run build\nFor development with auto-rebuild:\nnpm run watch\nIf you want to try out development version, you can use the following config instead of the default one:\n{\n\"mcpServers\"\n: {\n\"agentql\"\n: {\n\"command\"\n:\n\"\n/path/to/agentql-mcp/dist/index.js\n\"\n,\n\"env\"\n: {\n\"AGENTQL_API_KEY\"\n:\n\"\nYOUR_API_KEY\n\"\n}\n    }\n  }\n}\nNote\nDon't forget to remove the default AgentQL MCP server config to not confuse Claude with two similar servers.\nDebugging\nSince MCP servers communicate over stdio, debugging can be challenging. We recommend using the\nMCP Inspector\n, which is available as a package script:\nnpm run inspector\nThe Inspector will provide a URL to access debugging tools in your browser."
      ],
      "source_url": "https://github.com/tinyfish-io/agentql-mcp"
    },
    "github.com/Aiven-Open/mcp-aiven": {
      "introduction": "Aiven MCP Server\nA\nModel Context Protocol\n(MCP) server for Aiven.\nThis provides access to the Aiven for PostgreSQL, Kafka, ClickHouse, Valkey and OpenSearch services running in Aiven and the wider Aiven ecosystem of native connectors. Enabling LLMs to build full stack solutions for all use-cases.\nFeatures\nTools\nlist_projects\nList all projects on your Aiven account.\nlist_services\nList all services in a specific Aiven project.\nget_service_details\nGet the detail of your service in a specific Aiven project.\nConfiguration for Claude Desktop\nOpen the Claude Desktop configuration file located at:\nOn macOS:\n~/Library/Application Support/Claude/claude_desktop_config.json\nOn Windows:\n%APPDATA%/Claude/claude_desktop_config.json\nAdd the following:\n{\n\"mcpServers\"\n: {\n\"mcp-aiven\"\n: {\n\"command\"\n:\n\"\nuv\n\"\n,\n\"args\"\n: [\n\"\n--directory\n\"\n,\n\"\n$REPOSITORY_DIRECTORY\n\"\n,\n\"\nrun\n\"\n,\n\"\n--with-editable\n\"\n,\n\"\n$REPOSITORY_DIRECTORY\n\"\n,\n\"\n--python\n\"\n,\n\"\n3.13\n\"\n,\n\"\nmcp-aiven\n\"\n],\n\"env\"\n: {\n\"AIVEN_BASE_URL\"\n:\n\"\nhttps://api.aiven.io\n\"\n,\n\"AIVEN_TOKEN\"\n:\n\"\n$AIVEN_TOKEN\n\"\n}\n    }\n  }\n}\nUpdate the environment variables:\n$REPOSITORY_DIRECTORY\nto point to the folder cointaining the repository\nAIVEN_TOKEN\nto the\nAiven login token\n.\nLocate the command entry for\nuv\nand replace it with the absolute path to the\nuv\nexecutable. This ensures that the correct version of\nuv\nis used when starting the server. On a mac, you can find this path using\nwhich uv\n.\nRestart Claude Desktop to apply the changes.\nConfiguration for Cursor\n",
      "mcp_relevant_sections": [
        "Aiven MCP Server\nA\nModel Context Protocol\n(MCP) server for Aiven.\nThis provides access to the Aiven for PostgreSQL, Kafka, ClickHouse, Valkey and OpenSearch services running in Aiven and the wider Aiven ecosystem of native connectors. Enabling LLMs to build full stack solutions for all use-cases.\nFeatures\nTools\nlist_projects\nList all projects on your Aiven account.\nlist_services\nList all services in a specific Aiven project.\nget_service_details\nGet the detail of your service in a specific Aiven project.\nConfiguration for Claude Desktop\nOpen the Claude Desktop configuration file located at:\nOn macOS:\n~/Library/Application Support/Claude/claude_desktop_config.json\nOn Windows:\n%APPDATA%/Claude/claude_desktop_config.json\nAdd the following:\n{\n\"mcpServers\"\n: {\n\"mcp-aiven\"\n: {\n\"command\"\n:\n\"\nuv\n\"\n,\n\"args\"\n: [\n\"\n--directory\n\"\n,\n\"\n$REPOSITORY_DIRECTORY\n\"\n,\n\"\nrun\n\"\n,\n\"\n--with-editable\n\"\n,\n\"\n$REPOSITORY_DIRECTORY\n\"\n,\n\"\n--python\n\"\n,\n\"\n3.13\n\"\n,\n\"\nmcp-aiven\n\"\n],\n\"env\"\n: {\n\"AIVEN_BASE_URL\"\n:\n\"\nhttps://api.aiven.io\n\"\n,\n\"AIVEN_TOKEN\"\n:\n\"\n$AIVEN_TOKEN\n\"\n}\n    }\n  }\n}\nUpdate the environment variables:\n$REPOSITORY_DIRECTORY\nto point to the folder cointaining the repository\nAIVEN_TOKEN\nto the\nAiven login token\n.\nLocate the command entry for\nuv\nand replace it with the absolute path to the\nuv\nexecutable. This ensures that the correct version of\nuv\nis used when starting the server. On a mac, you can find this path using\nwhich uv\n.\nRestart Claude Desktop to apply the changes.\nConfiguration for Cursor\nNavigate to Cursor -> Settings -> Cursor Settings\nSelect \"MCP Servers\"\nAdd a new server with\nName:\nmcp-aiven\nType:\ncommand\nCommand:\nuv --directory $REPOSITORY_DIRECTORY run --with-editable $REPOSITORY_DIRECTORY --python 3.13 mcp-aiven\nWhere\n$REPOSITORY_DIRECTORY\nis the path to the repository. You might need to add the\nAIVEN_BASE_URL\n,\nAIVEN_PROJECT_NAME\nand\nAIVEN_TOKEN\nas variables\nDevelopment\nAdd the following variables to a\n.env\nfile in the root of the repository.\nAIVEN_BASE_URL=https://api.aiven.io\nAIVEN_TOKEN=$AIVEN_TOKEN\nRun\nuv sync\nto install the dependencies. To install\nuv\nfollow the instructions\nhere\n. Then do\nsource .venv/bin/activate\n.\nFor easy testing, you can run\nmcp dev mcp_aiven/mcp_server.py\nto start the MCP server.\nEnvironment Variables\nThe following environment variables are used to configure the Aiven connection:\nRequired Variables\nAIVEN_BASE_URL\n: The Aiven API url\nAIVEN_TOKEN\n: The authentication token\nDeveloper Considerations for Model Context Protocols (MCPs) and AI Agents\nThis section outlines key developer responsibilities and security considerations when working with Model Context Protocols (MCPs) and AI Agents within this system.\nSelf-Managed MCPs:\nCustomer Responsibility:\nMCPs are executed within the user's environment, not hosted by Aiven. Therefore, users are solely responsible for their operational management, security, and compliance, adhering to the shared responsibility model. (\nhttps://aiven.io/responsibility-matrix\n)\nDeployment and Maintenance:\nDevelopers must handle all aspects of MCP deployment, updates, and maintenance.\nAI Agent Security:\nPermission Control:\nAccess and capabilities of AI Agents are strictly governed by the permissions granted to the API token used for their authentication. Developers must meticulously manage these permissions.\nCredential Handling:\nBe acutely aware that AI Agents may require access credentials (e.g., database connection strings, streaming service tokens) to perform actions on your behalf. Exercise extreme caution when providing such credentials to AI Agents.\nRisk Assessment:\nAdhere to your organization's security policies and conduct thorough risk assessments before granting AI Agents access to sensitive resources.\nAPI Token Best Practices:\nPrinciple of Least Privilege:\nAlways adhere to the principle of least privilege. API tokens should be scoped and restricted to the minimum permissions necessary for their intended function.\nToken Management:\nImplement robust token management practices, including regular rotation and secure storage.\nKey Takeaways:\nUsers retain full control and responsibility for MCP execution and security.\nAI Agent permissions are directly tied to API token permissions.\nExercise extreme caution when providing credentials to AI Agents.\nStrictly adhere to the principle of least privilege when managing API tokens."
      ],
      "source_url": "https://github.com/Aiven-Open/mcp-aiven"
    },
    "github.com/apache/iotdb-mcp-server": {
      "introduction": "IoTDB MCP Server\nOverview\nA Model Context Protocol (MCP) server implementation that provides database interaction and business intelligence capabilities through IoTDB. This server enables running SQL queries.\nComponents\nResources\nThe server doesn't expose any resources.\nPrompts\nThe server doesn't provide any prompts.\nTools\nThe server offers different tools for IoTDB Tree Model and Table Model. You can choose between them by setting the \"IOTDB_SQL_DIALECT\" configuration to either \"tree\" or \"table\".\nTree Model\nmetadata_query\nExecute SHOW/COUNT queries to read metadata from the database\nInput:\nquery_sql\n(string): The SHOW/COUNT SQL query to execute\nReturns: Query results as array of objects\nselect_query\nExecute SELECT queries to read data from the database\nInput:\nquery_sql\n(string): The SELECT SQL query to execute\nReturns: Query results as array of objects\nTable Model\nQuery Tools\nread_query\nExecute SELECT queries to read data from the database\nInput:\nquery\n(string): The SELECT SQL query to execute\nReturns: Query results as array of objects\nSchema Tools\nlist_tables\nGet a list of all tables in the database\nNo input required\nReturns: Array of table names\ndescribe-table\nView schema information for a specific table\nInput:\ntable_name\n(string): Name of table to describe\nReturns: Array of column definitions with names and types\nClaude Desktop Integration\nPrerequisites\nPython with\nuv\npackage manager\nIoTDB installation\nMCP server dependencies\nDevelopment\n# Clone the repository\ngit clone h",
      "mcp_relevant_sections": [
        "IoTDB MCP Server\nOverview\nA Model Context Protocol (MCP) server implementation that provides database interaction and business intelligence capabilities through IoTDB. This server enables running SQL queries.\nComponents\nResources\nThe server doesn't expose any resources.\nPrompts\nThe server doesn't provide any prompts.\nTools\nThe server offers different tools for IoTDB Tree Model and Table Model. You can choose between them by setting the \"IOTDB_SQL_DIALECT\" configuration to either \"tree\" or \"table\".\nTree Model\nmetadata_query\nExecute SHOW/COUNT queries to read metadata from the database\nInput:\nquery_sql\n(string): The SHOW/COUNT SQL query to execute\nReturns: Query results as array of objects\nselect_query\nExecute SELECT queries to read data from the database\nInput:\nquery_sql\n(string): The SELECT SQL query to execute\nReturns: Query results as array of objects\nTable Model\nQuery Tools\nread_query\nExecute SELECT queries to read data from the database\nInput:\nquery\n(string): The SELECT SQL query to execute\nReturns: Query results as array of objects\nSchema Tools\nlist_tables\nGet a list of all tables in the database\nNo input required\nReturns: Array of table names\ndescribe-table\nView schema information for a specific table\nInput:\ntable_name\n(string): Name of table to describe\nReturns: Array of column definitions with names and types\nClaude Desktop Integration\nPrerequisites\nPython with\nuv\npackage manager\nIoTDB installation\nMCP server dependencies\nDevelopment\n# Clone the repository\ngit clone https://github.com/apache/iotdb-mcp-server.git\ncd iotdb_mcp_server",
        "# Install development dependencies\nuv sync\nConfigure the MCP server in Claude Desktop's configuration file:\nMacOS\nLocation:\n~/Library/Application Support/Claude/claude_desktop_config.json\nWindows\nLocation:\n%APPDATA%/Claude/claude_desktop_config.json\nYou may need to put the full path to the uv executable in the command field. You can get this by running\nwhich uv\non MacOS/Linux or\nwhere uv\non Windows.\n{\n\"mcpServers\"\n: {\n\"iotdb\"\n: {\n\"command\"\n:\n\"\nuv\n\"\n,\n\"args\"\n: [\n\"\n--directory\n\"\n,\n\"\nYOUR_REPO_PATH/src/iotdb_mcp_server\n\"\n,\n\"\nrun\n\"\n,\n\"\nserver.py\n\"\n],\n\"env\"\n: {\n\"IOTDB_HOST\"\n:\n\"\n127.0.0.1\n\"\n,\n\"IOTDB_PORT\"\n:\n\"\n6667\n\"\n,\n\"IOTDB_USER\"\n:\n\"\nroot\n\"\n,\n\"IOTDB_PASSWORD\"\n:\n\"\nroot\n\"\n,\n\"IOTDB_DATABASE\"\n:\n\"\ntest\n\"\n,\n\"IOTDB_SQL_DIALECT\"\n:\n\"\ntable\n\"\n}\n    }\n  }\n}"
      ],
      "source_url": "https://github.com/apache/iotdb-mcp-server"
    },
    "github.com/apify/actors-mcp-server": {
      "introduction": "Apify Model Context Protocol (MCP) Server\nImplementation of an MCP server for all\nApify Actors\n.\nThis server enables interaction with one or more Apify Actors that can be defined in the MCP Server configuration.\nThe server can be used in two ways:\n\ud83c\udde6\nMCP Server Actor\n\u2013 HTTP server accessible via Server-Sent Events (SSE), see\nguide\n\u2f95 MCP Server Stdio\n\u2013 Local server available via standard input/output (stdio), see\nguide\nYou can also interact with the MCP server using a chat-like UI with \ud83d\udcac\nTester MCP Client\n\ud83c\udfaf What does Apify MCP server do?\nThe MCP Server Actor allows an AI assistant to use any\nApify Actor\nas a tool to perform a specific task.\nFor example, it can:\nUse\nFacebook Posts Scraper\nto extract data from Facebook posts from multiple pages/profiles\nUse\nGoogle Maps Email Extractor\nto extract Google Maps contact details\nUse\nGoogle Search Results Scraper\nto scrape Google Search Engine Results Pages (SERPs)\nUse\nInstagram Scraper\nto scrape Instagram posts, profiles, places, photos, and comments\nUse\nRAG Web Browser\nto search the web, scrape the top N URLs, and return their content\nMCP Clients\nTo interact with the Apify MCP server, you can use MCP clients such as:\nClaude Desktop\n(only Stdio support)\nVisual Studio Code\n(Stdio and SSE support)\nLibreChat\n(Stdio and SSE support, yet without Authorization header)\nApify Tester MCP Client\n(SSE support with Authorization headers)\nOther clients at\nhttps://modelcontextprotocol.io/clients\nMore clients at\nhttps://glama.ai/mcp/clients\nWhen you ",
      "mcp_relevant_sections": [
        "Apify Model Context Protocol (MCP) Server\nImplementation of an MCP server for all\nApify Actors\n.\nThis server enables interaction with one or more Apify Actors that can be defined in the MCP Server configuration.\nThe server can be used in two ways:\n\ud83c\udde6\nMCP Server Actor\n\u2013 HTTP server accessible via Server-Sent Events (SSE), see\nguide\n\u2f95 MCP Server Stdio\n\u2013 Local server available via standard input/output (stdio), see\nguide\nYou can also interact with the MCP server using a chat-like UI with \ud83d\udcac\nTester MCP Client\n\ud83c\udfaf What does Apify MCP server do?\nThe MCP Server Actor allows an AI assistant to use any\nApify Actor\nas a tool to perform a specific task.\nFor example, it can:\nUse\nFacebook Posts Scraper\nto extract data from Facebook posts from multiple pages/profiles\nUse\nGoogle Maps Email Extractor\nto extract Google Maps contact details\nUse\nGoogle Search Results Scraper\nto scrape Google Search Engine Results Pages (SERPs)\nUse\nInstagram Scraper\nto scrape Instagram posts, profiles, places, photos, and comments\nUse\nRAG Web Browser\nto search the web, scrape the top N URLs, and return their content\nMCP Clients\nTo interact with the Apify MCP server, you can use MCP clients such as:\nClaude Desktop\n(only Stdio support)\nVisual Studio Code\n(Stdio and SSE support)\nLibreChat\n(Stdio and SSE support, yet without Authorization header)\nApify Tester MCP Client\n(SSE support with Authorization headers)\nOther clients at\nhttps://modelcontextprotocol.io/clients\nMore clients at\nhttps://glama.ai/mcp/clients\nWhen you have Actors integrated with the MCP server, you can ask:\n\"Search the web and summarize recent trends about AI Agents\"\n\"Find the top 10 best Italian restaurants in San Francisco\"\n\"Find and analyze the Instagram profile of The Rock\"\n\"Provide a step-by-step guide on using the Model Context Protocol with source URLs\"\n\"What Apify Actors can I use?\"\nThe following image shows how the Apify MCP server interacts with the Apify platform and AI clients:\nWith the MCP Tester client you can load Actors dynamically but this is not yet supported by other MCP clients.\nWe also plan to add more features, see\nRoadmap\nfor more details.\n\ud83d\udd04 What is the Model Context Protocol?\nThe Model Context Protocol (MCP) allows AI applications (and AI agents), such as Claude Desktop, to connect to external tools and data sources.\nMCP is an open protocol that enables secure, controlled interactions between AI applications, AI Agents, and local or remote resources.\nFor more information, see the\nModel Context Protocol\nwebsite or the blog post\nWhat is MCP and why does it matter?\n.\n\ud83e\udd16 How is MCP Server related to AI Agents?\nThe Apify MCP Server exposes Apify's Actors through the MCP protocol, allowing AI Agents or frameworks that implement the MCP protocol to access all Apify Actors as tools for data extraction, web searching, and other tasks.\nTo learn more about AI Agents, explore our blog post:\nWhat are AI Agents?\nand browse Apify's curated\nAI Agent collection\n.\nInterested in building and monetizing your own AI agent on Apify? Check out our\nstep-by-step guide\nfor creating, publishing, and monetizing AI agents on the Apify platform.\n\ud83e\uddf1 Components\nTools\nActors\nAny\nApify Actor\ncan be used as a tool.\nBy default, the server is pre-configured with the Actors specified below, but this can be overridden by providing Actor input.\n'apify/instagram-scraper'\n'apify/rag-web-browser'\n'lukaskrivka/google-maps-with-contact-details'\nThe MCP server loads the Actor input schema and creates MCP tools corresponding to the Actors.\nSee this example of input schema for the\nRAG Web Browser\n.\nThe tool name must always be the full Actor name, such as\napify/rag-web-browser\n.\nThe arguments for an MCP tool represent the input parameters of the Actor.\nFor example, for the\napify/rag-web-browser\nActor, the arguments are:\n{\n\"query\"\n:\n\"\nrestaurants in San Francisco\n\"\n,\n\"maxResults\"\n:\n3\n}\nYou don't need to specify the input parameters or which Actor to call; everything is managed by an LLM.\nWhen a tool is called, the arguments are automatically passed to the Actor by the LLM.\nYou can refer to the specific Actor's documentation for a list of available arguments.\nHelper tools\nThe server provides a set of helper tools to discover available Actors and retrieve their details:\nget-actor-details\n: Retrieves documentation, input schema, and details about a specific Actor.\ndiscover-actors\n: Searches for relevant Actors using keywords and returns their details.\nThere are also tools to manage the available tools list. However, dynamically adding and removing tools requires the MCP client to have the capability to update the tools list (handle\nToolListChangedNotificationSchema\n), which is typically not supported.\nYou can try this functionality using the\nApify Tester MCP Client\nActor.\nTo enable it, set the\nenableActorAutoLoading\nparameter.\nadd-actor-as-tool\n: Adds an Actor by name to the available tools list without executing it, requiring user consent to run later.\nremove-actor-from-tool\n: Removes an Actor by name from the available tools list when it's no longer needed.\nPrompt & Resources\nThe server does not provide any resources and prompts.\nWe plan to add\nApify's dataset\nand\nkey-value store\nas resources in the future.\n\u2699\ufe0f Usage\nThe Apify MCP Server can be used in two ways:\nas an Apify Actor\nrunning on the Apify platform\nor as a\nlocal server\nrunning on your machine.\n\ud83c\udde6 MCP Server Actor\nStandby web server\nThe Actor runs in\nStandby mode\nwith an HTTP web server that receives and processes requests.\nTo start the server with default Actors, send an HTTP GET request with your\nApify API token\nto the following URL:\nhttps://actors-mcp-server.apify.actor?token=<APIFY_TOKEN>\nIt is also possible to start the MCP server with a different set of Actors.\nTo do this, create a\ntask\nand specify the list of Actors you want to use.\nThen, run the task in Standby mode with the selected Actors:\nhttps://USERNAME--actors-mcp-server-task.apify.actor\n?\ntoken=\n<\nAPIFY_TOKEN\n>\nYou can find a list of all available Actors in the\nApify Store\n.\n\ud83d\udcac Interact with the MCP Server over SSE\nOnce the server is running, you can interact with Server-Sent Events (SSE) to send messages to the server and receive responses.\nThe easiest way is to use\nTester MCP Client\non Apify.\nClaude Desktop\ncurrently lacks SSE support, but you can use it with Stdio transport; see\nMCP Server at a local host\nfor more details.\nNote: The free version of Claude Desktop may experience intermittent connection issues with the server.\nIn the client settings, you need to provide server configuration:\n{\n\"mcpServers\"\n: {\n\"apify\"\n: {\n\"type\"\n:\n\"\nsse\n\"\n,\n\"url\"\n:\n\"\nhttps://actors-mcp-server.apify.actor/sse\n\"\n,\n\"env\"\n: {\n\"APIFY_TOKEN\"\n:\n\"\nyour-apify-token\n\"\n}\n        }\n    }\n}\nAlternatively, you can use\nclientSse.ts\nscript or test the server using\ncurl\n</> commands.\nInitiate Server-Sent-Events (SSE) by sending a GET request to the following URL:\ncurl https://actors-mcp-server.apify.actor/sse?token=<APIFY_TOKEN>\nThe server will respond with a\nsessionId\n, which you can use to send messages to the server:\nevent: endpoint\ndata: /message\n?\nsessionId=a1b\nSend a message to the server by making a POST request with the\nsessionId\n:\ncurl -X POST\n\"\nhttps://actors-mcp-server.apify.actor/message?token=<APIFY_TOKEN>&session_id=a1b\n\"\n-H\n\"\nContent-Type: application/json\n\"\n-d\n'\n{\n\"jsonrpc\": \"2.0\",\n\"id\": 1,\n\"method\": \"tools/call\",\n\"params\": {\n\"arguments\": { \"searchStringsArray\": [\"restaurants in San Francisco\"], \"maxCrawledPlacesPerSearch\": 3 },\n\"name\": \"lukaskrivka/google-maps-with-contact-details\"\n}\n}\n'\nThe MCP server will start the Actor\nlukaskrivka/google-maps-with-contact-details\nwith the provided arguments as input parameters.\nFor this POST request, the server will respond with:\nAccepted\nReceive the response. The server will invoke the specified Actor as a tool using the provided query parameters and stream the response back to the client via SSE.\nThe response will be returned as JSON text.\nevent: message\ndata: {\"result\":{\"content\":[{\"type\":\"text\",\"text\":\"{\\\"searchString\\\":\\\"restaurants in San Francisco\\\",\\\"rank\\\":1,\\\"title\\\":\\\"Gary Danko\\\",\\\"description\\\":\\\"Renowned chef Gary Danko's fixed-price menus of American cuisine ... \\\",\\\"price\\\":\\\"$100+\\\"...}}]}}\n\u2f95 MCP Server at a local host\nYou can run the Apify MCP Server on your local machine by configuring it with Claude Desktop or any other\nMCP client\n.\nYou can also use\nSmithery\nto install the server automatically.\nPrerequisites\nMacOS or Windows\nThe latest version of Claude Desktop must be installed (or another MCP client)\nNode.js\n(v18 or higher)\nApify API Token\n(\nAPIFY_TOKEN\n)\nMake sure you have the\nnode\nand\nnpx\ninstalled properly:\nnode -v\nnpx -v\nIf not, follow this guide to install Node.js:\nDownloading and installing Node.js and npm\n.\nClaude Desktop\nTo configure Claude Desktop to work with the MCP server, follow these steps. For a detailed guide, refer to the\nClaude Desktop Users Guide\n.\nDownload Claude for desktop\nAvailable for Windows and macOS.\nFor Linux users, you can build a Debian package using this\nunofficial build script\n.\nOpen the Claude Desktop app and enable\nDeveloper Mode\nfrom the top-left menu bar.\nOnce enabled, open\nSettings\n(also from the top-left menu bar) and navigate to the\nDeveloper Option\n, where you'll find the\nEdit Config\nbutton.\nOpen the configuration file and edit the following file:\nOn macOS:\n~/Library/Application\\ Support/Claude/claude_desktop_config.json\nOn Windows:\n%APPDATA%/Claude/claude_desktop_config.json\nOn Linux:\n~/.config/Claude/claude_desktop_config.json\n{\n\"mcpServers\"\n: {\n\"actors-mcp-server\"\n: {\n\"command\"\n:\n\"\nnpx\n\"\n,\n\"args\"\n: [\n\"\n-y\n\"\n,\n\"\n@apify/actors-mcp-server\n\"\n],\n\"env\"\n: {\n\"APIFY_TOKEN\"\n:\n\"\nyour-apify-token\n\"\n}\n   }\n }\n}\nAlternatively, you can use the\nactors\nargument to select one or more Apify Actors:\n{\n\"mcpServers\"\n: {\n\"actors-mcp-server\"\n: {\n\"command\"\n:\n\"\nnpx\n\"\n,\n\"args\"\n: [\n\"\n-y\n\"\n,\n\"\n@apify/actors-mcp-server\n\"\n,\n\"\n--actors\n\"\n,\n\"\nlukaskrivka/google-maps-with-contact-details,apify/instagram-scraper\n\"\n],\n\"env\"\n: {\n\"APIFY_TOKEN\"\n:\n\"\nyour-apify-token\n\"\n}\n  }\n}\n}\nRestart Claude Desktop\nFully quit Claude Desktop (ensure it's not just minimized or closed).\nRestart Claude Desktop.\nLook for the \ud83d\udd0c icon to confirm that the Actors MCP server is connected.\nOpen the Claude Desktop chat and ask \"What Apify Actors can I use?\"\nExamples\nYou can ask Claude to perform tasks, such as:\nFind and analyze recent research papers about LLMs.\nFind the top 10 best Italian restaurants in San Francisco.\nFind and analyze the Instagram profile of The Rock.\nVS Code\nFor one-click installation, click one of the install buttons below:\nManual installation\nYou can manually install the Apify MCP Server in VS Code. First, click one of the install buttons at the top of this section for a one-click installation.\nAlternatively, add the following JSON block to your User Settings (JSON) file in VS Code. You can do this by pressing\nCtrl + Shift + P\nand typing\nPreferences: Open User Settings (JSON)\n.\n{\n\"mcp\"\n: {\n\"inputs\"\n: [\n      {\n\"type\"\n:\n\"\npromptString\n\"\n,\n\"id\"\n:\n\"\napify_token\n\"\n,\n\"description\"\n:\n\"\nApify API Token\n\"\n,\n\"password\"\n:\ntrue\n}\n    ],\n\"servers\"\n: {\n\"actors-mcp-server\"\n: {\n\"command\"\n:\n\"\nnpx\n\"\n,\n\"args\"\n: [\n\"\n-y\n\"\n,\n\"\n@apify/actors-mcp-server\n\"\n],\n\"env\"\n: {\n\"APIFY_TOKEN\"\n:\n\"\n${input:apify_token}\n\"\n}\n      }\n    }\n  }\n}\nOptionally, you can add it to a file called\n.vscode/mcp.json\nin your workspace - just omit the top-level\nmcp {}\nkey. This will allow you to share the configuration with others.\nIf you want to specify which Actors to load, you can add the\n--actors\nargument:\n{\n\"servers\"\n: {\n\"actors-mcp-server\"\n: {\n\"command\"\n:\n\"\nnpx\n\"\n,\n\"args\"\n: [\n\"\n-y\n\"\n,\n\"\n@apify/actors-mcp-server\n\"\n,\n\"\n--actors\n\"\n,\n\"\nlukaskrivka/google-maps-with-contact-details,apify/instagram-scraper\n\"\n],\n\"env\"\n: {\n\"APIFY_TOKEN\"\n:\n\"\n${input:apify_token}\n\"\n}\n    }\n  }\n}\nVS Code\nFor one-click installation, click one of the install buttons below:\nManual installation\nYou can manually install the Apify MCP Server in VS Code. First, click one of the install buttons at the top of this section for a one-click installation.\nAlternatively, add the following JSON block to your User Settings (JSON) file in VS Code. You can do this by pressing\nCtrl + Shift + P\nand typing\nPreferences: Open User Settings (JSON)\n.\n{\n\"mcp\"\n: {\n\"inputs\"\n: [\n      {\n\"type\"\n:\n\"\npromptString\n\"\n,\n\"id\"\n:\n\"\napify_token\n\"\n,\n\"description\"\n:\n\"\nApify API Token\n\"\n,\n\"password\"\n:\ntrue\n}\n    ],\n\"servers\"\n: {\n\"actors-mcp-server\"\n: {\n\"command\"\n:\n\"\nnpx\n\"\n,\n\"args\"\n: [\n\"\n-y\n\"\n,\n\"\n@apify/actors-mcp-server\n\"\n],\n\"env\"\n: {\n\"APIFY_TOKEN\"\n:\n\"\n${input:apify_token}\n\"\n}\n      }\n    }\n  }\n}\nOptionally, you can add it to a file called\n.vscode/mcp.json\nin your workspace - just omit the top-level\nmcp {}\nkey. This will allow you to share the configuration with others.\nIf you want to specify which Actors to load, you can add the\n--actors\nargument:\n{\n\"servers\"\n: {\n\"actors-mcp-server\"\n: {\n\"command\"\n:\n\"\nnpx\n\"\n,\n\"args\"\n: [\n\"\n-y\n\"\n,\n\"\n@apify/actors-mcp-server\n\"\n,\n\"\n--actors\n\"\n,\n\"\nlukaskrivka/google-maps-with-contact-details,apify/instagram-scraper\n\"\n],\n\"env\"\n: {\n\"APIFY_TOKEN\"\n:\n\"\n${input:apify_token}\n\"\n}\n    }\n  }\n}\nDebugging NPM package @apify/actors-mcp-server with @modelcontextprotocol/inspector\nTo debug the server, use the\nMCP Inspector\ntool:\nexport\nAPIFY_TOKEN=your-apify-token\nnpx @modelcontextprotocol/inspector npx -y @apify/actors-mcp-server\nInstalling via Smithery\nTo install Apify Actors MCP Server for Claude Desktop automatically via\nSmithery\n:\nnpx -y @smithery/cli install @apify/actors-mcp-server --client claude\nStdio clients\nCreate an environment file\n.env\nwith the following content:\nAPIFY_TOKEN=your-apify-token\nIn the\nexamples\ndirectory, you can find an example client to interact with the server via\nstandard input/output (stdio):\nclientStdio.ts\nThis client script starts the MCP server with two specified Actors.\nIt then calls the\napify/rag-web-browser\ntool with a query and prints the result.\nIt demonstrates how to connect to the MCP server, list available tools, and call a specific tool using stdio transport.\nnode dist/examples/clientStdio.js\n\ud83d\udc77\ud83c\udffc Development\nPrerequisites\nNode.js\n(v18 or higher)\nPython 3.9 or higher\nCreate an environment file\n.env\nwith the following content:\nAPIFY_TOKEN=your-apify-token\nBuild the actor-mcp-server package:\nnpm run build\nLocal client (SSE)\nTo test the server with the SSE transport, you can use the script\nexamples/clientSse.ts\n:\nCurrently, the Node.js client does not support establishing a connection to a remote server with custom headers.\nYou need to change the URL to your local server URL in the script.\nnode dist/examples/clientSse.js\nDebugging\nSince MCP servers operate over standard input/output (stdio), debugging can be challenging.\nFor the best debugging experience, use the\nMCP Inspector\n.\nYou can launch the MCP Inspector via\nnpm\nwith this command:\nexport\nAPIFY_TOKEN=your-apify-token\nnpx @modelcontextprotocol/inspector node ./dist/stdio.js\nUpon launching, the Inspector will display a URL that you can access in your browser to begin debugging.\n\u24d8 Limitations and feedback\nThe Actor input schema is processed to be compatible with most MCP clients while adhering to\nJSON Schema\nstandards. The processing includes:\nDescriptions\nare truncated to 500 characters (as defined in\nMAX_DESCRIPTION_LENGTH\n).\nEnum fields\nare truncated to a maximum combined length of 200 characters for all elements (as defined in\nACTOR_ENUM_MAX_LENGTH\n).\nRequired fields\nare explicitly marked with a \"REQUIRED\" prefix in their descriptions for compatibility with frameworks that may not handle JSON schema properly.\nNested properties\nare built for special cases like proxy configuration and request list sources to ensure correct input structure.\nArray item types\nare inferred when not explicitly defined in the schema, using a priority order: explicit type in items > prefill type > default value type > editor type.\nEnum values and examples\nare added to property descriptions to ensure visibility even if the client doesn't fully support JSON schema.\nMemory for each Actor is limited to 4GB.\nFree users have an 8GB limit, 128MB needs to be allocated for running\nActors-MCP-Server\n.\nIf you need other features or have any feedback,\nsubmit an issue\nin Apify Console to let us know.\n\ud83d\ude80 Roadmap (March 2025)\nAdd Apify's dataset and key-value store as resources.\nAdd tools such as Actor logs and Actor runs for debugging.\n\ud83d\udc1b Troubleshooting\nMake sure you have the\nnode\ninstalled by running\nnode -v\nMake sure you have the\nAPIFY_TOKEN\nenvironment variable set\nAlways use the latest version of the MCP server by setting\n@apify/actors-mcp-server@latest\n\ud83d\udcda Learn more\nModel Context Protocol\nWhat are AI Agents?\nWhat is MCP and why does it matter?\nTester MCP Client\nAI agent workflow: building an agent to query Apify datasets\nMCP Client development guide\nHow to build and monetize an AI agent on Apify"
      ],
      "source_url": "https://github.com/apify/actors-mcp-server"
    },
    "github.com/apimatic/apimatic-validator-mcp": {
      "introduction": "APIMatic Validator MCP Server\nThis repository provides a Model Context Protocol (MCP) Server for validating OpenAPI specifications using\nAPIMatic\n. The server processes OpenAPI files and returns validation summaries by leveraging APIMatic\u2019s API.\nFeatures\nValidates OpenAPI 2.0 and 3.0 files\nUses APIMatic\u2019s API for comprehensive validation\nSupports both JSON and YAML formats\nImplements Model Context Protocol (MCP) for seamless integration\nInstallation\nEnsure that\nNode.js v18+\nis installed.\nClone the Repository\ngit clone https://github.com/apimatic/apimatic-validator-mcp.git\ncd\napimatic-validator-mcp\nInstall Dependencies\nnpm install\nBuild the Project\nnpm run build\nConfiguration\nTo use the server, an APIMatic API key is required. Sign up at\nAPIMatic\nand obtain the API key.\nIntegration with Claude Desktop\nModify the\nclaude_desktop_config.json\nfile to integrate the MCP server. If the file does not exist, create one in the following location:\nWindows\ncode\n$env\n:AppData\n\\C\nlaude\n\\c\nlaude_desktop_config.json\nmacOS/Linux\ncode\n~\n/Library/Application\n\\\nSupport/Claude/claude_desktop_config.json\nAdd the MCP Server to the Configuration\n{\n\"mcpServers\"\n: {\n\"APIMatic\"\n: {\n\"command\"\n:\n\"\nnode\n\"\n,\n\"args\"\n: [\n\"\nC:\n\\\\\nPATH\n\\\\\nTO\n\\\\\nPARENT\n\\\\\nFOLDER\n\\\\\nbuild\n\\\\\nindex.js\n\"\n],\n\"env\"\n: {\n\"APIMATIC_API_KEY\"\n:\n\"\n<Add your APIMatic token here>\n\"\n}\n        }\n    }\n}\nOnce configured, a hammer icon should appear in Claude Desktop. Open it to verify that the\nvalidate-openapi-using-apimatic\ntool is successfull",
      "mcp_relevant_sections": [
        "APIMatic Validator MCP Server\nThis repository provides a Model Context Protocol (MCP) Server for validating OpenAPI specifications using\nAPIMatic\n. The server processes OpenAPI files and returns validation summaries by leveraging APIMatic\u2019s API.\nFeatures\nValidates OpenAPI 2.0 and 3.0 files\nUses APIMatic\u2019s API for comprehensive validation\nSupports both JSON and YAML formats\nImplements Model Context Protocol (MCP) for seamless integration\nInstallation\nEnsure that\nNode.js v18+\nis installed.\nClone the Repository\ngit clone https://github.com/apimatic/apimatic-validator-mcp.git\ncd\napimatic-validator-mcp\nInstall Dependencies\nnpm install\nBuild the Project\nnpm run build\nConfiguration\nTo use the server, an APIMatic API key is required. Sign up at\nAPIMatic\nand obtain the API key.\nIntegration with Claude Desktop\nModify the\nclaude_desktop_config.json\nfile to integrate the MCP server. If the file does not exist, create one in the following location:\nWindows\ncode\n$env\n:AppData\n\\C\nlaude\n\\c\nlaude_desktop_config.json\nmacOS/Linux\ncode\n~\n/Library/Application\n\\\nSupport/Claude/claude_desktop_config.json\nAdd the MCP Server to the Configuration\n{\n\"mcpServers\"\n: {\n\"APIMatic\"\n: {\n\"command\"\n:\n\"\nnode\n\"\n,\n\"args\"\n: [\n\"\nC:\n\\\\\nPATH\n\\\\\nTO\n\\\\\nPARENT\n\\\\\nFOLDER\n\\\\\nbuild\n\\\\\nindex.js\n\"\n],\n\"env\"\n: {\n\"APIMATIC_API_KEY\"\n:\n\"\n<Add your APIMatic token here>\n\"\n}\n        }\n    }\n}\nOnce configured, a hammer icon should appear in Claude Desktop. Open it to verify that the\nvalidate-openapi-using-apimatic\ntool is successfully integrated.\nUsage\nAdd an OpenAPI file.\nProvide a prompt to validate it.\nThe validation results will be returned.\nAPIMatic.MCP.Server.For.OpenAPI.Validation.webm"
      ],
      "source_url": "https://github.com/apimatic/apimatic-validator-mcp"
    },
    "github.com/datastax/astra-db-mcp": {
      "introduction": "Astra DB MCP Server\nA Model Context Protocol (MCP) server for interacting with Astra DB. MCP extends the capabilities of Large Language Models (LLMs) by allowing them to interact with external systems as agents.\nPrerequisites\nYou need to have a running Astra DB database. If you don't have one, you can create a free database\nhere\n. From there, you can get two things you need:\nAn Astra DB Application Token\nThe Astra DB API Endpoint\nTo learn how to get these, please\nread the getting started docs\n.\nAdding to an MCP client\nHere's how you can add this server to your MCP client.\nClaude Desktop\nTo add this to\nClaude Desktop\n, go to Preferences -> Developer -> Edit Config and add this JSON blob to\nclaude_desktop_config.json\n:\n{\n\"mcpServers\"\n: {\n\"astra-db-mcp\"\n: {\n\"command\"\n:\n\"\nnpx\n\"\n,\n\"args\"\n: [\n\"\n-y\n\"\n,\n\"\n@datastax/astra-db-mcp\n\"\n],\n\"env\"\n: {\n\"ASTRA_DB_APPLICATION_TOKEN\"\n:\n\"\nyour_astra_db_token\n\"\n,\n\"ASTRA_DB_API_ENDPOINT\"\n:\n\"\nyour_astra_db_endpoint\n\"\n}\n    }\n  }\n}\nWindows PowerShell Users:\nnpx\nis a batch command so modify the JSON as follows:\n\"command\"\n:\n\"\ncmd\n\"\n,\n\"args\"\n: [\n\"\n/k\n\"\n,\n\"\nnpx\n\"\n,\n\"\n-y\n\"\n,\n\"\n@datastax/astra-db-mcp\n\"\n],\nCursor\nTo add this to\nCursor\n, go to Settings -> Cursor Settings -> MCP\nFrom there, you can add the server by clicking the \"+ Add New MCP Server\" button, where you should be brought to an\nmcp.json\nfile.\nTip\n: there is a\n~/.cursor/mcp.json\nthat represents your Global MCP settings, and a project-specific\n.cursor/mcp.json\nfile\nthat is specific to the project.",
      "mcp_relevant_sections": [
        "Astra DB MCP Server\nA Model Context Protocol (MCP) server for interacting with Astra DB. MCP extends the capabilities of Large Language Models (LLMs) by allowing them to interact with external systems as agents.\nPrerequisites\nYou need to have a running Astra DB database. If you don't have one, you can create a free database\nhere\n. From there, you can get two things you need:\nAn Astra DB Application Token\nThe Astra DB API Endpoint\nTo learn how to get these, please\nread the getting started docs\n.\nAdding to an MCP client\nHere's how you can add this server to your MCP client.\nClaude Desktop\nTo add this to\nClaude Desktop\n, go to Preferences -> Developer -> Edit Config and add this JSON blob to\nclaude_desktop_config.json\n:\n{\n\"mcpServers\"\n: {\n\"astra-db-mcp\"\n: {\n\"command\"\n:\n\"\nnpx\n\"\n,\n\"args\"\n: [\n\"\n-y\n\"\n,\n\"\n@datastax/astra-db-mcp\n\"\n],\n\"env\"\n: {\n\"ASTRA_DB_APPLICATION_TOKEN\"\n:\n\"\nyour_astra_db_token\n\"\n,\n\"ASTRA_DB_API_ENDPOINT\"\n:\n\"\nyour_astra_db_endpoint\n\"\n}\n    }\n  }\n}\nWindows PowerShell Users:\nnpx\nis a batch command so modify the JSON as follows:\n\"command\"\n:\n\"\ncmd\n\"\n,\n\"args\"\n: [\n\"\n/k\n\"\n,\n\"\nnpx\n\"\n,\n\"\n-y\n\"\n,\n\"\n@datastax/astra-db-mcp\n\"\n],\nCursor\nTo add this to\nCursor\n, go to Settings -> Cursor Settings -> MCP\nFrom there, you can add the server by clicking the \"+ Add New MCP Server\" button, where you should be brought to an\nmcp.json\nfile.\nTip\n: there is a\n~/.cursor/mcp.json\nthat represents your Global MCP settings, and a project-specific\n.cursor/mcp.json\nfile\nthat is specific to the project. You probably want to install this MCP server into the project-specific file.\nAdd the same JSON as indiciated in the Claude Desktop instructions.\nAlternatively you may be presented with a wizard, where you can enter the following values (for Unix-based systems):\nName: Whatever you want\nType: Command\nCommand:\nenv ASTRA_DB_APPLICATION_TOKEN=your_astra_db_token ASTRA_DB_API_ENDPOINT=your_astra_db_endpoint npx -y @datastax/astra-db-mcp\nOnce added, your editor will be fully connected to your Astra DB database.\nAvailable Tools\nThe server provides the following tools for interacting with Astra DB:\nGetCollections\n: Get all collections in the database\nCreateCollection\n: Create a new collection in the database\nUpdateCollection\n: Update an existing collection in the database\nDeleteCollection\n: Delete a collection from the database\nListRecords\n: List records from a collection in the database\nGetRecord\n: Get a specific record from a collection by ID\nCreateRecord\n: Create a new record in a collection\nUpdateRecord\n: Update an existing record in a collection\nDeleteRecord\n: Delete a record from a collection\nFindRecord\n: Find records in a collection by field value\nBulkCreateRecords\n: Create multiple records in a collection at once\nBulkUpdateRecords\n: Update multiple records in a collection at once\nBulkDeleteRecords\n: Delete multiple records from a collection at once\nOpenBrowser\n: Open a web browser for authentication and setup\nHelpAddToClient\n: Get assistance with adding Astra DB client to your MCP client\nEstimateDocumentCount\n: Get estimate of the number of documents in a collection\nChangelog\nAll notable changes to this project will be documented in\nthis file\n.\nThe format is based on\nKeep a Changelog\n, and this project adheres to\nSemantic Versioning\n.\n\u2764\ufe0f Contributors"
      ],
      "source_url": "https://github.com/datastax/astra-db-mcp"
    },
    "github.com/AudienseCo/mcp-audiense-insights": {
      "introduction": "\ud83c\udfc6 Audiense Insights MCP Server\nThis server, based on the\nModel Context Protocol (MCP)\n, allows\nClaude\nor any other MCP-compatible client to interact with your\nAudiense Insights\naccount. It extracts\nmarketing insights and audience analysis\nfrom Audiense reports, covering\ndemographic, cultural, influencer, and content engagement analysis\n.\n\ud83d\ude80 Prerequisites\nBefore using this server, ensure you have:\nNode.js\n(v18 or higher)\nClaude Desktop App\nAudiense Insights Account\nwith API credentials\nX/Twitter API Bearer Token\n(optional, for enriched influencer data)\nInstalling via Smithery\nTo install Audiense Insights Server for Claude Desktop automatically via\nSmithery\n:\nnpx -y @smithery/cli@latest install @AudienseCo/mcp-audiense-insights --client claude\n\u2699\ufe0f Configuring Claude Desktop\nOpen the configuration file for Claude Desktop:\nMacOS:\ncode\n~\n/Library/Application\n\\\nSupport/Claude/claude_desktop_config.json\nWindows:\ncode %AppData%\n\\C\nlaude\n\\c\nlaude_desktop_config.json\nAdd or update the following configuration:\n\"mcpServers\"\n: {\n\"audiense-insights\"\n: {\n\"command\"\n:\n\"\n/opt/homebrew/bin/node\n\"\n,\n\"args\"\n: [\n\"\n/ABSOLUTE/PATH/TO/YOUR/build/index.js\n\"\n],\n\"env\"\n: {\n\"AUDIENSE_CLIENT_ID\"\n:\n\"\nyour_client_id_here\n\"\n,\n\"AUDIENSE_CLIENT_SECRET\"\n:\n\"\nyour_client_secret_here\n\"\n,\n\"TWITTER_BEARER_TOKEN\"\n:\n\"\nyour_token_here\n\"\n}          \n  }     \n}\nSave the file and restart Claude Desktop.\n\ud83d\udee0\ufe0f Available Tools\n\ud83d\udccc\nget-reports\nDescription\n: Retrieves the list of\nAudiense insights reports\nowned by the authenticated u",
      "mcp_relevant_sections": [
        "\ud83c\udfc6 Audiense Insights MCP Server\nThis server, based on the\nModel Context Protocol (MCP)\n, allows\nClaude\nor any other MCP-compatible client to interact with your\nAudiense Insights\naccount. It extracts\nmarketing insights and audience analysis\nfrom Audiense reports, covering\ndemographic, cultural, influencer, and content engagement analysis\n.\n\ud83d\ude80 Prerequisites\nBefore using this server, ensure you have:\nNode.js\n(v18 or higher)\nClaude Desktop App\nAudiense Insights Account\nwith API credentials\nX/Twitter API Bearer Token\n(optional, for enriched influencer data)\nInstalling via Smithery\nTo install Audiense Insights Server for Claude Desktop automatically via\nSmithery\n:\nnpx -y @smithery/cli@latest install @AudienseCo/mcp-audiense-insights --client claude\n\u2699\ufe0f Configuring Claude Desktop\nOpen the configuration file for Claude Desktop:\nMacOS:\ncode\n~\n/Library/Application\n\\\nSupport/Claude/claude_desktop_config.json\nWindows:\ncode %AppData%\n\\C\nlaude\n\\c\nlaude_desktop_config.json\nAdd or update the following configuration:\n\"mcpServers\"\n: {\n\"audiense-insights\"\n: {\n\"command\"\n:\n\"\n/opt/homebrew/bin/node\n\"\n,\n\"args\"\n: [\n\"\n/ABSOLUTE/PATH/TO/YOUR/build/index.js\n\"\n],\n\"env\"\n: {\n\"AUDIENSE_CLIENT_ID\"\n:\n\"\nyour_client_id_here\n\"\n,\n\"AUDIENSE_CLIENT_SECRET\"\n:\n\"\nyour_client_secret_here\n\"\n,\n\"TWITTER_BEARER_TOKEN\"\n:\n\"\nyour_token_here\n\"\n}          \n  }     \n}\nSave the file and restart Claude Desktop.\n\ud83d\udee0\ufe0f Available Tools\n\ud83d\udccc\nget-reports\nDescription\n: Retrieves the list of\nAudiense insights reports\nowned by the authenticated user.\nParameters\n:\nNone\nResponse\n:\nList of reports in JSON format.\n\ud83d\udccc\nget-report-info\nDescription\n: Fetches detailed information about a\nspecific intelligence report\n, including:\nStatus\nSegmentation type\nAudience size\nSegments\nAccess links\nParameters\n:\nreport_id\n(string)\n: The ID of the intelligence report.\nResponse\n:\nFull report details in JSON format.\nIf the report is still processing, returns a message indicating the pending status.\n\ud83d\udccc\nget-audience-insights\nDescription\n: Retrieves\naggregated insights\nfor a given\naudience\n, including:\nDemographics\n: Gender, age, country.\nBehavioral traits\n: Active hours, platform usage.\nPsychographics\n: Personality traits, interests.\nSocioeconomic factors\n: Income, education status.\nParameters\n:\naudience_insights_id\n(string)\n: The ID of the audience insights.\ninsights\n(array of strings, optional)\n: List of specific insight names to filter.\nResponse\n:\nInsights formatted as a structured text list.\n\ud83d\udccc\nget-baselines\nDescription\n: Retrieves available\nbaseline audiences\n, optionally filtered by\ncountry\n.\nParameters\n:\ncountry\n(string, optional)\n: ISO country code to filter by.\nResponse\n:\nList of baseline audiences in JSON format.\n\ud83d\udccc\nget-categories\nDescription\n: Retrieves the list of\navailable affinity categories\nthat can be used in influencer comparisons.\nParameters\n:\nNone\nResponse\n:\nList of categories in JSON format.\n\ud83d\udccc\ncompare-audience-influencers\nDescription\n: Compares\ninfluencers\nof a given audience with a\nbaseline audience\n. The baseline is determined as follows:\nIf a\nsingle country\nrepresents more than 50% of the audience, that country is used as the baseline.\nOtherwise, the\nglobal baseline\nis used.\nIf a\nspecific segment\nis selected, the full audience is used as the baseline.\nEach influencer comparison includes:\nAffinity (%)\n\u2013 How well the influencer aligns with the audience.\nBaseline Affinity (%)\n\u2013 The influencer\u2019s affinity within the baseline audience.\nUniqueness Score\n\u2013 How distinct the influencer is compared to the baseline.\nParameters\n:\naudience_influencers_id\n(string)\n: ID of the audience influencers.\nbaseline_audience_influencers_id\n(string)\n: ID of the baseline audience influencers.\ncursor\n(number, optional)\n: Pagination cursor.\ncount\n(number, optional)\n: Number of items per page (default: 200).\nbio_keyword\n(string, optional)\n: Filter influencers by\nbio keyword\n.\nentity_type\n(enum:\nperson\n|\nbrand\n, optional)\n: Filter by entity type.\nfollowers_min\n(number, optional)\n: Minimum number of followers.\nfollowers_max\n(number, optional)\n: Maximum number of followers.\ncategories\n(array of strings, optional)\n: Filter influencers by\ncategories\n.\ncountries\n(array of strings, optional)\n: Filter influencers by\ncountry ISO codes\n.\nResponse\n:\nList of influencers with\naffinity scores, baseline comparison, and uniqueness scores\nin JSON format.\n\ud83d\udccc\nget-audience-content\nDescription\n: Retrieves\naudience content engagement details\n, including:\nLiked Content\n: Most popular posts, domains, emojis, hashtags, links, media, and a word cloud.\nShared Content\n: Most shared content categorized similarly.\nInfluential Content\n: Content from influential accounts.\nEach category contains:\npopularPost\n: Most engaged posts.\ntopDomains\n: Most mentioned domains.\ntopEmojis\n: Most used emojis.\ntopHashtags\n: Most used hashtags.\ntopLinks\n: Most shared links.\ntopMedia\n: Shared media.\nwordcloud\n: Most frequently used words.\nParameters\n:\naudience_content_id\n(string)\n: The ID of the audience content.\nResponse\n:\nContent engagement data in JSON format.\n\ud83d\udccc\nreport-summary\nDescription\n: Generates a\ncomprehensive summary\nof an Audiense report, including:\nReport metadata (title, segmentation type)\nFull audience size\nDetailed segment information\nTop insights\nfor each segment (bio keywords, demographics, interests)\nTop influencers\nfor each segment with comparison metrics\nParameters\n:\nreport_id\n(string)\n: The ID of the intelligence report to summarize.\nResponse\n:\nComplete report summary in JSON format with structured data for each segment\nFor pending reports: Status message indicating the report is still processing\nFor reports without segments: Message indicating there are no segments to analyze\n\ud83d\udca1 Predefined Prompts\nThis server includes a preconfigured prompts\naudiense-demo\n: Helps analyze Audiense reports interactively.\nsegment-matching\n: A prompt to match and compare audience segments across Audiense reports, identifying similarities, unique traits, and key insights based on demographics, interests, influencers, and engagement patterns.\nUsage:\nAccepts a reportName argument to find the most relevant report.\nIf an ID is provided, it searches by report ID instead.\nUse case: Structured guidance for audience analysis.\n\ud83d\udee0\ufe0f Troubleshooting\nTools Not Appearing in Claude\nCheck Claude Desktop logs:\ntail -f ~/Library/Logs/Claude/mcp*.log\nVerify environment variables are set correctly.\nEnsure the absolute path to index.js is correct.\nAuthentication Issues\nDouble-check OAuth credentials.\nEnsure the refresh token is still valid.\nVerify that the required API scopes are enabled.\n\ud83d\udcdc Viewing Logs\nTo check server logs:\nFor MacOS/Linux:\ntail -n 20 -f ~/Library/Logs/Claude/mcp*.log\nFor Windows:\nGet-Content -Path \"$env:AppData\\Claude\\Logs\\mcp*.log\" -Wait -Tail 20\n\ud83d\udd10 Security Considerations\nKeep API credentials secure \u2013 never expose them in public repositories.\nUse environment variables to manage sensitive data.\n\ud83d\udcc4 License\nThis project is licensed under the Apache 2.0 License. See the LICENSE file for more details."
      ],
      "source_url": "https://github.com/AudienseCo/mcp-audiense-insights"
    },
    "github.com/punkpeye/awesome-mcp-servers": {
      "introduction": "Awesome MCP Servers\nA curated list of awesome Model Context Protocol (MCP) servers.\nWhat is MCP?\nClients\nTutorials\nCommunity\nLegend\nServer Implementations\nFrameworks\nUtilities\nTips & Tricks\nWhat is MCP?\nMCP\nis an open protocol that enables AI models to securely interact with local and remote resources through standardized server implementations. This list focuses on production-ready and experimental MCP servers that extend AI capabilities through file access, database connections, API integrations, and other contextual services.\nClients\nCheckout\nawesome-mcp-clients\nand\nglama.ai/mcp/clients\n.\nTip\nGlama Chat\nis a multi-modal AI client with MCP support &\nAI gateway\n.\nTutorials\nModel Context Protocol (MCP) Quickstart\nSetup Claude Desktop App to Use a SQLite Database\nCommunity\nr/mcp Reddit\nDiscord Server\nLegend\n\ud83c\udf96\ufe0f \u2013 official implementation\nprogramming language\n\ud83d\udc0d \u2013 Python codebase\n\ud83d\udcc7 \u2013 TypeScript codebase\n\ud83c\udfce\ufe0f \u2013 Go codebase\n\ud83e\udd80 \u2013 Rust codebase\n#\ufe0f\u20e3 - C# Codebase\n\u2615 - Java codebase\nscope\n\u2601\ufe0f - Cloud Service\n\ud83c\udfe0 - Local Service\n\ud83d\udcdf - Embedded Systems\noperating system\n\ud83c\udf4e \u2013 For macOS\n\ud83e\ude9f \u2013 For Windows\n\ud83d\udc27 - For Linux\nNote\nConfused about Local \ud83c\udfe0 vs Cloud \u2601\ufe0f?\nUse local when MCP server is talking to a locally installed software, e.g. taking control over Chrome browser.\nUse network when MCP server is talking to remote APIs, e.g. weather API.\nServer Implementations\nNote\nWe now have a\nweb-based directory\nthat is synced with the repository.\n\ud83d\udd17 -\nAggregators\n\ud83c\udfa8 -\nArt & Culture\n\ud83d\udcc2 -\nBrowser Automation\n\u2601\ufe0f -\nCloud P",
      "mcp_relevant_sections": [
        "Awesome MCP Servers\nA curated list of awesome Model Context Protocol (MCP) servers.\nWhat is MCP?\nClients\nTutorials\nCommunity\nLegend\nServer Implementations\nFrameworks\nUtilities\nTips & Tricks\nWhat is MCP?\nMCP\nis an open protocol that enables AI models to securely interact with local and remote resources through standardized server implementations. This list focuses on production-ready and experimental MCP servers that extend AI capabilities through file access, database connections, API integrations, and other contextual services.\nClients\nCheckout\nawesome-mcp-clients\nand\nglama.ai/mcp/clients\n.\nTip\nGlama Chat\nis a multi-modal AI client with MCP support &\nAI gateway\n.\nTutorials\nModel Context Protocol (MCP) Quickstart\nSetup Claude Desktop App to Use a SQLite Database\nCommunity\nr/mcp Reddit\nDiscord Server\nLegend\n\ud83c\udf96\ufe0f \u2013 official implementation\nprogramming language\n\ud83d\udc0d \u2013 Python codebase\n\ud83d\udcc7 \u2013 TypeScript codebase\n\ud83c\udfce\ufe0f \u2013 Go codebase\n\ud83e\udd80 \u2013 Rust codebase\n#\ufe0f\u20e3 - C# Codebase\n\u2615 - Java codebase\nscope\n\u2601\ufe0f - Cloud Service\n\ud83c\udfe0 - Local Service\n\ud83d\udcdf - Embedded Systems\noperating system\n\ud83c\udf4e \u2013 For macOS\n\ud83e\ude9f \u2013 For Windows\n\ud83d\udc27 - For Linux\nNote\nConfused about Local \ud83c\udfe0 vs Cloud \u2601\ufe0f?\nUse local when MCP server is talking to a locally installed software, e.g. taking control over Chrome browser.\nUse network when MCP server is talking to remote APIs, e.g. weather API.\nServer Implementations\nNote\nWe now have a\nweb-based directory\nthat is synced with the repository.\n\ud83d\udd17 -\nAggregators\n\ud83c\udfa8 -\nArt & Culture\n\ud83d\udcc2 -\nBrowser Automation\n\u2601\ufe0f -\nCloud Platforms\n\ud83d\udc68\u200d\ud83d\udcbb -\nCode Execution\n\ud83e\udd16 -\nCoding Agents\n\ud83d\udda5\ufe0f -\nCommand Line\n\ud83d\udcac -\nCommunication\n\ud83d\udc64 -\nCustomer Data Platforms\n\ud83d\uddc4\ufe0f -\nDatabases\n\ud83d\udcca -\nData Platforms\n\ud83d\udee0\ufe0f -\nDeveloper Tools\n\ud83e\uddee -\nData Science Tools\n\ud83d\udcdf -\nEmbedded system\n\ud83d\udcc2 -\nFile Systems\n\ud83d\udcb0 -\nFinance & Fintech\n\ud83c\udfae -\nGaming\n\ud83e\udde0 -\nKnowledge & Memory\n\ud83d\uddfa\ufe0f -\nLocation Services\n\ud83c\udfaf -\nMarketing\n\ud83d\udcca -\nMonitoring\n\ud83c\udfa5 -\nMultimedia Process\n\ud83d\udd0e -\nSearch & Data Extraction\n\ud83d\udd12 -\nSecurity\n\ud83c\udfc3 -\nSports\n\ud83c\udfa7 -\nSupport & Service Management\n\ud83c\udf0e -\nTranslation Services\n\ud83c\udfa7 -\nText-to-Speech\n\ud83d\ude86 -\nTravel & Transportation\n\ud83d\udd04 -\nVersion Control\n\ud83d\udee0\ufe0f -\nOther Tools and Integrations\n\ud83d\udd17\nAggregators\nServers for accessing many apps and tools through a single MCP server.\njulien040/anyquery\n\ud83c\udfce\ufe0f \ud83c\udfe0 \u2601\ufe0f - Query more than 40 apps with one binary using SQL. It can also connect to your PostgreSQL, MySQL, or SQLite compatible database. Local-first and private by design.\nmetatool-ai/metatool-app\n\ud83d\udcc7 \u2601\ufe0f \ud83c\udfe0 \ud83c\udf4e \ud83e\ude9f \ud83d\udc27 - MetaMCP is the one unified middleware MCP server that manages your MCP connections with GUI.\nmindsdb/mindsdb\n- Connect and unify data across various platforms and databases with\nMindsDB as a single MCP server\n.\nwegotdocs/open-mcp\n\ud83d\udcc7 \ud83c\udfe0 \ud83c\udf4e \ud83e\ude9f \ud83d\udc27 - Turn a web API into an MCP server in 10 seconds and add it to the open source registry:\nhttps://open-mcp.org\nPipedreamHQ/pipedream\n\u2601\ufe0f \ud83c\udfe0 - Connect with 2,500 APIs with 8,000+ prebuilt tools, and manage servers for your users, in your own app.\nVeriTeknik/pluggedin-mcp-proxy\n\ud83d\udcc7 \ud83c\udfe0 - A comprehensive proxy server that combines multiple MCP servers into a single interface with extensive visibility features. It provides discovery and management of tools, prompts, resources, and templates across servers, plus a playground for debugging when building MCP servers.\nWayStation-ai/mcp\n\u2601\ufe0f \ud83c\udf4e \ud83e\ude9f - Seamlessly and securely connect Claude Desktop and other MCP hosts to your favorite apps (Notion, Slack, Monday, Airtable, etc.). Takes less than 90 secs.\n\ud83c\udfa8\nArt & Culture\nAccess and explore art collections, cultural heritage, and museum databases. Enables AI models to search and analyze artistic and cultural content.\nabhiemj/manim-mcp-server\n\ud83d\udc0d \ud83c\udfe0 \ud83e\ude9f \ud83d\udc27 - A local MCP server that generates animations using Manim.\nburningion/video-editing-mcp\n\ud83d\udc0d - Add, Analyze, Search, and Generate Video Edits from your Video Jungle Collection\ncswkim/discogs-mcp-server\n\ud83d\udcc7 \u2601\ufe0f - MCP server to interact with the Discogs API\ndjalal/quran-mcp-server\n\ud83d\udcc7 \u2601\ufe0f MCP server to interact with Quran.com corpus via the official REST API v4.\nmikechao/metmuseum-mcp\n\ud83d\udcc7 \u2601\ufe0f - Metropolitan Museum of Art Collection API integration to search and display artworks in the collection.\nr-huijts/rijksmuseum-mcp\n\ud83d\udcc7 \u2601\ufe0f - Rijksmuseum API integration for artwork search, details, and collections\nr-huijts/oorlogsbronnen-mcp\n\ud83d\udcc7 \u2601\ufe0f - Oorlogsbronnen (War Sources) API integration for accessing historical WWII records, photographs, and documents from the Netherlands (1940-1945)\nsamuelgursky/davinci-resolve-mcp\n\ud83d\udc0d - MCP server integration for DaVinci Resolve providing powerful tools for video editing, color grading, media management, and project control\nyuna0x0/anilist-mcp\n\ud83d\udcc7 \u2601\ufe0f - A MCP server integrating AniList API for anime and manga information\ndiivi/aseprite-mcp\n\ud83d\udc0d \ud83c\udfe0 - MCP server using the Aseprite API to create pixel art\nomni-mcp/isaac-sim-mcp\n\ud83d\udcc7 \u2601\ufe0f - A MCP Server and an extension enables natural language control of NVIDIA Isaac Sim, Lab, OpenUSD and etc.\n8enSmith/mcp-open-library\n\ud83d\udcc7 \u2601\ufe0f - A MCP server for the Open Library API that enables AI assistants to search for book information.\n\ud83d\udcc2\nBrowser Automation\nWeb content access and automation capabilities. Enables searching, scraping, and processing web content in AI-friendly formats.\n34892002/bilibili-mcp-js\n\ud83d\udcc7 \ud83c\udfe0 - A MCP server that supports searching for Bilibili content. Provides LangChain integration examples and test scripts.\nautomatalabs/mcp-server-playwright\n\ud83d\udc0d - An MCP server for browser automation using Playwright\nblackwhite084/playwright-plus-python-mcp\n\ud83d\udc0d - An MCP python server using Playwright for browser automation,more suitable for llm\nbrowserbase/mcp-server-browserbase\n\ud83c\udf96\ufe0f \ud83d\udcc7 - Automate browser interactions in the cloud (e.g. web navigation, data extraction, form filling, and more)\nbrowsermcp/mcp\n\ud83d\udcc7 \ud83c\udfe0 - Automate your local Chrome browser\nco-browser/browser-use-mcp-server\n\ud83d\udc0d - browser-use packaged as an MCP server with SSE transport. includes a dockerfile to run chromium in docker + a vnc server.\nexecuteautomation/playwright-mcp-server\n\ud83d\udcc7 - An MCP server using Playwright for browser automation and webscrapping\neyalzh/browser-control-mcp\n\ud83d\udcc7 \ud83c\udfe0 - An MCP server paired with a browser extension that enables LLM clients to control the user's browser (Firefox).\nfradser/mcp-server-apple-reminders\n\ud83d\udcc7 \ud83c\udfe0 \ud83c\udf4e - An MCP server for interacting with Apple Reminders on macOS\ngetrupt/ashra-mcp\n\ud83d\udc0d \ud83c\udfe0 - Extract structured data from any website. Just prompt and get JSON.\nkimtaeyoon83/mcp-server-youtube-transcript\n\ud83d\udcc7 \u2601\ufe0f - Fetch YouTube subtitles and transcripts for AI analysis\nkimtth/mcp-aoai-web-browsing\n\ud83d\udc0d \ud83c\udfe0 - A\nminimal\nserver/client MCP implementation using Azure OpenAI and Playwright.\nmicrosoft/playwright-mcp\n- Official Microsoft Playwright MCP server, enabling LLMs to interact with web pages through structured accessibility snapshots\nmodelcontextprotocol/server-puppeteer\n\ud83d\udcc7 \ud83c\udfe0 - Browser automation for web scraping and interaction\nndthanhdev/mcp-browser-kit\n\ud83d\udcc7 \ud83c\udfe0 - An MCP Server for interacting with manifest v2 compatible browsers.\npskill9/web-search\n\ud83d\udcc7 \ud83c\udfe0 - An MCP server that enables free web searching using Google search results, with no API keys required.\nrecursechat/mcp-server-apple-shortcuts\n\ud83d\udcc7 \ud83c\udfe0 \ud83c\udf4e - An MCP Server Integration with Apple Shortcuts\n\u2601\ufe0f\nCloud Platforms\nCloud platform service integration. Enables management and interaction with cloud infrastructure and services.\nqiniu/qiniu-mcp-server\n\ud83d\udc0d \u2601\ufe0f - A MCP built on Qiniu Cloud products, supporting access to Qiniu Cloud Storage, media processing services, etc.\nalexbakers/mcp-ipfs\n\ud83d\udcc7 \u2601\ufe0f - upload and manipulation of IPFS storage\nVmLia/books-mcp-server\n\ud83d\udcc7 \u2601\ufe0f - This is an MCP server used for querying books, and it can be applied in common MCP clients, such as Cherry Studio.\nalexei-led/aws-mcp-server\n\ud83d\udc0d \u2601\ufe0f - A lightweight but powerful server that enables AI assistants to execute AWS CLI commands, use Unix pipes, and apply prompt templates for common AWS tasks in a safe Docker environment with multi-architecture support\nalexei-led/k8s-mcp-server\n\ud83d\udc0d - A lightweight yet robust server that empowers AI assistants to securely execute Kubernetes CLI commands (\nkubectl\n,\nhelm\n,\nistioctl\n, and\nargocd\n) using Unix pipes in a safe Docker environment with multi-architecture support.\nbright8192/esxi-mcp-server\n\ud83d\udc0d \u2601\ufe0f - A VMware ESXi/vCenter management server based on MCP (Model Control Protocol), providing simple REST API interfaces for virtual machine management.\ncloudflare/mcp-server-cloudflare\n\ud83c\udf96\ufe0f \ud83d\udcc7 \u2601\ufe0f - Integration with Cloudflare services including Workers, KV, R2, and D1\nflux159/mcp-server-kubernetes\n- \ud83d\udcc7 \u2601\ufe0f/\ud83c\udfe0 Typescript implementation of Kubernetes cluster operations for pods, deployments, services.\nhardik-id/azure-resource-graph-mcp-server\n- \ud83d\udcc7 \u2601\ufe0f/\ud83c\udfe0 - A Model Context Protocol server for querying and analyzing Azure resources at scale using Azure Resource Graph, enabling AI assistants to explore and monitor Azure infrastructure.\njdubois/azure-cli-mcp\n- A wrapper around the Azure CLI command line that allows you to talk directly to Azure\njohnneerdael/netskope-mcp\n\ud83d\udd12 \u2601\ufe0f - An MCP to give access to all Netskope Private Access components within a Netskope Private Access environments including detailed setup information and LLM examples on usage.\nmanusa/Kubernetes MCP Server\n- \ud83c\udfce\ufe0f \ud83c\udfe0 A powerful Kubernetes MCP server with additional support for OpenShift. Besides providing CRUD operations for\nany\nKubernetes resource, this server provides specialized tools to interact with your cluster.\nnwiizo/tfmcp\n- \ud83e\udd80 \ud83c\udfe0 - A Terraform MCP server allowing AI assistants to manage and operate Terraform environments, enabling reading configurations, analyzing plans, applying configurations, and managing Terraform state.\npulumi/mcp-server\n\ud83c\udf96\ufe0f \ud83d\udcc7 \ud83c\udfe0 - MCP server for interacting with Pulumi using the Pulumi Automation API and Pulumi Cloud API. Enables MCP clients to perform Pulumi operations like retrieving package information, previewing changes, deploying updates, and retrieving stack outputs programmatically.\nrohitg00/kubectl-mcp-server\n- \ud83d\udc0d \u2601\ufe0f/\ud83c\udfe0 A Model Context Protocol (MCP) server for Kubernetes that enables AI assistants like Claude, Cursor, and others to interact with Kubernetes clusters through natural language.\nstrowk/mcp-k8s-go\n- \ud83c\udfce\ufe0f \u2601\ufe0f/\ud83c\udfe0 Kubernetes cluster operations through MCP\nthunderboltsid/mcp-nutanix\n- \ud83c\udfce\ufe0f \ud83c\udfe0/\u2601\ufe0f Go-based MCP Server for interfacing with Nutanix Prism Central resources.\nweibaohui/k8m\n- \ud83c\udfce\ufe0f \u2601\ufe0f/\ud83c\udfe0 Provides MCP multi-cluster Kubernetes management and operations, featuring a management interface, logging, and nearly 50 built-in tools covering common DevOps and development scenarios. Supports both standard and CRD resources.\nweibaohui/kom\n- \ud83c\udfce\ufe0f \u2601\ufe0f/\ud83c\udfe0 Provides MCP multi-cluster Kubernetes management and operations. It can be integrated as an SDK into your own project and includes nearly 50 built-in tools covering common DevOps and development scenarios. Supports both standard and CRD resources.\nwenhuwang/mcp-k8s-eye\n\ud83c\udfce\ufe0f \u2601\ufe0f/\ud83c\udfe0 MCP Server for kubernetes management, and analyze your cluster, application health\nerikhoward/adls-mcp-server\n- \ud83d\udc0d \u2601\ufe0f/\ud83c\udfe0 MCP Server for Azure Data Lake Storage. It can perform manage containers, read/write/upload/download operations on container files and manage file metadata.\nsilenceper/mcp-k8s\n\ud83c\udfce\ufe0f \u2601\ufe0f/\ud83c\udfe0 MCP-K8S is an AI-driven Kubernetes resource management tool that allows users to operate any resources in Kubernetes clusters through natural language interaction, including native resources (like Deployment, Service) and custom resources (CRD). No need to memorize complex commands - just describe your needs, and AI will accurately execute the corresponding cluster operations, greatly enhancing the usability of Kubernetes.\nredis/mcp-redis-cloud\n\ud83d\udcc7 \u2601\ufe0f - Manage your Redis Cloud resources effortlessly using natural language. Create databases, monitor subscriptions, and configure cloud deployments with simple commands.\nportainer/portainer-mcp\n- \ud83c\udfce\ufe0f \u2601\ufe0f/\ud83c\udfe0 A powerful MCP server that enables AI assistants to seamlessly interact with Portainer instances, providing natural language access to container management, deployment operations, and infrastructure monitoring capabilities.\n\ud83d\udc68\u200d\ud83d\udcbb\nCode Execution\nCode execution servers. Allow LLMs to execute code in a secure environment, e.g. for coding agents.\npydantic/pydantic-ai/mcp-run-python\n\ud83d\udc0d\ud83c\udfe0- Run Python code in a secure sandbox via MCP tool calls\nyepcode/mcp-server-js\n\ud83c\udf96\ufe0f \ud83d\udcc7 \u2601\ufe0f - Execute any LLM-generated code in a secure and scalable sandbox environment and create your own MCP tools using JavaScript or Python, with full support for NPM and PyPI packages\n\ud83e\udd16\nCoding Agents\nFull coding agents that enable LLMs to read, edit, and execute code and solve general programming tasks completely autonomously.\noraios/serena\n\ud83d\udc0d\ud83c\udfe0 - A fully-featured coding agent that relies on symbolic code operations by using language servers.\nezyang/codemcp\n\ud83d\udc0d\ud83c\udfe0 - Coding agent with basic read, write and command line tools.\ndoggybee/mcp-server-leetcode\n\ud83d\udcc7 \u2601\ufe0f - An MCP server that enables AI models to search, retrieve, and solve LeetCode problems. Supports metadata filtering, user profiles, submissions, and contest data access.\n\ud83d\udda5\ufe0f\nCommand Line\nRun commands, capture output and otherwise interact with shells and command line tools.\nferrislucas/iterm-mcp\n\ud83d\udda5\ufe0f \ud83d\udee0\ufe0f \ud83d\udcac - A Model Context Protocol server that provides access to iTerm. You can run commands and ask questions about what you see in the iTerm terminal.\ng0t4/mcp-server-commands\n\ud83d\udcc7 \ud83c\udfe0 - Run any command with\nrun_command\nand\nrun_script\ntools.\nmaxim-saplin/mcp_safe_local_python_executor\n- Safe Python interpreter based on HF Smolagents\nLocalPythonExecutor\nMladenSU/cli-mcp-server\n\ud83d\udc0d \ud83c\udfe0 - Command line interface with secure execution and customizable security policies\nOthmaneBlial/term_mcp_deepseek\n\ud83d\udc0d \ud83c\udfe0 - A DeepSeek MCP-like Server for Terminal\ntumf/mcp-shell-server\n- A secure shell command execution server implementing the Model Context Protocol (MCP)\nautomateyournetwork/pyATS_MCP\n- Cisco pyATS server enabling structured, model-driven interaction with network devices.\nwonderwhy-er/DesktopCommanderMCP\n\ud83d\udcc7 \ud83c\udfe0 \ud83c\udf4e \ud83e\ude9f \ud83d\udc27 - A swiss-army-knife that can manage/execute programs and read/write/search/edit code and text files.\n\ud83d\udcac\nCommunication\nIntegration with communication platforms for message management and channel operations. Enables AI models to interact with team communication tools.\nAbdelStark/nostr-mcp\n\u2601\ufe0f - A Nostr MCP server that allows to interact with Nostr, enabling posting notes, and more.\nadhikasp/mcp-twikit\n\ud83d\udc0d \u2601\ufe0f - Interact with Twitter search and timeline\nagentmail-toolkit/mcp\n\ud83d\udc0d \ud83d\udcac - An MCP server to create inboxes on the fly to send, receive, and take actions on email. We aren't AI agents for email, but email for AI Agents.\narpitbatra123/mcp-googletasks\n\ud83d\udcc7 \u2601\ufe0f - An MCP server to interface with the Google Tasks API\ncarterlasalle/mac_messages_mcp\n\ud83c\udfe0 \ud83c\udf4e \ud83d\ude80 - An MCP server that securely interfaces with your iMessage database via the Model Context Protocol (MCP), allowing LLMs to query and analyze iMessage conversations. It includes robust phone number validation, attachment processing, contact management, group chat handling, and full support for sending and receiving messages.\nchaindead/telegram-mcp\n\ud83c\udfce\ufe0f \ud83c\udfe0 - Telegram API integration for accessing user data, managing dialogs (chats, channels, groups), retrieving messages, and handling read status\nchigwell/telegram-mcp\n\ud83d\udc0d \ud83c\udfe0 - Telegram API integration for accessing user data, managing dialogs (chats, channels, groups), retrieving messages, sending messages and handling read status.\nelie222/inbox-zero\n\ud83d\udc0d \u2601\ufe0f - An MCP server for Inbox Zero. Adds functionality on top of Gmail like finding out which emails you need to reply to or need to follow up on.\ngitmotion/ntfy-me-mcp\n\ud83d\udcc7 \u2601\ufe0f \ud83c\udfe0 - An ntfy MCP server for sending/fetching ntfy notifications to your self-hosted ntfy server from AI Agents \ud83d\udce4 (supports secure token auth & more - use with npx or docker!)\ngotoolkits/wecombot\n\ud83d\ude80 \u2601\ufe0f - An MCP server application that sends various types of messages to the WeCom group robot.\nhannesrudolph/imessage-query-fastmcp-mcp-server\n\ud83d\udc0d \ud83c\udfe0 \ud83c\udf4e - An MCP server that provides safe access to your iMessage database through Model Context Protocol (MCP), enabling LLMs to query and analyze iMessage conversations with proper phone number validation and attachment handling\njagan-shanmugam/mattermost-mcp-host\n\ud83d\udc0d \ud83c\udfe0 - A MCP server along with MCP host that provides access to Mattermost teams, channels and messages. MCP host is integrated as a bot in Mattermost with access to MCP servers that can be configured.\nlharries/whatsapp-mcp\n\ud83d\udc0d \ud83c\udfce\ufe0f - An MCP server for searching your personal WhatsApp messages, contacts and sending messages to individuals or groups\nline/line-bot-mcp-server\n\ud83c\udf96 \ud83d\udcc7 \u2601\ufe0f - MCP Server for Integrating LINE Official Account\nMarkusPfundstein/mcp-gsuite\n\ud83d\udc0d \u2601\ufe0f - Integration with gmail and Google Calendar.\nmodelcontextprotocol/server-bluesky\n\ud83d\udcc7 \u2601\ufe0f - Bluesky instance integration for querying and interaction\nmodelcontextprotocol/server-slack\n\ud83d\udcc7 \u2601\ufe0f - Slack workspace integration for channel management and messaging\nkorotovsky/slack-mcp-server\n\ud83d\udcc7 \u2601\ufe0f - The most powerful MCP server for Slack Workspaces.\nsawa-zen/vrchat-mcp\n- \ud83d\udcc7 \ud83c\udfe0 This is an MCP server for interacting with the VRChat API. You can retrieve information about friends, worlds, avatars, and more in VRChat.\ntakumi0706/google-calendar-mcp\n\ud83d\udcc7 \u2601\ufe0f - An MCP server to interface with the Google Calendar API. Based on TypeScript.\nteddyzxcv/ntfy-mcp\n- The MCP server that keeps you informed by sending the notification on phone using ntfy\nuserad/didlogic_mcp\n\ud83d\udc0d \u2601\ufe0f - An MCP server for\nDIDLogic\n. Adds functionality to manage SIP endpoints, numbers and destinations.\nzcaceres/gtasks-mcp\n\ud83d\udcc7 \u2601\ufe0f - An MCP server to Manage Google Tasks\nInditexTech/mcp-teams-server\n\ud83d\udc0d \u2601\ufe0f - MCP server that integrates Microsoft Teams messaging (read, post, mention, list members and threads)\nsofteria/ms-365-mcp-server\n\ud83d\udcc7 \u2601\ufe0f - MCP server that connects to the whole Microsoft 365 suite using Graph API (including mail, files, Excel, calendar)\nYCloud-Developers/ycloud-whatsapp-mcp-server\n\ud83d\udcc7 \ud83c\udfe0 - MCP server for WhatsApp Business Platform by YCloud.\njaipandya/producthunt-mcp-server\n\ud83d\udc0d \ud83c\udfe0 - MCP server for Product Hunt. Interact with trending posts, comments, collections, users, and more.\n\ud83d\udc64\nCustomer Data Platforms\nProvides access to customer profiles inside of customer data platforms\niaptic/mcp-server-iaptic\n\ud83c\udf96\ufe0f \ud83d\udcc7 \u2601\ufe0f - Connect with\niaptic\nto ask about your Customer Purchases, Transaction data and App Revenue statistics.\nOpenDataMCP/OpenDataMCP\n\ud83d\udc0d \u2601\ufe0f - Connect any Open Data to any LLM with Model Context Protocol.\nsergehuber/inoyu-mcp-unomi-server\n\ud83d\udcc7 \u2601\ufe0f - An MCP server to access and updates profiles on an Apache Unomi CDP server.\ntinybirdco/mcp-tinybird\n\ud83d\udc0d \u2601\ufe0f - An MCP server to interact with a Tinybird Workspace from any MCP client.\n\ud83d\uddc4\ufe0f\nDatabases\nSecure database access with schema inspection capabilities. Enables querying and analyzing data with configurable security controls including read-only access.\nAiven-Open/mcp-aiven\n- \ud83d\udc0d \u2601\ufe0f \ud83c\udf96\ufe0f -  Navigate your\nAiven projects\nand interact with the PostgreSQL\u00ae, Apache Kafka\u00ae, ClickHouse\u00ae and OpenSearch\u00ae services\nalexanderzuev/supabase-mcp-server\n- Supabase MCP Server with support for SQL query execution and database exploration tools\naliyun/alibabacloud-tablestore-mcp-server\n\u2615 \ud83d\udc0d \u2601\ufe0f - MCP service for Tablestore, features include adding documents, semantic search for documents based on vectors and scalars, RAG-friendly, and serverless.\nbenborla29/mcp-server-mysql\n\u2601\ufe0f \ud83c\udfe0 - MySQL database integration in NodeJS with configurable access controls and schema inspection\nbytebase/dbhub\n\ud83d\udcc7 \ud83c\udfe0 \u2013 Universal database MCP server supporting mainstream databases.\nc4pt0r/mcp-server-tidb\n\ud83d\udc0d \u2601\ufe0f - TiDB database integration with schema inspection and query capabilities\nCanner/wren-engine\n\ud83d\udc0d \ud83e\udd80 \ud83c\udfe0 - The Semantic Engine for Model Context Protocol(MCP) Clients and AI Agents\ncentralmind/gateway\n\ud83c\udfce\ufe0f \ud83c\udfe0 \ud83c\udf4e \ud83e\ude9f - MCP and MCP SSE Server that automatically generate API based on database schema and data. Supports PostgreSQL, Clickhouse, MySQL, Snowflake, BigQuery, Supabase\nchroma-core/chroma-mcp\n\ud83c\udf96\ufe0f \ud83d\udc0d \u2601\ufe0f \ud83c\udfe0 - Chroma MCP server to access local and cloud Chroma instances for retrieval capabilities\nClickHouse/mcp-clickhouse\n\ud83d\udc0d \u2601\ufe0f - ClickHouse database integration with schema inspection and query capabilities\nconfluentinc/mcp-confluent\n\ud83d\udc0d \u2601\ufe0f - Confluent integration to interact with Confluent Kafka and Confluent Cloud REST APIs.\ncr7258/elasticsearch-mcp-server\n\ud83d\udc0d \ud83c\udfe0 - MCP Server implementation that provides Elasticsearch interaction\ncrystaldba/postgres-mcp\n\ud83d\udc0d \ud83c\udfe0 - All-in-one MCP server for Postgres development and operations, with tools for performance analysis, tuning, and health checks\nDataring-engineering/mcp-server-trino\n\ud83d\udc0d \u2601\ufe0f - Trino MCP Server to query and access data from Trino Clusters.\ntuannvm/mcp-trino\n\ud83c\udfce\ufe0f \u2601\ufe0f - A Go implementation of a Model Context Protocol (MCP) server for Trino\ndesigncomputer/mysql_mcp_server\n\ud83d\udc0d \ud83c\udfe0 - MySQL database integration with configurable access controls, schema inspection, and comprehensive security guidelines\nwenb1n-dev/mysql_mcp_server_pro\n\ud83d\udc0d \ud83c\udfe0 - Supports SSE, STDIO; not only limited to MySQL's CRUD functionality; also includes database exception analysis capabilities; controls database permissions based on roles; and makes it easy for developers to extend tools with customization\ndomdomegg/airtable-mcp-server\n\ud83d\udcc7 \ud83c\udfe0 - Airtable database integration with schema inspection, read and write capabilities\nedwinbernadus/nocodb-mcp-server\n\ud83d\udcc7 \u2601\ufe0f - Nocodb database integration, read and write capabilities\nergut/mcp-bigquery-server\n\ud83d\udcc7 \u2601\ufe0f - Server implementation for Google BigQuery integration that enables direct BigQuery database access and querying capabilities\nf4ww4z/mcp-mysql-server\n\ud83d\udcc7 \ud83c\udfe0 - Node.js-based MySQL database integration that provides secure MySQL database operations\nfireproof-storage/mcp-database-server\n\ud83d\udcc7 \u2601\ufe0f - Fireproof ledger database with multi-user sync\nFreePeak/db-mcp-server\n\ud83c\udfce\ufe0f \ud83c\udfe0 \u2013 A high-performance multi-database MCP server built with Golang, supporting MySQL & PostgreSQL (NoSQL coming soon). Includes built-in tools for query execution, transaction management, schema exploration, query building, and performance analysis, with seamless Cursor integration for enhanced database workflows.\nfurey/mongodb-lens\n\ud83d\udcc7 \ud83c\udfe0 - MongoDB Lens: Full Featured MCP Server for MongoDB Databases\ngannonh/firebase-mcp\n\ud83d\udd25 \u26c5\ufe0f - Firebase services including Auth, Firestore and Storage.\nget-convex/convex-backend\n\ud83d\udcc7 \u2601\ufe0f - Convex database integration to introspect tables, functions, and run oneoff queries (\nSource\n)\ngoogleapis/genai-toolbox\n\ud83c\udfce\ufe0f \u2601\ufe0f - Open source MCP server specializing in easy, fast, and secure tools for Databases.\nGreptimeTeam/greptimedb-mcp-server\n\ud83d\udc0d \ud83c\udfe0 - MCP Server for querying GreptimeDB.\nhannesrudolph/sqlite-explorer-fastmcp-mcp-server\n\ud83d\udc0d \ud83c\udfe0 - An MCP server that provides safe, read-only access to SQLite databases through Model Context Protocol (MCP). This server is built with the FastMCP framework, which enables LLMs to explore and query SQLite databases with built-in safety features and query validation.\nidoru/influxdb-mcp-server\n\ud83d\udcc7 \u2601\ufe0f \ud83c\udfe0 - Run queries against InfluxDB OSS API v2.\nisaacwasserman/mcp-snowflake-server\n\ud83d\udc0d \u2601\ufe0f - Snowflake integration implementing read and (optional) write operations as well as insight tracking\njoshuarileydev/supabase-mcp-server\n- Supabase MCP Server for managing and creating projects and organisations in Supabase\njovezhong/mcp-timeplus\n\ud83d\udc0d \u2601\ufe0f - MCP server for Apache Kafka and Timeplus. Able to list Kafka topics, poll Kafka messages, save Kafka data locally and query streaming data with SQL via Timeplus\nKashiwaByte/vikingdb-mcp-server\n\ud83d\udc0d \u2601\ufe0f - VikingDB integration with collection and index introduction, vector store and search capabilities.\nkiliczsh/mcp-mongo-server\n\ud83d\udcc7 \ud83c\udfe0 - A Model Context Protocol Server for MongoDB\nktanaka101/mcp-server-duckdb\n\ud83d\udc0d \ud83c\udfe0 - DuckDB database integration with schema inspection and query capabilities\nLucasHild/mcp-server-bigquery\n\ud83d\udc0d \u2601\ufe0f - BigQuery database integration with schema inspection and query capabilities\nquarkiverse/mcp-server-jdbc\n\u2615 \ud83c\udfe0 - Connect to any JDBC-compatible database and query, insert, update, delete, and more.\njparkerweb/mcp-sqlite\n\ud83d\udcc7 \ud83c\udfe0 - Model Context Protocol (MCP) server that provides comprehensive SQLite database interaction capabilities.\nmemgraph/mcp-memgraph\n\ud83d\udc0d \ud83c\udfe0 - Memgraph MCP Server - includes a tool to run a query against Memgraph and a schema resource.\nmodelcontextprotocol/server-postgres\n\ud83d\udcc7 \ud83c\udfe0 - PostgreSQL database integration with schema inspection and query capabilities\nmodelcontextprotocol/server-sqlite\n\ud83d\udc0d \ud83c\udfe0 - SQLite database operations with built-in analysis features\nneo4j-contrib/mcp-neo4j\n\ud83d\udc0d \ud83c\udfe0 - Model Context Protocol with Neo4j (Run queries, Knowledge Graph Memory, Manaage Neo4j Aura Instances)\nneondatabase/mcp-server-neon\n\ud83d\udcc7 \u2601\ufe0f \u2014 An MCP Server for creating and managing Postgres databases using Neon Serverless Postgres\nniledatabase/nile-mcp-server\nMCP server for Nile's Postgres platform - Manage and query Postgres databases, tenants, users, auth using LLMs\nopenlink/mcp-server-odbc\n\ud83d\udc0d \ud83c\udfe0 - An MCP server for generic Database Management System (DBMS) Connectivity via the Open Database Connectivity (ODBC) protocol\nopenlink/mcp-server-sqlalchemy\n\ud83d\udc0d \ud83c\udfe0 - An MCP server for generic Database Management System (DBMS) Connectivity via SQLAlchemy using Python ODBC (pyodbc)\npab1it0/adx-mcp-server\n\ud83d\udc0d \u2601\ufe0f - Query and analyze Azure Data Explorer databases\npab1it0/prometheus-mcp-server\n\ud83d\udc0d \u2601\ufe0f -  Query and analyze Prometheus, open-source monitoring system.\nprisma/prisma\n\ud83d\udc0d \ud83c\udfe0 - Gives LLMs the ability to manage Prisma Postgres databases (e.g. spin up new database instances or run schema migrations).\nqdrant/mcp-server-qdrant\n\ud83d\udc0d \ud83c\udfe0 - A Qdrant MCP server\nQuantGeekDev/mongo-mcp\n\ud83d\udcc7 \ud83c\udfe0 - MongoDB integration that enables LLMs to interact directly with databases.\nrashidazarang/airtable-mcp\n\ud83d\udc0d \u2601\ufe0f - Connect AI tools directly to Airtable. Query, create, update, and delete records using natural language. Features include base management, table operations, schema manipulation, record filtering, and data migration through a standardized MCP interface.\nredis/mcp-redis\n\ud83d\udc0d \ud83c\udfe0 - The Redis official MCP Server offers an interface to manage and search data in Redis.\nrunekaagaard/mcp-alchemy\n\ud83d\udc0d \ud83c\udfe0 - Universal SQLAlchemy-based database integration supporting PostgreSQL, MySQL, MariaDB, SQLite, Oracle, MS SQL Server and many more databases. Features schema and relationship inspection, and large dataset analysis capabilities.\nsirmews/mcp-pinecone\n\ud83d\udc0d \u2601\ufe0f - Pinecone integration with vector search capabilities\nsupabase-community/supabase-mcp\n\ud83c\udf96\ufe0f \ud83d\udcc7 \u2601\ufe0f - Official Supabase MCP server to connect AI assistants directly with your Supabase project and allows them to perform tasks like managing tables, fetching config, and querying data.\nTheRaLabs/legion-mcp\n\ud83d\udc0d \ud83c\udfe0 Universal database MCP server supporting multiple database types including PostgreSQL, Redshift, CockroachDB, MySQL, RDS MySQL, Microsoft SQL Server, BigQuery, Oracle DB, and SQLite.\ntradercjz/dolphindb-mcp-server\n\ud83d\udc0d \u2601\ufe0f - TDolphinDB database integration with schema inspection and query capabilities\nweaviate/mcp-server-weaviate\n\ud83d\udc0d \ud83d\udcc7 \u2601\ufe0f - An MCP Server to connect to your Weaviate collections as a knowledge base as well as using Weaviate as a chat memory store.\nXGenerationLab/xiyan_mcp_server\n\ud83d\udcc7 \u2601\ufe0f \u2014 An MCP server that supports fetching data from a database using natural language queries, powered by XiyanSQL as the text-to-SQL LLM.\nxing5/mcp-google-sheets\n\ud83d\udc0d \u2601\ufe0f - A Model Context Protocol server for interacting with Google Sheets. This server provides tools to create, read, update, and manage spreadsheets through the Google Sheets API.\nZhwt/go-mcp-mysql\n\ud83c\udfce\ufe0f \ud83c\udfe0 \u2013 Easy to use, zero dependency MySQL MCP server built with Golang with configurable readonly mode and schema inspection.\nzilliztech/mcp-server-milvus\n\ud83d\udc0d \ud83c\udfe0 \u2601\ufe0f - MCP Server for Milvus / Zilliz, making it possible to interact with your database.\nopenlink/mcp-server-jdbc\n\ud83d\udc0d \ud83c\udfe0 - An MCP server for generic Database Management System (DBMS) Connectivity via the Java Database Connectivity (JDBC) protocol\n\ud83d\udcca\nData Platforms\nData Platforms for data integration, transformation and pipeline orchestration.\nflowcore/mcp-flowcore-platform\n\ud83c\udf96\ufe0f \ud83d\udcc7 \u2601\ufe0f \ud83c\udfe0 - Interact with Flowcore to perform actions, ingest data, and analyse, cross reference and utilise any data in your data cores, or in public data cores; all with human language.\nJordiNei/mcp-databricks-server\n\ud83d\udc0d \u2601\ufe0f - Connect to Databricks API, allowing LLMs to run SQL queries, list jobs, and get job status.\nyashshingvi/databricks-genie-MCP\n\ud83d\udc0d \u2601\ufe0f - A server that connects to the Databricks Genie API, allowing LLMs to ask natural language questions, run SQL queries, and interact with Databricks conversational agents.\njwaxman19/qlik-mcp\n\ud83d\udcc7 \u2601\ufe0f - MCP Server for Qlik Cloud API that enables querying applications, sheets, and extracting data from visualizations with comprehensive authentication and rate limiting support.\nkeboola/keboola-mcp-server\n\ud83d\udc0d - interact with Keboola Connection Data Platform. This server provides tools for listing and accessing data from Keboola Storage API.\n\ud83d\udcbb\nDeveloper Tools\nTools and integrations that enhance the development workflow and environment management.\n21st-dev/Magic-MCP\n- Create crafted UI components inspired by the best 21st.dev design engineers.\nHypersequent/qasphere-mcp\n\ud83c\udf96\ufe0f \ud83d\udcc7 \u2601\ufe0f - Integration with\nQA Sphere\ntest management system, enabling LLMs to discover, summarize, and interact with test cases directly from AI-powered IDEs\nadmica/FileScopeMCP\n\ud83d\udc0d \ud83d\udcc7 \ud83e\udd80 - Analyzes your codebase identifying important files based on dependency relationships. Generates diagrams and importance scores, helping AI assistants understand the codebase.\nambar/simctl-mcp\n\ud83d\udcc7 \ud83c\udfe0 \ud83c\udf4e A MCP server implementation for iOS Simulator control.\napi7/apisix-mcp\n\ud83c\udf96\ufe0f \ud83d\udcc7 \ud83c\udfe0 MCP Server that support for querying and managing all resource in\nApache APISIX\n.\nautomation-ai-labs/mcp-link\n\ud83c\udfce\ufe0f \ud83c\udfe0 - Seamlessly Integrate Any API with AI Agents (with OpenAPI Schema)\nazer/react-analyzer-mcp\n\ud83d\udcc7 \ud83c\udfe0 - Analyze React code locally, generate docs / llm.txt for whole project at once\ndavidlin2k/pox-mcp-server\n\ud83d\udc0d \ud83c\udfe0 - MCP server for the POX SDN controller to provides network control and management capabilities.\nCodeLogicIncEngineering/codelogic-mcp-server\n\ud83c\udf96\ufe0f \ud83d\udc0d \u2601\ufe0f \ud83c\udf4e \ud83e\ude9f \ud83d\udc27 - Official MCP server for CodeLogic, providing access to code dependency analytics, architectural risk analysis, and impact assessment tools.\nComet-ML/Opik-MCP\n\ud83c\udf96\ufe0f \ud83d\udcc7 \u2601\ufe0f \ud83c\udfe0 - Use natural language to explore LLM observability, traces, and monitoring data captured by Opik.\nCircleCI/mcp-server-circleci\n\ud83d\udcc7 \u2601\ufe0f Enable AI Agents to fix build failures from CircleCI.\ndelano/postman-mcp-server\n\ud83d\udcc7 \u2601\ufe0f - Interact with\nPostman API\nflipt-io/mcp-server-flipt\n\ud83d\udcc7 \ud83c\udfe0 - Enable AI assistants to interact with your feature flags in\nFlipt\n.\nGLips/Figma-Context-MCP\n\ud83d\udcc7 \ud83c\udfe0 - Provide coding agents direct access to Figma data to help them one-shot design implementation.\ngofireflyio/firefly-mcp\n\ud83c\udf96\ufe0f \ud83d\udcc7 \u2601\ufe0f - Integrates, discovers, manages, and codifies cloud resources with\nFirefly\n.\nGovcraft/rust-docs-mcp-server\n\ud83e\udd80 \ud83c\udfe0 - Provides up-to-date documentation context for a specific Rust crate to LLMs via an MCP tool, using semantic search (embeddings) and LLM summarization.\nharis-musa/excel-mcp-server\n\ud83d\udc0d \ud83c\udfe0 - An Excel manipulation server providing workbook creation, data operations, formatting, and advanced features (charts, pivot tables, formulae).\nhigress-group/higress-ops-mcp-server\n\ud83d\udc0d \ud83c\udfe0 - MCP server that provides comprehensive tools for managing\nHigress\ngateway configurations and operations.\nhijaz/postmancer\n\ud83d\udcc7 \ud83c\udfe0 - A MCP server for replacing Rest Clients like Postman/Insomnia, by allowing your LLM to maintain and use api collections.\nhloiseaufcms/mcp-gopls\n\ud83c\udfce\ufe0f \ud83c\udfe0 - A MCP server for interacting with\nGo's Language Server Protocol (gopls)\nand benefit from advanced Go code analysis features.\nhungthai1401/bruno-mcp\n\ud83d\udcc7 \ud83c\udfe0 - A MCP server for interacting with\nBruno API Client\n.\nhyperb1iss/droidmind\n\ud83d\udc0d \ud83c\udfe0 - Control Android devices with AI through MCP, enabling device control, debugging, system analysis, and UI automation with a comprehensive security framework.\nXixianLiang/HarmonyOS-mcp-server\n\ud83d\udc0d \ud83c\udfe0 - Control HarmonyOS-next devices with AI through MCP. Support device control and UI automation.\nIlyaGulya/gradle-mcp-server\n\ud83c\udfe0 - Gradle integration using the Gradle Tooling API to inspect projects, execute tasks, and run tests with per-test result reporting\nInhiblabCore/mcp-image-compression\n\ud83d\udc0d \ud83c\udfe0 - MCP server for local compression of various image formats.\nios-simulator-mcp\n\ud83d\udcc7 \ud83c\udfe0 \ud83c\udf4e - A Model Context Protocol (MCP) server for interacting with iOS simulators. This server allows you to interact with iOS simulators by getting information about them, controlling UI interactions, and inspecting UI elements.\nInditexTech/mcp-server-simulator-ios-idb\n\ud83d\udcc7 \ud83c\udfe0 \ud83c\udf4e - A Model Context Protocol (MCP) server that enables LLMs to interact with iOS simulators (iPhone, iPad, etc.) through natural language commands.\nIvanAmador/vercel-ai-docs-mcp\n\ud83d\udcc7 \ud83c\udfe0 - A Model Context Protocol (MCP) server that provides AI-powered search and querying capabilities for the Vercel AI SDK documentation.\nj4c0bs/mcp-server-sql-analyzer\n\ud83d\udc0d - MCP server that provides SQL analysis, linting, and dialect conversion using\nSQLGlot\njasonjmcghee/claude-debugs-for-you\n\ud83d\udcc7 \ud83c\udfe0 - An MCP Server and VS Code Extension which enables (language agnostic) automatic debugging via breakpoints and expression evaluation.\njetbrains/mcpProxy\n\ud83c\udf96\ufe0f \ud83d\udcc7 \ud83c\udfe0 - Connect to JetBrains IDE\nqainsights/jmeter-mcp-server\n\ud83d\udc0d \ud83c\udfe0 - JMeter MCP Server for performance testing\nJktfe/serveMyAPI\n\ud83d\udcc7 \ud83c\udfe0 \ud83c\udf4e - A personal MCP (Model Context Protocol) server for securely storing and accessing API keys across projects using the macOS Keychain.\njoshuarileydev/app-store-connect-mcp-server\n\ud83d\udcc7 \ud83c\udfe0 - An MCP server to communicate with the App Store Connect API for iOS Developers\njoshuarileydev/simulator-mcp-server\n\ud83d\udcc7 \ud83c\udfe0 - An MCP server to control iOS Simulators\nqainsights/k6-mcp-server\n\ud83d\udc0d \ud83c\udfe0 - Grafana k6 MCP Server for performance testing\nlamemind/mcp-server-multiverse\n\ud83d\udcc7 \ud83c\udfe0 \ud83d\udee0\ufe0f - A middleware server that enables multiple isolated instances of the same MCP servers to coexist independently with unique namespaces and configurations.\nlangfuse/mcp-server-langfuse\n\ud83d\udc0d \ud83c\udfe0 - MCP server to access and manage LLM application prompts created with Langfuse Prompt Management.\nmobile-next/mobile-mcp\n\ud83d\udcc7 \ud83c\udfe0 \ud83d\udc27 \ud83c\udf4e - MCP Server for Android/iOS application and device automation, development and app scraping. Simulator/Emulator/Physical devices like iPhone, Google Pixel, Samsung supported.\nqainsights/locust-mcp-server\n\ud83d\udc0d \ud83c\udfe0 - Locust MCP Server for performance testing\nmrexodia/user-feedback-mcp\n\ud83d\udc0d \ud83c\udfe0 - Simple MCP Server to enable a human-in-the-loop workflow in tools like Cline and Cursor.\nOctoMind-dev/octomind-mcp\n\ud83d\udcc7 \u2601\ufe0f - lets your preferred AI agent create & run fully managed\nOctomind\nend-to-end tests from your codebase or other data sources like Jira, Slack or TestRail.\nkadykov/mcp-openapi-schema-explorer\n\ud83d\udcc7 \u2601\ufe0f \ud83c\udfe0 - Token-efficient access to OpenAPI/Swagger specs via MCP Resources.\npskill9/website-downloader\n\ud83d\uddc4\ufe0f \ud83d\ude80 - This MCP server provides a tool to download entire websites using wget. It preserves the website structure and converts links to work locally.\nutensils/mcp-nixos\n\ud83d\udc0d \ud83c\udfe0 - MCP server providing accurate information about NixOS packages, system options, Home Manager configurations, and nix-darwin macOS settings to prevent AI hallucinations.\nQuantGeekDev/docker-mcp\n\ud83c\udfce\ufe0f \ud83c\udfe0 - Docker container management and operations through MCP\nckreiling/mcp-server-docker\n\ud83d\udc0d \ud83c\udfe0 - Integrate with Docker to manage containers, images, volumes, and networks.\nr-huijts/xcode-mcp-server\n\ud83d\udcc7 \ud83c\udfe0 \ud83c\udf4e - Xcode integration for project management, file operations, and build automation\nReAPI-com/mcp-openapi\n\ud83d\udcc7 \ud83c\udfe0 - MCP server that lets LLMs know everything about your OpenAPI specifications to discover, explain and generate code/mock data\nRootly-AI-Labs/Rootly-MCP-server\n\ud83c\udf96\ufe0f \ud83d\udc0d \u2601\ufe0f \ud83c\udf4e - MCP server for the incident management platform\nRootly\n.\nsammcj/mcp-package-version\n\ud83d\udcc7 \ud83c\udfe0 - An MCP Server to help LLMs suggest the latest stable package versions when writing code.\nsapientpants/sonarqube-mcp-server\n\ud83e\udd80 \u2601\ufe0f \ud83c\udfe0 - A Model Context Protocol (MCP) server that integrates with SonarQube to provide AI assistants with access to code quality metrics, issues, and quality gate statuses\nSDGLBL/mcp-claude-code\n\ud83d\udc0d \ud83c\udfe0 - An implementation of Claude Code capabilities using MCP, enabling AI code understanding, modification, and project analysis with comprehensive tool support.\nsnaggle-ai/openapi-mcp-server\n\ud83c\udfce\ufe0f \ud83c\udfe0 - Connect any HTTP/REST API server using an Open API spec (v3)\nstass/lldb-mcp\n\ud83d\udc0d \ud83c\udfe0 \ud83d\udc27 \ud83c\udf4e - A MCP server for LLDB enabling AI binary and core file analysis, debugging, disassembling.\nTencentEdgeOne/edgeone-pages-mcp\n\ud83d\udcc7 \u2601\ufe0f - An MCP service for deploying HTML content to EdgeOne Pages and obtaining a publicly accessible URL.\ntumf/mcp-text-editor\n\ud83d\udc0d \ud83c\udfe0 - A line-oriented text file editor. Optimized for LLM tools with efficient partial file access to minimize token usage.\nvivekvells/mcp-pandoc\n\ud83d\uddc4\ufe0f \ud83d\ude80 - MCP server for seamless document format conversion using Pandoc, supporting Markdown, HTML, PDF, DOCX (.docx), csv and more.\nVSCode Devtools\n\ud83d\udcc7 - Connect to VSCode ide and use semantic tools like\nfind_usages\nxcodebuild\n\ud83c\udf4e Build iOS Xcode workspace/project and feed back errors to llm.\nxzq.xu/jvm-mcp-server\n\ud83d\udcc7 \ud83c\udfe0  - An implementation project of a JVM-based MCP (Model Context Protocol) server.\nyangkyeongmo@/mcp-server-apache-airflow\n\ud83d\udc0d \ud83c\udfe0 - MCP server that connects to\nApache Airflow\nusing official client.\nYuChenSSR/mindmap-mcp-server\n\ud83d\udc0d \ud83c\udfe0 - A Model Context Protocol (MCP) server for generating a beautiful interactive mindmap.\nYuChenSSR/multi-ai-advisor\n\ud83d\udcc7 \ud83c\udfe0 - A Model Context Protocol (MCP) server that queries multiple Ollama models and combines their responses, providing diverse AI perspectives on a single question.\nyWorks/mcp-typescribe\n\ud83d\udcc7 \ud83c\udfe0 - MCP server that provides Typescript API information efficiently to the agent to enable it to work with untrained APIs\nzcaceres/fetch-mcp\n\ud83d\udcc7 \ud83c\udfe0 - An MCP server to flexibly fetch JSON, text, and HTML data\nzenml-io/mcp-zenml\n\ud83d\udc0d \ud83c\udfe0 \u2601\ufe0f - An MCP server to connect with your\nZenML\nMLOps and LLMOps pipelines\nidosal/git-mcp\n\ud83d\udcc7 \u2601\ufe0f -\ngitmcp.io\nis a generic remote MCP server to connect to ANY\nGitHub\nrepository or project for documentation\ntgeselle/bugsnag-mcp\n\ud83d\udcc7 \u2601\ufe0f - An MCP server for interacting with\nBugsnag\njordandalton/restcsv-mcp-server\n\ud83d\udcc7 \u2601\ufe0f - An MCP server for CSV files.\ncjo4m06/mcp-shrimp-task-manager\n\ud83d\udcc7 \u2601\ufe0f \ud83c\udfe0 \u2013 A programming-focused task management system that boosts coding agents like Cursor AI with advanced task memory, self-reflection, and dependency management.\nShrimpTaskManager\naxliupore/mcp-code-runner\n\ud83d\udcc7 \ud83c\udfe0 - An MCP server for running code locally via Docker and supporting multiple programming languages.\nyikakia/godoc-mcp-server\n\ud83c\udfce\ufe0f \u2601\ufe0f \ud83e\ude9f \ud83d\udc27 \ud83c\udf4e - Query Go package information on pkg.go.dev\nckanthony/gin-mcp\n\ud83c\udfce\ufe0f \u2601\ufe0f \ud83d\udcdf \ud83e\ude9f \ud83d\udc27 \ud83c\udf4e - A zero-configuration Go library to automatically expose existing Gin web framework APIs as MCP tools.\n\ud83e\uddee\nData Science Tools\nIntegrations and tools designed to simplify data exploration, analysis and enhance data science workflows.\nChronulusAI/chronulus-mcp\n\ud83d\udc0d \u2601\ufe0f - Predict anything with Chronulus AI forecasting and prediction agents.\nreading-plus-ai/mcp-server-data-exploration\n\ud83d\udc0d \u2601\ufe0f - Enables autonomous data exploration on .csv-based datasets, providing intelligent insights with minimal effort.\nzcaceres/markdownify-mcp\n\ud83d\udcc7 \ud83c\udfe0 - An MCP server to convert almost any file or web content into Markdown\ndatalayer/jupyter-mcp-server\n\ud83d\udc0d \ud83c\udfe0 - Model Context Protocol (MCP) Server for Jupyter.\njjsantos01/jupyter-notebook-mcp\n\ud83d\udc0d \ud83c\udfe0 - connects Jupyter Notebook to Claude AI, allowing Claude to directly interact with and control Jupyter Notebooks.\narrismo/kaggle-mcp\n\ud83d\udc0d \u2601\ufe0f - Connects to Kaggle, ability to download and analyze datasets.\n\ud83d\udcdf\nEmbedded System\nProvides access to documentation and shortcuts for working on embedded devices.\nhorw/esp-mcp\n\ud83d\udcdf - Workflow for fixing build issues in ESP32 series chips using ESP-IDF.\n\ud83d\udcc2\nFile Systems\nProvides direct access to local file systems with configurable permissions. Enables AI models to read, write, and manage files within specified directories.\ncyberchitta/llm-context.py\n\ud83d\udc0d \ud83c\udfe0 - Share code context with LLMs via MCP or clipboard\nexoticknight/mcp-file-merger\n\ud83c\udfce\ufe0f \ud83c\udfe0 - File merger tool, suitable for AI chat length limits.\nfilesystem@quarkiverse/quarkus-mcp-servers\n\u2615 \ud83c\udfe0 - A filesystem allowing for browsing and editing files implemented in Java using Quarkus. Available as jar or native image.\nhmk/box-mcp-server\n\ud83d\udcc7 \u2601\ufe0f - Box integration for listing, reading and searching files\nmamertofabian/mcp-everything-search\n\ud83d\udc0d \ud83c\udfe0 \ud83e\ude9f - Fast Windows file search using Everything SDK\nmark3labs/mcp-filesystem-server\n\ud83c\udfce\ufe0f \ud83c\udfe0 - Golang implementation for local file system access.\nmickaelkerjean/filestash\n\ud83c\udfce\ufe0f \u2601\ufe0f - Remote Storage Access: SFTP, S3, FTP, SMB, NFS, WebDAV, GIT, FTPS, gcloud, azure blob, sharepoint, etc.\nmicrosoft/markitdown\n\ud83c\udf96\ufe0f \ud83d\udc0d \ud83c\udfe0 - MCP tool access to MarkItDown -- a library that converts many file formats (local or remote) to Markdown for LLM consumption.\nmodelcontextprotocol/server-filesystem\n\ud83d\udcc7 \ud83c\udfe0 - Direct local file system access.\nmodelcontextprotocol/server-google-drive\n\ud83d\udcc7 \u2601\ufe0f - Google Drive integration for listing, reading, and searching files\nXuanwo/mcp-server-opendal\n\ud83d\udc0d \ud83c\udfe0 \u2601\ufe0f - Access any storage with Apache OpenDAL\u2122\n\ud83d\udcb0\nFinance & Fintech\nFinancial data access and analysis tools. Enables AI models to work with market data, trading platforms, and financial information.\naaronjmars/web3-research-mcp\n\ud83d\udcc7 \u2601\ufe0f - Deep Research for crypto - free & fully local\nOctagonAI/octagon-mcp-server\n\ud83d\udc0d \u2601\ufe0f - Octagon AI Agents to integrate private and public market data\nanjor/coinmarket-mcp-server\n\ud83d\udc0d \u2601\ufe0f - Coinmarket API integration to fetch cryptocurrency listings and quotes\nbankless/onchain-mcp\n\ud83d\udcc7 \u2601\ufe0f - Bankless Onchain API to interact with smart contracts, query transaction and token information\nbase/base-mcp\n\ud83c\udf96\ufe0f \ud83d\udcc7 \u2601\ufe0f - Base Network integration for onchain tools, allowing interaction with Base Network and Coinbase API for wallet management, fund transfers, smart contracts, and DeFi operations\nberlinbra/alpha-vantage-mcp\n\ud83d\udc0d \u2601\ufe0f - Alpha Vantage API integration to fetch both stock and crypto information\nahnlabio/bicscan-mcp\n\ud83c\udf96\ufe0f \ud83d\udc0d \u2601\ufe0f - Risk score / asset holdings of EVM blockchain address (EOA, CA, ENS) and even domain names.\nbitteprotocol/mcp\n\ud83d\udcc7 - Bitte Protocol integration to run AI Agents on several blockchains.\nchargebee/mcp\n\ud83c\udf96\ufe0f \ud83d\udcc7 \u2601\ufe0f - MCP Server that connects AI agents to\nChargebee platform\n.\ncodex-data/codex-mcp\n\ud83c\udf96\ufe0f \ud83d\udcc7 \u2601\ufe0f -\nCodex API\nintegration for real-time enriched blockchain and market data on 60+ networks\ncoinpaprika/dexpaprika-mcp\n\ud83c\udf96\ufe0f \ud83d\udcc7 \u2601\ufe0f \ud83c\udf4e \ud83e\ude9f \ud83d\udc27 - Coinpaprika's DexPaprika MCP server exposes high-performance\nDexPaprika API\ncovering 20+ chains and 5M+ tokens with real time pricing, liquidity pool data & historical OHLCV data, providing AI agents standardized access to comprehensive market data through Model Context Protocol.\ndoggybee/mcp-server-ccxt\n\ud83d\udcc7 \u2601\ufe0f - An MCP server for accessing real-time crypto market data and trading via 20+ exchanges using the CCXT library. Supports spot, futures, OHLCV, balances, orders, and more.\nferdousbhai/investor-agent\n\ud83d\udc0d \u2601\ufe0f - Yahoo Finance integration to fetch stock market data including options recommendations\nferdousbhai/tasty-agent\n\ud83d\udc0d \u2601\ufe0f - Tastyworks API integration to handle trading activities on Tastytrade\ngetalby/nwc-mcp-server\n\ud83d\udcc7 \ud83c\udfe0 - Bitcoin Lightning wallet integration powered by Nostr Wallet Connect\nheurist-network/heurist-mesh-mcp-server\n\ud83c\udf96\ufe0f \u26c5\ufe0f \ud83c\udfe0 \ud83d\udc0d - Access specialized web3 AI agents for blockchain analysis, smart contract security auditing, token metrics evaluation, and on-chain interactions through the Heurist Mesh network. Provides comprehensive tools for DeFi analysis, NFT valuation, and transaction monitoring across multiple blockchains\nintentos-labs/beeper-mcp\n\ud83d\udc0d - Beeper provides transactions on BSC, including balance/token transfers, token swaps in Pancakeswap and beeper reward claims.\nkukapay/blockbeats-mcp\n\ud83d\udc0d \u2601\ufe0f -  An MCP server that delivers blockchain news and in-depth articles from BlockBeats for AI agents.\nkukapay/chainlink-feeds-mcp\n\ud83d\udcc7 \u2601\ufe0f -  Providing real-time access to Chainlink's decentralized on-chain price feeds.\nkukapay/cointelegraph-mcp\n\ud83d\udc0d \u2601\ufe0f -  Providing real-time access to the latest news from Cointelegraph.\nkukapay/crypto-feargreed-mcp\n\ud83d\udc0d \u2601\ufe0f -  Providing real-time and historical Crypto Fear & Greed Index data.\nkukapay/crypto-indicators-mcp\n\ud83d\udc0d \u2601\ufe0f - An MCP server providing a range of cryptocurrency technical analysis indicators and strategie.\nkukapay/crypto-news-mcp\n\ud83d\udc0d \u2601\ufe0f - An MCP server that provides real-time cryptocurrency news sourced from NewsData for AI agents.\nkukapay/crypto-portfolio-mcp\n\ud83d\udc0d \u2601\ufe0f - An MCP server for tracking and managing cryptocurrency portfolio allocations.\nkukapay/crypto-sentiment-mcp\n\ud83d\udc0d \u2601\ufe0f - An MCP server that delivers cryptocurrency sentiment analysis to AI agents.\nkukapay/crypto-trending-mcp\n\ud83d\udc0d \u2601\ufe0f - Tracking the latest trending tokens on CoinGecko.\nkukapay/crypto-whitepapers-mcp\n\ud83d\udc0d \u2601\ufe0f - Serving as a structured knowledge base of crypto whitepapers.\nkukapay/cryptopanic-mcp-server\n\ud83d\udc0d \u2601\ufe0f - Providing latest cryptocurrency news to AI agents, powered by CryptoPanic.\nkukapay/defi-yields-mcp\n\ud83d\udc0d \u2601\ufe0f - An MCP server for AI agents to explore DeFi yield opportunities.\nkukapay/dune-analytics-mcp\n\ud83d\udc0d \u2601\ufe0f -  A mcp server that bridges Dune Analytics data to AI agents.\nkukapay/freqtrade-mcp\n\ud83d\udc0d \u2601\ufe0f - An MCP server that integrates with the Freqtrade cryptocurrency trading bot.\nkukapay/funding-rates-mcp\n\ud83d\udc0d \u2601\ufe0f - Providing real-time funding rate data across major crypto exchanges.\nkukapay/jupiter-mcp\n\ud83d\udc0d \u2601\ufe0f - An MCP server for executing token swaps on the Solana blockchain using Jupiter's new Ultra API.\nkukapay/pancakeswap-poolspy-mcp\n\ud83d\udc0d \u2601\ufe0f -  An MCP server that tracks newly created pools on Pancake Swap.\nkukapay/rug-check-mcp\n\ud83d\udc0d \u2601\ufe0f - An MCP server that detects potential risks in Solana meme tokens.\nkukapay/thegraph-mcp\n\ud83d\udc0d \u2601\ufe0f -  An MCP server that powers AI agents with indexed blockchain data from The Graph.\nkukapay/token-minter-mcp\n\ud83d\udc0d \u2601\ufe0f -  An MCP server providing tools for AI agents to mint ERC-20 tokens across multiple blockchains.\nkukapay/token-revoke-mcp\n\ud83d\udc0d \u2601\ufe0f - An MCP server for checking and revoking ERC-20 token allowances across multiple blockchains.\nkukapay/twitter-username-changes-mcp\n\ud83d\udc0d \u2601\ufe0f - An MCP server that tracks the historical changes of Twitter usernames.\nkukapay/uniswap-poolspy-mcp\n\ud83d\udc0d \u2601\ufe0f -  An MCP server that tracks newly created liquidity pools on Uniswap across multiple blockchains.\nkukapay/uniswap-trader-mcp\n\ud83d\udc0d \u2601\ufe0f -  An MCP server for AI agents to automate token swaps on Uniswap DEX across multiple blockchains.\nkukapay/whale-tracker-mcp\n\ud83d\udc0d \u2601\ufe0f -  A mcp server for tracking cryptocurrency whale transactions.\nlaukikk/alpaca-mcp\n\ud83d\udc0d \u2601\ufe0f - An MCP Server for the Alpaca trading API to manage stock and crypto portfolios, place trades, and access market data.\nlongportapp/openapi\n- \ud83d\udc0d \u2601\ufe0f - LongPort OpenAPI provides real-time stock market data, provides AI access analysis and trading capabilities through MCP.\nmcpdotdirect/evm-mcp-server\n\ud83d\udcc7 \u2601\ufe0f - Comprehensive blockchain services for 30+ EVM networks, supporting native tokens, ERC20, NFTs, smart contracts, transactions, and ENS resolution.\nmcpdotdirect/starknet-mcp-server\n\ud83d\udcc7 \u2601\ufe0f - Comprehensive Starknet blockchain integration with support for native tokens (ETH, STRK), smart contracts, StarknetID resolution, and token transfers.\nminhyeoky/mcp-server-ledger\n\ud83d\udc0d \ud83c\udfe0 -  A ledger-cli integration for managing financial transactions and generating reports.\nopenMF/mcp-mifosx\n\u2601\ufe0f \ud83c\udfe0 -  A core banking integration for managing clients, loans, savings, shares, financial transactions and generating financial reports.\nnarumiruna/yfinance-mcp\n\ud83d\udc0d \u2601\ufe0f - An MCP server that uses yfinance to obtain information from Yahoo Finance.\npwh-pwh/coin-mcp-server\n\ud83d\udc0d \u2601\ufe0f -  Bitget API to fetch cryptocurrency price.\nQuantGeekDev/coincap-mcp\n\ud83d\udcc7 \u2601\ufe0f - Real-time cryptocurrency market data integration using CoinCap's public API, providing access to crypto prices and market information without API keys\nSaintDoresh/Crypto-Trader-MCP-ClaudeDesktop\n\ud83d\udc0d \u2601\ufe0f - An MCP tool that provides cryptocurrency market data using the CoinGecko API.\ntooyipjee/yahoofinance-mcp\n\ud83d\udcc7 \u2601\ufe0f - TS version of yahoo finance mcp.\nSaintDoresh/YFinance-Trader-MCP-ClaudeDesktop\n\ud83d\udc0d \u2601\ufe0f - An MCP tool that provides stock market data and analysis using the Yahoo Finance API.\nRomThpt/xrpl-mcp-server\n\ud83d\udcc7 \u2601\ufe0f - MCP server for the XRP Ledger that provides access to account information, transaction history, and network data. Allows querying ledger objects, submitting transactions, and monitoring the XRPL network.\njanswist/mcp-dexscreener\n\ud83d\udcc7 \u2601\ufe0f - Real-time on-chain market prices using open and free Dexscreener API\nHuggingAGI/mcp-baostock-server\n\ud83d\udc0d \u2601\ufe0f - MCP server based on baostock, providing access and analysis capabilities for Chinese stock market data.\nwowinter13/solscan-mcp\n\ud83e\udd80 \ud83c\udfe0 - An MCP tool for querying Solana transactions using natural language with Solscan API.\n\ud83c\udfae\nGaming\nIntegration with gaming related data, game engines, and services\nIvanMurzak/Unity-MCP\n#\ufe0f\u20e3 \ud83c\udfe0 \ud83c\udf4e \ud83e\ude9f \ud83d\udc27 - MCP Server for Unity Editor and for a game made with Unity\nCoderGamester/mcp-unity\n#\ufe0f\u20e3 \ud83c\udfe0 - MCP Server for Unity3d Game Engine integration for game development\nCoding-Solo/godot-mcp\n\ud83d\udcc7 \ud83c\udfe0 - A MCP server for interacting with the Godot game engine, providing tools for editing, running, debugging, and managing scenes in Godot projects.\npab1ito/chess-mcp\n\ud83d\udc0d \u2601\ufe0f - Access Chess.com player data, game records, and other public information through standardized MCP interfaces, allowing AI assistants to search and analyze chess information.\nrishijatia/fantasy-pl-mcp\n\ud83d\udc0d \u2601\ufe0f - An MCP server for real-time Fantasy Premier League data and analysis tools.\nopgginc/esports-mcp\n\ud83d\udcc7 \u2601\ufe0f - Connect AI agents to OP.GG Esports data and retrieve upcoming League of Legends match schedules effortlessly. Access structured match information through a standardized interface, enhancing your AI's capabilities with real-time esports data.\n\ud83e\udde0\nKnowledge & Memory\nPersistent memory storage using knowledge graph structures. Enables AI models to maintain and query structured information across sessions.\nCheMiguel23/MemoryMesh\n\ud83d\udcc7 \ud83c\udfe0 - Enhanced graph-based memory with a focus on AI role-play and story generation\ngraphlit-mcp-server\n\ud83d\udcc7 \u2601\ufe0f - Ingest anything from Slack, Discord, websites, Google Drive, Linear or GitHub into a Graphlit project - and then search and retrieve relevant knowledge within an MCP client like Cursor, Windsurf or Cline.\nhannesrudolph/mcp-ragdocs\n\ud83d\udc0d \ud83c\udfe0 - An MCP server implementation that provides tools for retrieving and processing documentation through vector search, enabling AI assistants to augment their responses with relevant documentation context\nkaliaboi/mcp-zotero\n\ud83d\udcc7 \u2601\ufe0f - A connector for LLMs to work with collections and sources on your Zotero Cloud\nmcp-summarizer\n\ud83d\udcd5 \u2601\ufe0f - AI Summarization MCP Server, Support for multiple content types: Plain text, Web pages, PDF documents, EPUB books, HTML content\nmem0ai/mem0-mcp\n\ud83d\udc0d \ud83c\udfe0 - A Model Context Protocol server for Mem0 that helps manage coding preferences and patterns, providing tools for storing, retrieving and semantically handling code implementations, best practices and technical documentation in IDEs like Cursor and Windsurf\nmodelcontextprotocol/server-memory\n\ud83d\udcc7 \ud83c\udfe0 - Knowledge graph-based persistent memory system for maintaining context\npinecone-io/assistant-mcp\n\ud83c\udf96\ufe0f \ud83e\udd80 \u2601\ufe0f - Connects to your Pinecone Assistant and gives the agent context from its knowledge engine.\ntopoteretes/cognee\n\ud83d\udcc7 \ud83c\udfe0 - Memory manager for AI apps and Agents using various graph and vector stores and allowing ingestion from 30+ data sources\nunibaseio/membase-mcp\n\ud83d\udcc7 \u2601\ufe0f - Save and query your agent memory in distributed way by Membase\nGistPad-MCP\n\ud83d\udcc7 \ud83c\udfe0 - Use GitHub Gists to manage and access your personal knowledge, daily notes, and reusable prompts. This acts as a companion to\nhttps://gistpad.dev\nand the\nGistPad VS Code extension\n.\nentanglr/zettelkasten-mcp\n\ud83d\udc0d \ud83c\udfe0 - A Model Context Protocol (MCP) server that implements the Zettelkasten knowledge management methodology, allowing you to create, link, and search atomic notes through Claude and other MCP-compatible clients.\n\ud83d\uddfa\ufe0f\nLocation Services\nLocation-based services and mapping tools. Enables AI models to work with geographic data, weather information, and location-based analytics.\nbriandconnelly/mcp-server-ipinfo\n\ud83d\udc0d \u2601\ufe0f  - IP address geolocation and network information using IPInfo API\njagan-shanmugam/open-streetmap-mcp\n\ud83d\udc0d \ud83c\udfe0 - An OpenStreetMap MCP server with location-based services and geospatial data.\nkukapay/nearby-search-mcp\n\ud83d\udc0d \u2601\ufe0f - An MCP server for nearby place searches with IP-based location detection.\nmodelcontextprotocol/server-google-maps\n\ud83d\udcc7 \u2601\ufe0f - Google Maps integration for location services, routing, and place details\nQGIS MCP\n- connects QGIS Desktop to Claude AI through the MCP. This integration enables prompt-assisted project creation, layer loading, code execution, and more.\nSaintDoresh/Weather-MCP-ClaudeDesktop\n\ud83d\udc0d \u2601\ufe0f - An MCP tool that provides real-time weather data, forecasts, and historical weather information using the OpenWeatherMap API.\nrossshannon/Weekly-Weather-mcp\n\ud83d\udc0d \u2601\ufe0f - Weekly Weather MCP server which returns 7 full days of detailed weather forecasts anywhere in the world.\nSecretiveShell/MCP-timeserver\n\ud83d\udc0d \ud83c\udfe0 - Access the time in any timezone and get the current local time\nwebcoderz/MCP-Geo\n\ud83d\udc0d \ud83c\udfe0 - Geocoding MCP server for nominatim, ArcGIS, Bing\nipfind/ipfind-mcp-server\n\ud83d\udc0d \u2601\ufe0f - IP Address location service using the\nIP Find\nAPI\n\ud83c\udfaf\nMarketing\nTools for creating and editing marketing content, working with web meta data, product positioning, and editing guides.\ngomarble-ai/facebook-ads-mcp-server\n\ud83d\udc0d \u2601\ufe0f - MCP server acting as an interface to the Facebook Ads, enabling programmatic access to Facebook Ads data and management features.\nopen-strategy-partners/osp_marketing_tools\n\ud83d\udc0d \ud83c\udfe0 - A suite of marketing tools from Open Strategy Partners including writing style, editing codes, and product marketing value map creation.\nnictuku/meta-ads-mcp\n\ud83d\udc0d \u2601\ufe0f \ud83c\udfe0 - Enables AI agents to monitor and optimize Meta ad performance, analyze campaign metrics, adjust audience targeting, manage creative assets, and make data-driven recommendations for ad spend and campaign settings through seamless Graph API integration.\n\ud83d\udcca\nMonitoring\nAccess and analyze application monitoring data. Enables AI models to review error reports and performance metrics.\ngrafana/mcp-grafana\n\ud83c\udf96\ufe0f \ud83d\udc0d \ud83c\udfe0 \u2601\ufe0f - Search dashboards, investigate incidents and query datasources in your Grafana instance\ntumf/grafana-loki-mcp\n\ud83d\udc0d \ud83c\udfe0 - An MCP server that allows querying Loki logs through the Grafana API.\nhyperb1iss/lucidity-mcp\n\ud83d\udc0d \ud83c\udfe0 - Enhance AI-generated code quality through intelligent, prompt-based analysis across 10 critical dimensions from complexity to security vulnerabilities\nlast9/last9-mcp-server\n- Seamlessly bring real-time production context\u2014logs, metrics, and traces\u2014into your local environment to auto-fix code faster\nmetoro-io/metoro-mcp-server\n\ud83c\udf96\ufe0f \ud83c\udfce\ufe0f \u2601\ufe0f - Query and interact with kubernetes environments monitored by Metoro\nMindscapeHQ/server-raygun\n\ud83d\udcc7 \u2601\ufe0f - Raygun API V3 integration for crash reporting and real user monitoring\nmodelcontextprotocol/server-sentry\n\ud83d\udc0d \u2601\ufe0f - Sentry.io integration for error tracking and performance monitoring\npydantic/logfire-mcp\n\ud83c\udf96\ufe0f \ud83d\udc0d \u2601\ufe0f - Provides access to OpenTelemetry traces and metrics through Logfire\nseekrays/mcp-monitor\n\ud83c\udfce\ufe0f \ud83c\udfe0 - A system monitoring tool that exposes system metrics via the Model Context Protocol (MCP). This tool allows LLMs to retrieve real-time system information through an MCP-compatible interface.\uff08support CPU\u3001Memory\u3001Disk\u3001Network\u3001Host\u3001Process\uff09\n\ud83c\udfa5\nMultimedia Process\nProvides the ability to handle multimedia, such as audio and video editing, playback, format conversion, also includes video filters, enhancements, and so on\nvideo-creator/ffmpeg-mcp\n\ud83c\udfa5 \ud83d\udd0a - Using ffmpeg command line to achieve an mcp server, can be very convenient, through the dialogue to achieve the local video search, tailoring, stitching, playback and other functions\n\ud83d\udd0e\nSearch & Data Extraction\nricocf/mcp-wolframalpha\n\ud83d\udc0d \ud83c\udfe0 \u2601\ufe0f - An MCP server lets AI assistants use the Wolfram Alpha API for real-time access to computational knowledge and data.\nscrapeless-ai/scrapeless-mcp-server\n\ud83d\udc0d \u2601\ufe0f - The Scrapeless Model Context Protocol service acts as an MCP server connector to the Google SERP API, enabling web search within the MCP ecosystem without leaving it.\n0xdaef0f/job-searchoor\n\ud83d\udcc7 \ud83c\udfe0 - An MCP server for searching job listings with filters for date, keywords, remote work options, and more.\nac3xx/mcp-servers-kagi\n\ud83d\udcc7 \u2601\ufe0f - Kagi search API integration\nandybrandt/mcp-simple-arxiv\n- \ud83d\udc0d \u2601\ufe0f  MCP for LLM to search and read papers from arXiv\nhbg/mcp-paperswithcode\n- \ud83d\udc0d \u2601\ufe0f MCP to search through PapersWithCode API\nandybrandt/mcp-simple-pubmed\n- \ud83d\udc0d \u2601\ufe0f  MCP to search and read medical / life sciences papers from PubMed.\nangheljf/nyt\n\ud83d\udcc7 \u2601\ufe0f - Search articles using the NYTimes API\napify/mcp-server-rag-web-browser\n\ud83d\udcc7 \u2601\ufe0f - An MCP server for Apify's open-source RAG Web Browser Actor to perform web searches, scrape URLs, and return content in Markdown.\nBigsy/Clojars-MCP-Server\n\ud83d\udcc7 \u2601\ufe0f - Clojars MCP Server for upto date dependency information of Clojure libraries\nblazickjp/arxiv-mcp-server\n\u2601\ufe0f \ud83d\udc0d - Search ArXiv research papers\nchanmeng/google-news-mcp-server\n\ud83d\udcc7 \u2601\ufe0f - Google News integration with automatic topic categorization, multi-language support, and comprehensive search capabilities including headlines, stories, and related topics through\nSerpAPI\n.\nConechoAI/openai-websearch-mcp\n\ud83d\udc0d \ud83c\udfe0 \u2601\ufe0f - This is a Python-based MCP server that provides OpenAI\nweb_search\nbuild-in tool.\ndealx/mcp-server\n\u2601\ufe0f - MCP Server for DealX platform\ndevflowinc/trieve\n\ud83c\udf96\ufe0f \ud83d\udcc7 \u2601\ufe0f \ud83c\udfe0 - Crawl, embed, chunk, search, and retrieve information from datasets through\nTrieve\nDumpling-AI/mcp-server-dumplingai\n\ud83c\udf96\ufe0f \ud83d\udcc7 \u2601\ufe0f - Access data, web scraping, and document conversion APIs by\nDumpling AI\nerithwik/mcp-hn\n\ud83d\udc0d \u2601\ufe0f - An MCP server to search Hacker News, get top stories, and more.\nexa-labs/exa-mcp-server\n\ud83c\udf96\ufe0f \ud83d\udcc7 \u2601\ufe0f \u2013 A Model Context Protocol (MCP) server lets AI assistants like Claude use the Exa AI Search API for web searches. This setup allows AI models to get real-time web information in a safe and controlled way.\nfatwang2/search1api-mcp\n\ud83d\udcc7 \u2601\ufe0f - Search via search1api (requires paid API key)\ngenomoncology/biomcp\n\ud83d\udc0d \u2601\ufe0f - Biomedical research server providing access to PubMed, ClinicalTrials.gov, and MyVariant.info.\nhellokaton/unsplash-mcp-server\n) \ud83d\udc0d \u2601\ufe0f - A MCP server for Unsplash image search.\nIhor-Sokoliuk/MCP-SearXNG\n\ud83d\udcc7 \ud83c\udfe0/\u2601\ufe0f - A Model Context Protocol Server for\nSearXNG\nisnow890/naver-search-mcp\n\ud83d\udcc7 \u2601\ufe0f - MCP server for Naver Search API integration, supporting blog, news, shopping search and DataLab analytics features.\njae-jae/fetcher-mcp\n\ud83d\udcc7 \ud83c\udfe0 - MCP server for fetching web page content using Playwright headless browser, supporting Javascript rendering and intelligent content extraction, and outputting Markdown or HTML format.\njae-jae/g-search-mcp\n\ud83d\udcc7 \ud83c\udfe0 - A powerful MCP server for Google search that enables parallel searching with multiple keywords simultaneously.\nleehanchung/bing-search-mcp\n\ud83d\udcc7 \u2601\ufe0f - Web search capabilities using Microsoft Bing Search API\nkagisearch/kagimcp\n\u2601\ufe0f \ud83d\udcc7 \u2013 Official Kagi Search MCP Server\nkshern/mcp-tavily\n\u2601\ufe0f \ud83d\udcc7 \u2013 Tavily AI search API\nmodelcontextprotocol/server-brave-search\n\ud83d\udcc7 \u2601\ufe0f - Web search capabilities using Brave's Search API\nmodelcontextprotocol/server-fetch\n\ud83d\udc0d \ud83c\udfe0 \u2601\ufe0f - Efficient web content fetching and processing for AI consumption\nmzxrai/mcp-webresearch\n\ud83d\udd0d\ud83d\udcda - Search Google and do deep web research on any topic\nnickclyde/duckduckgo-mcp-server\n\ud83d\udc0d \u2601\ufe0f - Web search using DuckDuckGo\nreading-plus-ai/mcp-server-deep-research\n\ud83d\udcc7 \u2601\ufe0f - MCP server providing OpenAI/Perplexity-like autonomous deep research, structured query elaboration, and concise reporting.\nSecretiveShell/MCP-searxng\n\ud83d\udc0d \ud83c\udfe0 - An MCP Server to connect to searXNG instances\ntakashiishida/arxiv-latex-mcp\n\ud83d\udc0d \u2601\ufe0f - Get the LaTeX source of arXiv papers to handle mathematical content and equations\nthe0807/GeekNews-MCP-Server\n\ud83d\udc0d \u2601\ufe0f - An MCP Server that retrieves and processes news data from the GeekNews site.\ntinyfish-io/agentql-mcp\n\ud83c\udf96\ufe0f \ud83d\udcc7 \u2601\ufe0f - MCP server that provides\nAgentQL\n's data extraction capabilities.\nTomatio13/mcp-server-tavily\n\u2601\ufe0f \ud83d\udc0d \u2013 Tavily AI search API\nvectorize-io/vectorize-mcp-server\n\u2601\ufe0f \ud83d\udcc7 -\nVectorize\nMCP server for advanced retrieval, Private Deep Research, Anything-to-Markdown file extraction and text chunking.\nwebscraping-ai/webscraping-ai-mcp-server\n\ud83c\udf96\ufe0f \ud83d\udcc7 \u2601\ufe0f - Interact with\nWebScraping.ai\nfor web data extraction and scraping.\nzhsama/duckduckgo-mcp-server\n\ud83d\udcc7 \ud83c\udfe0 \u2601\ufe0f - This is a TypeScript-based MCP server that provides DuckDuckGo search functionality.\nzoomeye-ai/mcp_zoomeye\n\ud83d\udcc7 \u2601\ufe0f - Querying network asset information by ZoomEye MCP Server\nyamanoku/baseline-mcp-server\n\ud83d\udcc7 \ud83c\udfe0 - MCP server that searches Baseline status using Web Platform API\n\ud83d\udd12\nSecurity\ndkvdm/onepassword-mcp-server\n- An MCP server that enables secure credential retrieval from 1Password to be used by Agentic AI.\n13bm/GhidraMCP\n\ud83d\udc0d \u2615 \ud83c\udfe0 - MCP server for integrating Ghidra with AI assistants. This plugin enables binary analysis, providing tools for function inspection, decompilation, memory exploration, and import/export analysis via the Model Context Protocol.\natomicchonk/roadrecon_mcp_server\n\ud83d\udc0d \ud83e\ude9f \ud83c\udfe0 MCP server for analyzing ROADrecon gather results from Azure tenant enumeration\nBurtTheCoder/mcp-dnstwist\n\ud83d\udcc7 \ud83e\ude9f \u2601\ufe0f - MCP server for dnstwist, a powerful DNS fuzzing tool that helps detect typosquatting, phishing, and corporate espionage.\nBurtTheCoder/mcp-maigret\n\ud83d\udcc7 \ud83e\ude9f \u2601\ufe0f - MCP server for maigret, a powerful OSINT tool that collects user account information from various public sources. This server provides tools for searching usernames across social networks and analyzing URLs.\nBurtTheCoder/mcp-shodan\n\ud83d\udcc7 \ud83e\ude9f \u2601\ufe0f - MCP server for querying the Shodan API and Shodan CVEDB. This server provides tools for IP lookups, device searches, DNS lookups, vulnerability queries, CPE lookups, and more.\nBurtTheCoder/mcp-virustotal\n\ud83d\udcc7 \ud83e\ude9f \u2601\ufe0f - MCP server for querying the VirusTotal API. This server provides tools for scanning URLs, analyzing file hashes, and retrieving IP address reports.\nfosdickio/binary_ninja_mcp\n\ud83d\udc0d \ud83c\udfe0 \ud83c\udf4e \ud83e\ude9f \ud83d\udc27 - A Binary Ninja plugin, MCP server, and bridge that seamlessly integrates\nBinary Ninja\nwith your favorite MCP client.  It enables you to automate the process of performing binary analysis and reverse engineering.\nfr0gger/MCP_Security\n\ud83d\udcc7 \u2601\ufe0f - MCP server for querying the ORKL API. This server provides tools for fetching threat reports, analyzing threat actors, and retrieving intelligence sources.\nqianniuspace/mcp-security-audit\n\ud83d\udcc7 \u2601\ufe0f A powerful MCP (Model Context Protocol) Server that audits npm package dependencies for security vulnerabilities. Built with remote npm registry integration for real-time security checks.\nsemgrep/mcp\n\ud83d\udcc7 \u2601\ufe0f Allow AI agents to scan code for security vulnerabilites using\nSemgrep\n.\nslouchd/cyberchef-api-mcp-server\n\ud83d\udc0d \u2601\ufe0f - MCP server for interacting with the CyberChef server API which will allow an MCP client to utilise the CyberChef operations.\nmrexodia/ida-pro-mcp\n\ud83d\udc0d \ud83c\udfe0 - MCP server for IDA Pro, allowing you to perform binary analysis with AI assistants. This plugin implement decompilation, disassembly and allows you to generate malware analysis reports automatically.\nrad-security/mcp-server\n\ud83d\udcc7 \u2601\ufe0f - MCP server for RAD Security, providing AI-powered security insights for Kubernetes and cloud environments. This server provides tools for querying the Rad Security API and retrieving security findings, reports, runtime data and many more.\nsecurityfortech/secops-mcp\n\ud83d\udc0d \ud83c\udfe0 - All-in-one security testing toolbox that brings together popular open source tools through a single MCP interface. Connected to an AI agent, it enables tasks like pentesting, bug bounty hunting, threat hunting, and more.\nroadwy/cve-search_mcp\n\ud83d\udc0d \ud83c\udfe0 - A Model Context Protocol (MCP) server for querying the CVE-Search API. This server provides comprehensive access to CVE-Search, browse vendor and product\u3001get CVE per CVE-ID\u3001get the last updated CVEs.\nnickpending/mcp-recon\n\ud83c\udfce\ufe0f \ud83c\udfe0 - Conversational recon interface and MCP server powered by httpx and asnmap. Supports various reconnaissance levels for domain analysis, security header inspection, certificate analysis, and ASN lookup.\nGaffx/volatility-mcp\n- MCP server for Volatility 3.x, allowing you to perform memory forensics analysis with AI assistant. Experience memory forensics without barriers as plugins like pslist and netscan become accessible through clean REST APIs and LLMs.\nco-browser/attestable-mcp-server\n\ud83d\udc0d \ud83c\udfe0 \u2601\ufe0f \ud83d\udc27 - An MCP server running inside a trusted execution environment (TEE) via Gramine, showcasing remote attestation using\nRA-TLS\n. This allows an MCP client to verify the server before conencting.\nzinja-coder/jadx-ai-mcp\n\u2615 \ud83c\udfe0 - JADX-AI-MCP is a plugin and MCP Server for the JADX decompiler that integrates directly with Model Context Protocol (MCP) to provide live reverse engineering support with LLMs like Claude.\nzinja-coder/apktool-mcp-server\n\ud83d\udc0d \ud83c\udfe0 - APKTool MCP Server is a MCP server for the Apk Tool to provide automation in reverse engineering of Android APKs.\n\ud83c\udfc3\nSports\nTools for accessing sports-related data, results, and statistics.\nmikechao/balldontlie-mcp\n\ud83d\udcc7 - MCP server that integrates balldontlie api to provide information about players, teams and games for the NBA, NFL and MLB\nr-huijts/firstcycling-mcp\n\ud83d\udcc7 \u2601\ufe0f - Access cycling race data, results, and statistics through natural language. Features include retrieving start lists, race results, and rider information from firstcycling.com.\nr-huijts/strava-mcp\n\ud83d\udcc7 \u2601\ufe0f - A Model Context Protocol (MCP) server that connects to Strava API, providing tools to access Strava data through LLMs\nwillvelida/mcp-afl-server\n\u2601\ufe0f - MCP server that integrates with the Squiggle API to provide information on Australian Football League teams, ladder standings, results, tips, and power rankings.\n\ud83c\udfa7\nSupport & Service Management\nTools for managing customer support, IT service management, and helpdesk operations.\neffytech/freshdesk-mcp\n\ud83d\udc0d \u2601\ufe0f - MCP server that integrates with Freshdesk, enabling AI models to interact with Freshdesk modules and perform various support operations.\nnguyenvanduocit/jira-mcp\n\ud83c\udfce\ufe0f \u2601\ufe0f - A Go-based MCP connector for Jira that enables AI assistants like Claude to interact with Atlassian Jira. This tool provides a seamless interface for AI models to perform common Jira operations including issue management, sprint planning, and workflow transitions.\nsooperset/mcp-atlassian\n\ud83d\udc0d \u2601\ufe0f - MCP server for Atlassian products (Confluence and Jira). Supports Confluence Cloud, Jira Cloud, and Jira Server/Data Center. Provides comprehensive tools for searching, reading, creating, and managing content across Atlassian workspaces.\n\ud83c\udf0e\nTranslation Services\nTranslation tools and services to enable AI assistants to translate content between different languages.\ntranslated/lara-mcp\n\ud83c\udf96\ufe0f \ud83d\udcc7 \u2601\ufe0f - MCP Server for Lara Translate API, enabling powerful translation capabilities with support for language detection and context-aware translations.\n\ud83c\udfa7\nText-to-Speech\nTools for converting text-to-speech and vice-versa\nKokoro TTS MCP\n\ud83d\udc0d \ud83c\udfe0 - MCP Server that uses the open weight Kokoro TTS models to convert text-to-speech. Can convert text to MP3 on a local driver or auto-upload to an S3 bucket.\n\ud83d\ude86\nTravel & Transportation\nAccess to travel and transportation information. Enables querying schedules, routes, and real-time travel data.\nAirbnb MCP Server\n\ud83d\udcc7 \u2601\ufe0f - Provides tools to search Airbnb and get listing details.\nKyrieTangSheng/mcp-server-nationalparks\n\ud83d\udcc7 \u2601\ufe0f - National Park Service API integration providing latest information of park details, alerts, visitor centers, campgrounds, and events for U.S. National Parks\nNS Travel Information MCP Server\n\ud83d\udcc7 \u2601\ufe0f - Access Dutch Railways (NS) travel information, schedules, and real-time updates\npab1it0/tripadvisor-mcp\n\ud83d\udcc7 \ud83d\udc0d - A MCP server that enables LLMs to interact with Tripadvisor API, supporting location data, reviews, and photos through standardized MCP interfaces\n\ud83d\udd04\nVersion Control\nInteract with Git repositories and version control platforms. Enables repository management, code analysis, pull request handling, issue tracking, and other version control operations through standardized APIs.\nadhikasp/mcp-git-ingest\n\ud83d\udc0d \ud83c\udfe0 - Read and analyze GitHub repositories with your LLM\nddukbg/github-enterprise-mcp\n\ud83d\udcc7 \u2601\ufe0f \ud83c\udfe0 - MCP server for GitHub Enterprise API integration\ngitea/gitea-mcp\n\ud83c\udf96\ufe0f \ud83c\udfce\ufe0f \u2601\ufe0f \ud83c\udfe0 \ud83c\udf4e \ud83e\ude9f \ud83d\udc27 - Interactive with Gitea instances with MCP.\nkopfrechner/gitlab-mr-mcp\n\ud83d\udcc7 \u2601\ufe0f - Interact seamlessly with issues and merge requests of your GitLab projects.\nmodelcontextprotocol/server-git\n\ud83d\udc0d \ud83c\udfe0 - Direct Git repository operations including reading, searching, and analyzing local repositories\nmodelcontextprotocol/server-github\n\ud83d\udcc7 \u2601\ufe0f - GitHub API integration for repository management, PRs, issues, and more\nmodelcontextprotocol/server-gitlab\n\ud83d\udcc7 \u2601\ufe0f \ud83c\udfe0 - GitLab platform integration for project management and CI/CD operations\noschina/mcp-gitee\n\ud83c\udfce\ufe0f \u2601\ufe0f \ud83c\udfe0 - Gitee API integration, repository, issue, and pull request management, and more.\nTiberriver256/mcp-server-azure-devops\n\ud83d\udcc7 \u2601\ufe0f - Azure DevOps integration for repository management, work items, and pipelines.\n\ud83d\udee0\ufe0f\nOther Tools and Integrations\nAbdelStark/bitcoin-mcp\n- \u20bf A Model Context Protocol (MCP) server that enables AI models to interact with Bitcoin, allowing them to generate keys, validate addresses, decode transactions, query the blockchain, and more.\nakseyh/bear-mcp-server\n- Allows the AI to read from your Bear Notes (macOS only)\nallenporter/mcp-server-home-assistant\n\ud83d\udc0d \ud83c\udfe0 - Expose all Home Assistant voice intents through a Model Context Protocol Server allowing home control.\nAmazon Bedrock Nova Canvas\n\ud83d\udcc7 \u2601\ufe0f - Use Amazon Nova Canvas model for image generation.\namidabuddha/unichat-mcp-server\n\ud83d\udc0d/\ud83d\udcc7 \u2601\ufe0f - Send requests to OpenAI, MistralAI, Anthropic, xAI, Google AI or DeepSeek using MCP protocol via tool or predefined prompts. Vendor API key required\nanaisbetts/mcp-installer\n\ud83d\udc0d \ud83c\udfe0 -  An MCP server that installs other MCP servers for you.\nanaisbetts/mcp-youtube\n\ud83d\udcc7 \u2601\ufe0f - Fetch YouTube subtitles\nandybrandt/mcp-simple-openai-assistant\n- \ud83d\udc0d \u2601\ufe0f  MCP to talk to OpenAI assistants (Claude can use any GPT model as his assitant)\nandybrandt/mcp-simple-timeserver\n\ud83d\udc0d \ud83c\udfe0\u2601\ufe0f - An MCP server that allows checking local time on the client machine or current UTC time from an NTP server\napify/actors-mcp-server\n\ud83d\udcc7 \u2601\ufe0f - Use 3,000+ pre-built cloud tools, known as Actors, to extract data from websites, e-commerce, social media, search engines, maps, and more\napinetwork/piapi-mcp-server\n\ud83d\udcc7 \u2601\ufe0f PiAPI MCP server makes user able to generate media content with Midjourney/Flux/Kling/Hunyuan/Udio/Trellis directly from Claude or any other MCP-compatible apps.\nawkoy/replicate-flux-mcp\n\ud83d\udcc7 \u2601\ufe0f - Provides the ability to generate images via Replicate's API.\nawwaiid/mcp-server-taskwarrior\n\ud83c\udfe0 \ud83d\udcc7 - An MCP server for basic local taskwarrior usage (add, update, remove tasks)\nbaba786/phabricator-mcp-server\n\ud83d\udc0d \u2601\ufe0f - Interacting with Phabricator API\nBadhansen/notion-mcp\n\ud83d\udc0d \u2601\ufe0f - A Model Context Protocol (MCP) server that integrates with Notion's API to manage personal todo lists efficiently.\nbart6114/my-bear-mcp-server\n\ud83d\udcc7 \ud83c\udfe0 \ud83c\udf4e - Allows to read notes and tags for the Bear Note taking app, through a direct integration with Bear's sqlitedb.\nbillster45/mcp-chatgpt-responses\n\ud83d\udc0d \u2601\ufe0f - MCP server for Claude to talk to ChatGPT and use its web search capability.\nblurrah/mcp-graphql\n\ud83d\udcc7 \u2601\ufe0f - Allows the AI to query GraphQL servers\ncalclavia/mcp-obsidian\n\ud83d\udcc7 \ud83c\udfe0 - This is a connector to allow Claude Desktop (or any MCP client) to read and search any directory containing Markdown notes (such as an Obsidian vault).\nchrishayuk/mcp-cli\n\ud83d\udc0d \ud83c\udfe0 - Yet another CLI tool for testing MCP servers\ndanhilse/notion_mcp\n\ud83d\udc0d \u2601\ufe0f - Integrates with Notion's API to manage personal todo lists\nEKibort/wrike-mcp-server\n- \ud83d\udc0d \ud83c\udfe0 - A lightweight implementation of a Wrike MCP server for interacting with Wrike tasks via public API.\nekkyarmandi/ticktick-mcp\n\ud83d\udc0d \u2601\ufe0f -\nTickTick\nMCP server that integrates with TickTick's API to manage personal todo projects and the tasks.\nesignaturescom/mcp-server-esignatures\n\ud83d\udc0d \u2601\ufe0f\ufe0f - Contract and template management for drafting, reviewing, and sending binding contracts via the eSignatures API.\nevalstate/mcp-miro\n\ud83d\udcc7 \u2601\ufe0f - Access MIRO whiteboards, bulk create and read items. Requires OAUTH key for REST API.\nfeuerdev/keep-mcp\n\ud83d\udc0d \u2601\ufe0f - Read, create, update and delete Google Keep notes.\nfuture-audiences/wikimedia-enterprise-model-context-protocol\n\ud83d\udc0d \u2601\ufe0f  - Wikipedia Article lookup API\ngithejie/mcp-server-calculator\n\ud83d\udc0d \ud83c\udfe0 - This server enables LLMs to use calculator for precise numerical calculations\ngotoolkits/DifyWorkflow\n- \ud83c\udfce\ufe0f \u2601\ufe0f Tools to the query and execute of Dify workflows\nhiromitsusasaki/raindrop-io-mcp-server\n\ud83d\udcc7 \u2601\ufe0f - An integration that allows LLMs to interact with Raindrop.io bookmarks using the Model Context Protocol (MCP).\nhmk/attio-mcp-server\n- \ud83d\udcc7 \u2601\ufe0f Allows AI clients to manage records and notes in Attio CRM\nisaacwasserman/mcp-vegalite-server\n\ud83d\udc0d \ud83c\udfe0 - Generate visualizations from fetched data using the VegaLite format and renderer.\nivo-toby/contentful-mcp\n\ud83d\udcc7 \ud83c\udfe0 - Update, create, delete content, content-models and assets in your Contentful Space\nj3k0/speech.sh\n\ud83c\udfe0 - Let the agent speak things out loud, notify you when he's done working with a quick summary\njagan-shanmugam/climatiq-mcp-server\n\ud83d\udc0d \ud83c\udfe0 - A Model Context Protocol (MCP) server for accessing the Climatiq API to calculate carbon emissions. This allows AI assistants to perform real-time carbon calculations and provide climate impact insights.\njoshuarileydev/mac-apps-launcher-mcp-server\n\ud83d\udcc7 \ud83c\udfe0 - An MCP server to list and launch applications on MacOS\nHarry-027/JotDown\n\ud83e\udd80 \ud83c\udfe0 - An MCP server to create/update pages in Notion app & auto generate mdBooks from structured content.\nkelvin6365/plane-mcp-server\n- \ud83c\udfce\ufe0f \ud83c\udfe0 This MCP Server will help you to manage projects and issues through\nPlane's\nAPI\nkenliao94/mcp-server-rabbitmq\n\ud83d\udc0d \ud83c\udfe0 - Enable interaction (admin operation, message enqueue/dequeue) with RabbitMQ\nk-jarzyna/mcp-miro\n\ud83d\udcc7 \u2601\ufe0f - Miro MCP server, exposing all functionalities available in official Miro SDK\nkimtth/mcp-remote-call-ping-pong\n\ud83d\udc0d \ud83c\udfe0 - An experimental and educational app for Ping-pong server demonstrating remote MCP (Model Context Protocol) calls\nkj455/mcp-kibela\n- \ud83d\udcc7 \u2601\ufe0f Allows AI models to interact with\nKibela\nkiwamizamurai/mcp-kibela-server\n- \ud83d\udcc7 \u2601\ufe0f Powerfully interact with Kibela API.\nKS-GEN-AI/confluence-mcp-server\n\ud83d\udcc7 \u2601\ufe0f \ud83c\udf4e \ud83e\ude9f - Get Confluence data via CQL and read pages.\nKS-GEN-AI/jira-mcp-server\n\ud83d\udcc7 \u2601\ufe0f \ud83c\udf4e \ud83e\ude9f - Read jira data via JQL and api and execute requests to create and edit tickets.\nlciesielski/mcp-salesforce\n\ud83c\udfe0 \u2601\ufe0f - MCP server with basic demonstration of interactions with Salesforce instance\npollinations/chucknorris-mcp\n\ud83d\udcc7 \u2601\ufe0f - Specialized LLM enhancement prompts and jailbreaks with dynamic schema adaptation.\nlouiscklaw/hko-mcp\n\ud83d\udcc7 \ud83c\udfe0 - MCP server with basic demonstration of getting weather from Hong Kong Observatory\nevalstate/mcp-hfspace\n\ud83d\udcc7 \u2601\ufe0f - Use HuggingFace Spaces directly from Claude. Use Open Source Image Generation, Chat, Vision tasks and more. Supports Image, Audio and text uploads/downloads.\nmagarcia/mcp-server-giphy\n\ud83d\udcc7 \u2601\ufe0f - Search and retrieve GIFs from Giphy's vast library through the Giphy API.\nintegromat/make-mcp-server\n\ud83c\udf96\ufe0f \ud83d\udcc7 \ud83c\udfe0 - Turn your\nMake\nscenarios into callable tools for AI assistants.\nmarcelmarais/Spotify\n- \ud83d\udcc7 \ud83c\udfe0 Control Spotify playback and manage playlists.\nMarkusPfundstein/mcp-obsidian\n\ud83d\udc0d \u2601\ufe0f \ud83c\udfe0 - Interacting with Obsidian via REST API\nmcp-server-jfx\n\u2615 \ud83c\udfe0 - Draw on JavaFX canvas.\nmediar-ai/screenpipe\n- \ud83c\udf96\ufe0f \ud83e\udd80 \ud83c\udfe0 \ud83c\udf4e Local-first system capturing screen/audio with timestamped indexing, SQL/embedding storage, semantic search, LLM-powered history analysis, and event-triggered actions - enables building context-aware AI agents through a NextJS plugin ecosystem.\nmodelcontextprotocol/server-everything\n\ud83d\udcc7 \ud83c\udfe0 - MCP server that exercises all the features of the MCP protocol\nmrjoshuak/godoc-mcp\n\ud83c\udfce\ufe0f \ud83c\udfe0 - Token-efficient Go documentation server that provides AI assistants with smart access to package docs and types without reading entire source files\nmzxrai/mcp-openai\n\ud83d\udcc7 \u2601\ufe0f - Chat with OpenAI's smartest models\nNakaokaRei/swift-mcp-gui\n\ud83c\udfe0 \ud83c\udf4e - MCP server that can execute commands such as keyboard input and mouse movement\nnguyenvanduocit/all-in-one-model-context-protocol\n\ud83c\udfce\ufe0f \ud83c\udfe0 - Some useful tools for developer, almost everything an engineer need: confluence, Jira, Youtube, run script, knowledge base RAG, fetch URL, Manage youtube channel, emails, calendar, gitlab\nNON906/omniparser-autogui-mcp\n- \ud83d\udc0d Automatic operation of on-screen GUI.\npierrebrunelle/mcp-server-openai\n\ud83d\udc0d \u2601\ufe0f - Query OpenAI models directly from Claude using MCP protocol\npskill9/hn-server\n- \ud83d\udcc7 \u2601\ufe0f Parses the HTML content from news.ycombinator.com (Hacker News) and provides structured data for different types of stories (top, new, ask, show, jobs).\nPV-Bhat/vibe-check-mcp-server\n\ud83d\udcc7 \u2601\ufe0f - An MCP server that prevents cascading errors and scope creep by calling a \"Vibe-check\" agent to ensure user alignment.\npwh-pwh/cal-mcp\n- An MCP server for Mathematical expression calculation\npyroprompts/any-chat-completions-mcp\n- Chat with any other OpenAI SDK Compatible Chat Completions API, like Perplexity, Groq, xAI and more\nRai220/think-mcp\n\ud83d\udc0d \ud83c\udfe0 - Enhances any agent's reasoning capabilities by integrating the think-tools, as described in\nAnthropic's article\n.\nreeeeemo/ancestry-mcp\n\ud83d\udc0d \ud83c\udfe0 - Allows the AI to read .ged files and genetic data\nrember/rember-mcp\n\ud83d\udcc7 \ud83c\udfe0 - Create spaced repetition flashcards in\nRember\nto remember anything you learn in your chats.\nroychri/mcp-server-asana\n- \ud83d\udcc7 \u2601\ufe0f This Model Context Protocol server implementation of Asana allows you to talk to Asana API from MCP Client such as Anthropic's Claude Desktop Application, and many more.\nrusiaaman/wcgw\n\ud83d\udc0d \ud83c\udfe0 - Autonomous shell execution, computer control and coding agent. (Mac)\nSecretiveShell/MCP-wolfram-alpha\n\ud83d\udc0d \u2601\ufe0f - An MCP server for querying wolfram alpha API.\nSeym0n/tiktok-mcp\n\ud83d\udcc7 \u2601\ufe0f - Interact with TikTok videos\nShopify/dev-mcp\n\ud83d\udcc7 \u2601\ufe0f - Model Context Protocol (MCP) server that interacts with Shopify Dev.\nsirmews/apple-notes-mcp\n\ud83d\udc0d \ud83c\udfe0 - Allows the AI to read from your local Apple Notes database (macOS only)\nsooperset/mcp-atlassian\n\ud83d\udc0d \u2601\ufe0f - MCP server for Atlassian products (Confluence and Jira). Supports Confluence Cloud, Jira Cloud, and Jira Server/Data Center. Provides comprehensive tools for searching, reading, creating, and managing content across Atlassian workspaces.\nsuekou/mcp-notion-server\n\ud83d\udcc7 \ud83c\udfe0 - Interacting with Notion API\ntacticlaunch/mcp-linear\n\ud83d\udcc7 \u2601\ufe0f \ud83c\udf4e \ud83e\ude9f \ud83d\udc27 - Integrates with Linear project management system\ntanigami/mcp-server-perplexity\n\ud83d\udc0d \u2601\ufe0f - Interacting with Perplexity API.\ntevonsb/homeassistant-mcp\n\ud83d\udcc7 \ud83c\udfe0 - Access Home Assistant data and control devices (lights, switches, thermostats, etc).\ntomekkorbak/oura-mcp-server\n\ud83d\udc0d \u2601\ufe0f - An MCP server for Oura, an app for tracking sleep\nkw510/strava-mcp\n\ud83d\udcc7 \u2601\ufe0f - An MCP server for Strava, an app for tracking physical exercise\nwanaku-ai/wanaku\n- \u2601\ufe0f \ud83c\udfe0 The Wanaku MCP Router is a SSE-based MCP server that provides an extensible routing engine that allows integrating your enterprise systems with AI agents.\nwong2/mcp-cli\n\ud83d\udcc7 \ud83c\udfe0 - CLI tool for testing MCP servers\nws-mcp\n- Wrap MCP servers with a WebSocket (for use with\nkitbitz\n)\nyuna0x0/hackmd-mcp\n\ud83d\udcc7 \u2601\ufe0f - Allows AI models to interact with\nHackMD\nZeparHyfar/mcp-datetime\n- MCP server providing date and time functions in various formats\nzueai/mcp-manager\n\ud83d\udcc7 \u2601\ufe0f - Simple Web UI to install and manage MCP servers for Claude Desktop App.\nHenryHaoson/Yuque-MCP-Server\n- \ud83d\udcc7 \u2601\ufe0f A Model-Context-Protocol (MCP) server for integrating with Yuque API, allowing AI models to manage documents, interact with knowledge bases, search content, and access analytics data from the Yuque platform.\ntumf/web3-mcp\n\ud83d\udc0d \u2601\ufe0f - An MCP server implementation wrapping Ankr Advanced API. Access to NFT, token, and blockchain data across multiple chains including Ethereum, BSC, Polygon, Avalanche, and more.\ndanielkennedy1/pdf-tools-mcp\n\ud83d\udc0d - PDF download, view & manipulation utilities.\nFrameworks\nFastMCP\n\ud83d\udc0d - A high-level framework for building MCP servers in Python\nFastMCP\n\ud83d\udcc7 - A high-level framework for building MCP servers in TypeScript\nFoxy Contexts\n\ud83c\udfce\ufe0f - Golang library to write MCP Servers declaratively with functional testing included\ngabfr/waha-api-mcp-server\n\ud83d\udcc7 - An MCP server with openAPI specs for using the WhatsApp unnoficial API (\nhttps://waha.devlike.pro/\n- also open source:\nhttps://github.com/devlikeapro/waha\nGenkit MCP\n\ud83d\udcc7 \u2013 Provides integration between\nGenkit\nand the Model Context Protocol (MCP).\nhttp4k MCP SDK\n\ud83d\udc0d - Functional, testable Kotlin SDK based around the popular\nhttp4k\nWeb toolkit. Supports new HTTP Streaming protocol.\nlastmile-ai/mcp-agent\n\ud83e\udd16 \ud83d\udd0c - Build effective agents with MCP servers using simple, composable patterns.\nLiteMCP\n\ud83d\udcc7 - A high-level framework for building MCP servers in JavaScript/TypeScript\nmarimo-team/codemirror-mcp\n- CodeMirror extension that implements the Model Context Protocol (MCP) for resource mentions and prompt commands.\nmark3labs/mcp-go\n\ud83c\udfce\ufe0f - Golang SDK for building MCP Servers and Clients.\nmcp-framework\n\ud83d\udcc7 - Fast and elegant TypeScript framework for building MCP servers\nmcp-proxy\n- \ud83d\udcc7 A TypeScript SSE proxy for MCP servers that use\nstdio\ntransport.\nmcp-rs-template\n\ud83e\udd80 - MCP CLI server template for Rust\nmetoro-io/mcp-golang\n\ud83c\udfce\ufe0f - Golang framework for building MCP Servers, focussed on type safety\nmullerhai/sakura-mcp\n\ud83e\udd80 \u2615 - Scala MCP Framework for Build effective agents with MCP servers and MCP clients shade from modelcontextprotocol.io.\npaulotaylor/voyp-mcp\n\ud83d\udcc7 - VOYP - Voice Over Your Phone MCP Server for making calls.\npoem-web/poem-mcpserver\n\ud83e\udd80 - MCP Server implementation for Poem.\nquarkiverse/quarkus-mcp-server\n\u2615 - Java SDK for building MCP servers using Quarkus.\nrectalogic/langchain-mcp\n\ud83d\udc0d - Provides MCP tool calling support in LangChain, allowing for the integration of MCP tools into LangChain workflows.\nribeirogab/simple-mcp\n\ud83d\udcc7 - A simple TypeScript library for creating MCP servers.\nsalty-flower/ModelContextProtocol.NET\n#\ufe0f\u20e3 \ud83c\udfe0 - A C# SDK for building MCP servers on .NET 9 with NativeAOT compatibility \u26a1 \ud83d\udd0c\nspring-ai-mcp\n\u2615 \ud83c\udf31 - Java SDK and Spring Framework integration for building MCP client and MCP servers with various, plugable, transport options.\nspring-projects-experimental/spring-ai-mcp\n\u2615 \ud83c\udf31 - Java SDK and Spring Framework integration for building MCP client and MCP servers with various, plugable, transport options.\nTemplate MCP Server\n\ud83d\udcc7 - A CLI tool to create a new Model Context Protocol server project with TypeScript support, dual transport options, and an extensible structure\nsendaifun/solana-mcp-kit\n- Solana MCP SDK\nUtilities\nboilingdata/mcp-server-and-gw\n\ud83d\udcc7 - An MCP stdio to HTTP SSE transport gateway with example server and MCP client.\nf/MCPTools\n\ud83d\udd28 - A command-line development tool for inspecting and interacting with MCP servers with extra features like mocks and proxies.\nflux159/mcp-chat\n\ud83d\udcc7\ud83d\udda5\ufe0f - A CLI based client to chat and connect with any MCP server. Useful during development & testing of MCP servers.\nisaacwasserman/mcp-langchain-ts-client\n\ud83d\udcc7 \u2013 Use MCP provided tools in LangChain.js\nkukapay/whattimeisit-mcp\n\ud83d\udc0d \u2601\ufe0f - A lightweight mcp server that tells you exactly what time is it.\nkukapay/whereami-mcp\n\ud83d\udc0d \u2601\ufe0f -  A lightweight mcp server that tells you exactly where you are based on your current IP.\nkukapay/whoami-mcp\n\ud83d\udc0d \ud83c\udfe0 - A lightweight MCP server that tells you exactly who you are.\nlightconetech/mcp-gateway\n\ud83d\udcc7 - A gateway demo for MCP SSE Server.\nmark3labs/mcphost\n\ud83c\udfce\ufe0f -  A CLI host application that enables Large Language Models (LLMs) to interact with external tools through the Model Context Protocol (MCP).\nMCP-Connect\n\ud83d\udcc7 - A tiny tool that enables cloud-based AI services to access local Stdio based MCP servers by HTTP/HTTPS requests.\nSecretiveShell/MCP-Bridge\n\ud83d\udc0d \u2013 an openAI middleware proxy to use mcp in any existing openAI compatible client\nsparfenyuk/mcp-proxy\n\ud83d\udc0d \u2013 An MCP stdio to SSE transport gateawy.\nTBXark/mcp-proxy\n\ud83c\udfce\ufe0f - An MCP proxy server that aggregates and serves multiple MCP resource servers through a single http server.\nupsonic/gpt-computer-assistant\n\ud83d\udc0d \u2013 framework to build vertical AI agent\nJoshuaSiraj/mcp_auto_register\n\ud83d\udc0d \u2013 tool to automate the registration of functions and classes from a python package into a FastMCP instance.\nTips and Tricks\nOfficial prompt to inform LLMs how to use MCP\nWant to ask Claude about Model Context Protocol?\nCreate a Project, then add this file to it:\nhttps://modelcontextprotocol.io/llms-full.txt\nNow Claude can answer questions about writing MCP servers and how they work\nhttps://www.reddit.com/r/ClaudeAI/comments/1h3g01r/want_to_ask_claude_about_model_context_protocol/\nStar History"
      ],
      "source_url": "https://github.com/punkpeye/awesome-mcp-servers"
    }
  }
}